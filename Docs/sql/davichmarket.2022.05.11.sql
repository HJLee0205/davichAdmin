create sequence SEQ_AUTH_GRP_NO
    nocache
/

create sequence SEQ_BRAND_NO
    minvalue 0
    nocache
/

create sequence SEQ_CASH_RCT_NO
    nocache
/

create sequence SEQ_CASH_REFUND_NO
    nocache
/

create sequence SEQ_CLAIM_HIST_NO
    minvalue 0
    nocache
/

create sequence SEQ_CMNT_SEQ
    nocache
/

create sequence SEQ_CMN_FILE_NO
    nocache
/

create sequence SEQ_COMPANY_NO
    nocache
/

create sequence SEQ_CTG_DISPZONE_NO
    nocache
/

create sequence SEQ_ERP_MALL_IF_SEQ
/

create sequence SEQ_FAQ_LETT_NO
    nocache
/

create sequence SEQ_FILE_NO
    minvalue 0
    nocache
/

create sequence SEQ_FREEBIE_NO
    nocache
/

create sequence SEQ_FSEQUENCE
    nocache
/

create sequence SEQ_GOODS_IMGSET_NO
    increment by 6
    nocache
/

create sequence SEQ_GOODS_NO
    minvalue 0
    nocache
/

create sequence SEQ_ICON_NO
    nocache
/

create sequence SEQ_IF_NO
    minvalue 0
    nocache
/

create sequence SEQ_IF_SNO
    minvalue 0
    nocache
/

create sequence SEQ_INQUIRY_LETT_NO
    minvalue 0
    nocache
/

create sequence SEQ_LETT_NO
    minvalue 0
    nocache
/

create sequence SEQ_MAIL_SEND_NO
    nocache
/

create sequence SEQ_MEMBER_CARD_NO
    minvalue 999
    nocache
/

create sequence SEQ_MEMBER_CP_NO
    minvalue 0
    nocache
/

create sequence SEQ_MEMBER_GRADE_BNF_NO
    nocache
/

create sequence SEQ_MEMBER_GRADE_NO
    minvalue 0
    nocache
/

create sequence SEQ_MEMBER_NO
    minvalue 1000
    nocache
/

create sequence SEQ_MSGKEY
    nocache
/

create sequence SEQ_NOPB_PAYMENT_SEQ
    nocache
/

create sequence SEQ_OPT_NO
    nocache
/

create sequence SEQ_OPT_SEQ
    nocache
/

create sequence SEQ_REFUND_ACT_SEQ
    nocache
/

create sequence SEQ_REINWARE_ALARM_NO
    nocache
/

create sequence SEQ_SELLER_NO
    nocache
/

create sequence SEQ_SET_NO
    nocache
/

create sequence SEQ_SITE_NO
    nocache
/

create sequence SEQ_SMS_SEND_NO
    nocache
/

create sequence SEQ_SMS_SEQ
    nocache
/

create sequence SEQ_TAX_BILL_NO
    nocache
/

create sequence SEQ_TB_BANNED_WORD
    minvalue 0
    nocache
/

create sequence SEQ_TB_GOODS_BBS_LETT_NO
    minvalue 0
    nocache
/

create sequence SEQ_TC_MEMBER_POINT
    nocache
/

create sequence SEQ_TC_MEMBER_SVMN_PVD
    nocache
/

create sequence SEQ_TC_MEMBER_SVMN_USE
    nocache
/

create sequence SEQ_TC_MEMBER_SVMN_USE_DTL
    minvalue 0
    nocache
/

create sequence SEQ_TITLE_NO
    nocache
/

create sequence SEQ_TO_ADDED_AMOUNT_NO
    minvalue 0
    nocache
/

create sequence SEQ_TO_BASKET_ADD_OPT_NO
    nocache
/

create sequence SEQ_TO_CP_USE_NO
    nocache
/

create sequence SEQ_TO_DLVR_NO
    minvalue 0
    nocache
/

create sequence SEQ_TO_ORD_FREEBIE_SEQ
    nocache
/

create sequence SEQ_TO_PAYMENT_NO
    minvalue 0
    nocache
/

create sequence SEQ_WORK_SEQ
    nocache
/

create sequence MMS_MSG_SEQ
/

create sequence KKF_MSG_SEQ
/

create sequence SMS_MSG_SEQ
/

create sequence SEQ_1_TA_AREA_DLVR_DEFAULT
    nocache
/

create sequence SEQ_APPLY_SEQ_TEST
    minvalue 213
    nocache
/

create sequence BATCH_JOB_EXECUTION_SEQ
    minvalue 0
    maxvalue 9223372036854775807
/

create sequence BATCH_JOB_SEQ
    minvalue 0
    maxvalue 9223372036854775807
/

create sequence BATCH_STEP_EXECUTION_SEQ
    minvalue 0
    maxvalue 9223372036854775807
/

create sequence KKO_MSG_SEQ
    minvalue 0
    nocache
/

create sequence SEQ_1_ADD_OPT_DTL_NO
    nocache
/

create sequence SEQ_1_ADD_OPT_NO
    nocache
/

create sequence SEQ_1_BANNER
    nocache
/

create sequence SEQ_1_BASKET_NO
    nocache
/

create sequence SEQ_1_CLAIM_NO
    nocache
/

create sequence SEQ_1_CTG_NO
    minvalue 0
    nocache
/

create sequence SEQ_1_DISPLAY
    nocache
/

create sequence SEQ_1_HSCD_SEQ
    nocache
/

create sequence SEQ_1_MAIN_DISPLAY
    nocache
/

create sequence SEQ_1_MEMBER_GRADE_NO
    nocache
/

create sequence SEQ_1_POPUP
    nocache
/

create sequence SEQ_1_SKIN
    nocache
/

create sequence SEQ_1_TC_MEMBER_DELIVERY
    nocache
/

create sequence SEQ_1_TS_AREA_DLVR_SET
    nocache
/

create sequence SEQ_ADD_OPT_DTL_NO
    nocache
/

create sequence SEQ_ADD_OPT_NO
    nocache
/

create sequence SEQ_RSV_NO_SEQ
    minvalue 0
    nocache
/

create sequence SEQ_ITEM_NO
    minvalue 0
    nocache
/

create sequence SEQ_ATTR_NO
    nocache
/

create table TMP_DTL_IMG
(
    GOODS_NO        VARCHAR2(16),
    GOODS_IMGSET_NO NUMBER,
    GOODS_IMG_TYPE  VARCHAR2(50),
    IMG_PATH        VARCHAR2(500),
    IMG_NM          VARCHAR2(500),
    IMG_WIDTH       NUMBER,
    IMG_HEIGHT      NUMBER,
    URL             VARCHAR2(500),
    IMG_SIZE        NUMBER
)
/

create table TMP_DISP_IMG
(
    GOODS_NO                  VARCHAR2(16),
    DISP_IMG_PATH_TYPE_A      VARCHAR2(500),
    DISP_IMG_NM_TYPE_A        VARCHAR2(500),
    URL_A                     VARCHAR2(500),
    DISP_IMG_FILE_SIZE_TYPE_A NUMBER,
    DISP_IMG_PATH_TYPE_B      VARCHAR2(500),
    DISP_IMG_NM_TYPE_B        VARCHAR2(500),
    URL_B                     VARCHAR2(500),
    DISP_IMG_FILE_SIZE_TYPE_B NUMBER,
    DISP_IMG_PATH_TYPE_C      VARCHAR2(500),
    DISP_IMG_NM_TYPE_C        VARCHAR2(500),
    URL_C                     VARCHAR2(500),
    DISP_IMG_FILE_SIZE_TYPE_C NUMBER,
    DISP_IMG_PATH_TYPE_D      VARCHAR2(500),
    DISP_IMG_NM_TYPE_D        VARCHAR2(500),
    URL_D                     VARCHAR2(500),
    DISP_IMG_FILE_SIZE_TYPE_D NUMBER,
    DISP_IMG_PATH_TYPE_E      VARCHAR2(500),
    DISP_IMG_NM_TYPE_E        VARCHAR2(500),
    URL_E                     VARCHAR2(500),
    DISP_IMG_FILE_SIZE_TYPE_E NUMBER,
    DISP_IMG_PATH_TYPE_F      VARCHAR2(500),
    DISP_IMG_NM_TYPE_F        VARCHAR2(500),
    URL_F                     VARCHAR2(500),
    DISP_IMG_FILE_SIZE_TYPE_F NUMBER,
    DISP_IMG_PATH_TYPE_G      VARCHAR2(500),
    DISP_IMG_NM_TYPE_G        VARCHAR2(500),
    URL_G                     VARCHAR2(500),
    DISP_IMG_FILE_SIZE_TYPE_G NUMBER,
    DISP_IMG_PATH_TYPE_S      VARCHAR2(500),
    DISP_IMG_NM_TYPE_S        VARCHAR2(500),
    URL_S                     VARCHAR2(500),
    DISP_IMG_FILE_SIZE_TYPE_S NUMBER,
    DISP_IMG_PATH_TYPE_M      VARCHAR2(500),
    DISP_IMG_NM_TYPE_M        VARCHAR2(500),
    URL_M                     VARCHAR2(500),
    DISP_IMG_FILE_SIZE_TYPE_M NUMBER
)
/

create table TY_CALCULATE_LEDGER_DTL_0226
(
    CALCULATE_NO              VARCHAR2(13) not null,
    CALCULATE_DTL_NO          NUMBER       not null,
    CALCULATE_STNDRD_DT       DATE,
    ORDR_NO                   NUMBER(20),
    ORDR_NM                   VARCHAR2(100),
    ORD_DTTM                  DATE,
    ORD_NO                    NUMBER(16),
    ORD_DTL_SEQ               NUMBER,
    ORD_GOODS_NO              VARCHAR2(20),
    GOODS_NM                  VARCHAR2(100),
    DLVR_AMT                  NUMBER,
    PAYMENT_AMT               NUMBER(20, 2),
    SELLER_CMS_RATE           NUMBER(10, 2),
    INTEGRATION_POINT_USE_AMT NUMBER(10),
    D_MONEY_USE_AMT           NUMBER(10),
    D_MONEY_ACCU_AMT          NUMBER(10),
    D_MONEY_RECOM_ACCU_AMT    NUMBER(10),
    CP_DC_GB_CD               VARCHAR2(2),
    CP_DC_VALUE               NUMBER(10, 2),
    CP_DC_AMT                 NUMBER(10),
    MEMBER_GRADE_DC_GB_CD     VARCHAR2(2),
    MEMBER_GRADE_DC_VALUE     VARCHAR2(2),
    MEMBER_GRADE_DC_AMT       NUMBER(10, 2),
    PRMT_DC_GB_CD             VARCHAR2(2),
    PRMT_DC_VALUE             NUMBER(10, 2),
    PRMT_DC_AMT               NUMBER(10),
    LT_PVD_AMT                NUMBER(10),
    COURIER_NM                VARCHAR2(100),
    INVOICE_NO                VARCHAR2(30),
    CALCULATE_GB              VARCHAR2(2),
    PURCHASE_AMT              NUMBER(20, 2),
    SALE_CHANNEL              VARCHAR2(10),
    ORD_QTT                   NUMBER,
    PAYMENT_WAY_CD            VARCHAR2(20),
    REGR_NO                   NUMBER,
    REG_DTTM                  DATE,
    DC_AMT                    NUMBER(10),
    SELLER_NO                 NUMBER(10),
    CLAIM_NO                  NUMBER(10),
    STORE_NO                  VARCHAR2(20),
    STORE_NM                  VARCHAR2(200),
    PAYMENT_CMPLT_DTTM        DATE,
    PAYMENT_WAY_NM            VARCHAR2(100),
    PAYMENT_PG_CD             VARCHAR2(20),
    PAYMENT_PG_NM             VARCHAR2(100)
)
/

create table TT_ORD_STTCS_190227
(
    SITE_NO         NUMBER(19)  not null,
    YR              VARCHAR2(4) not null,
    MM              VARCHAR2(2) not null,
    DT              VARCHAR2(2) not null,
    HR              VARCHAR2(2) not null,
    PC_BUYR_CNT     NUMBER,
    PC_BUY_CNT      NUMBER,
    PC_SALE_AMT     NUMBER(20, 2),
    MOBILE_BUYR_CNT NUMBER,
    MOBILE_BUY_CNT  NUMBER,
    MOBILE_SALE_AMT NUMBER(20, 2),
    MANUAL_BUYR_CNT NUMBER,
    MANUAL_BUY_CNT  NUMBER,
    MANUAL_SALE_AMT NUMBER(20, 2),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE
)
/

create table TC_MEMBER_CP_1
(
    MEMBER_CP_NO        NUMBER(38),
    COUPON_NO           NUMBER(38),
    MEMBER_NO           NUMBER(38),
    USE_YN              VARCHAR2(1),
    USE_DTTM            DATE,
    CP_APPLY_START_DTTM DATE,
    CP_APPLY_END_DTTM   DATE,
    REGR_NO             NUMBER(38),
    REG_DTTM            DATE,
    UPDR_NO             NUMBER(38),
    UPD_DTTM            DATE,
    CP_ISSUE_NO         VARCHAR2(9)
)
/

comment on table TC_MEMBER_CP_1 is '회원 쿠폰'
/

create table SMS_MSG_LOG_201903
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_201903_1
    on SMS_MSG_LOG_201903 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_201903_2
    on SMS_MSG_LOG_201903 (PHONE)
/

create table TY_CALCULATE_LEDGER_20190226
(
    CALCULATE_NO        VARCHAR2(13) not null,
    CALCULATE_DTTM      DATE,
    CALCULATE_STARTDT   DATE,
    CALCULATE_ENDDT     DATE,
    SELLER_NO           NUMBER(10),
    SITE_NO             NUMBER(10),
    PAYMENT_AMT         NUMBER(20, 2),
    CMS_TOTAL           NUMBER(20, 2),
    CALCULATE_AMT       NUMBER(20, 2),
    CALCULATE_STATUS_CD VARCHAR2(2),
    REGR_NO             NUMBER,
    REG_DTTM            DATE,
    UPDR_NO             NUMBER,
    UPD_DTTM            DATE
)
/

create table MMS_MSG_LOG_201903
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_201903_1
    on MMS_MSG_LOG_201903 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_201903_2
    on MMS_MSG_LOG_201903 (PHONE)
/

create table TT_VISIT_PATH_ANLS_1
(
    SITE_NO       NUMBER(19),
    YR            VARCHAR2(4),
    MM            VARCHAR2(2),
    DT            VARCHAR2(2),
    EQPM_GB_CD    VARCHAR2(2),
    VISIT_PATH_CD VARCHAR2(2),
    VSTR_CNT      NUMBER(38),
    REGR_NO       NUMBER(38),
    REG_DTTM      DATE,
    UPDR_NO       NUMBER(38),
    UPD_DTTM      DATE
)
/

comment on table TT_VISIT_PATH_ANLS_1 is '방문 경로 분석'
/

create table KKO_FRIENDS_MSG
(
    MSGKEY         NUMBER(15)               not null,
    SERIALNUM      NUMBER(10),
    ID             VARCHAR2(16),
    STATUS         VARCHAR2(2)  default '1' not null,
    PHONE          VARCHAR2(16) default ''  not null,
    CALLBACK       VARCHAR2(16) default ''  not null,
    REQDATE        DATE                     not null,
    SENTDATE       DATE,
    RSLTDATE       DATE,
    REPORTDATE     DATE,
    RSLT           VARCHAR2(10) default '00',
    MSG_RSLT       VARCHAR2(10) default '00',
    NET            VARCHAR2(10),
    MSG            VARCHAR2(4000),
    TEMPLATE_CODE  VARCHAR2(10),
    FAILED_TYPE    VARCHAR2(3),
    FAILED_SUBJECT VARCHAR2(50),
    FAILED_MSG     VARCHAR2(4000),
    FAILED_IMG     VARCHAR2(256),
    PROFILE_KEY    VARCHAR2(100),
    URL            VARCHAR2(1000),
    URL_BUTTON_TXT VARCHAR2(160),
    IMG_PATH       VARCHAR2(256),
    IMG_URL        VARCHAR2(1000),
    BUTTON_JSON    VARCHAR2(1000),
    AD_FLAG        VARCHAR2(1),
    ETC1           VARCHAR2(160),
    ETC2           VARCHAR2(160),
    ETC3           VARCHAR2(160),
    ETC4           VARCHAR2(160),
    ETC5           VARCHAR2(160),
    ETC6           VARCHAR2(160)
)
/

create index IDX2_KKO_FRIENDS_MSG_1
    on KKO_FRIENDS_MSG (STATUS, REQDATE)
/

create index IDX2_KKO_FRIENDS_MSG_2
    on KKO_FRIENDS_MSG (PHONE)
/

create unique index PK2_KKO_FRIENDS_MSG
    on KKO_FRIENDS_MSG (MSGKEY)
/

alter table KKO_FRIENDS_MSG
    add constraint KKO_FRIENDS_MSG_PK
        primary key (MSGKEY)
/

create table KKO_FRIENDS_MSG_LOG
(
    MSGKEY         NUMBER(15)               not null,
    SERIALNUM      NUMBER(10),
    ID             VARCHAR2(16),
    STATUS         VARCHAR2(2)  default '1' not null,
    PHONE          VARCHAR2(16) default ''  not null,
    CALLBACK       VARCHAR2(16) default ''  not null,
    REQDATE        DATE                     not null,
    SENTDATE       DATE,
    RSLTDATE       DATE,
    REPORTDATE     DATE,
    RSLT           VARCHAR2(10) default '00',
    MSG_RSLT       VARCHAR2(10) default '00',
    NET            VARCHAR2(10),
    MSG            VARCHAR2(4000),
    TEMPLATE_CODE  VARCHAR2(10),
    FAILED_TYPE    VARCHAR2(3),
    FAILED_SUBJECT VARCHAR2(50),
    FAILED_MSG     VARCHAR2(4000),
    FAILED_IMG     VARCHAR2(256),
    PROFILE_KEY    VARCHAR2(100),
    URL            VARCHAR2(1000),
    URL_BUTTON_TXT VARCHAR2(160),
    IMG_PATH       VARCHAR2(256),
    IMG_URL        VARCHAR2(1000),
    BUTTON_JSON    VARCHAR2(1000),
    AD_FLAG        VARCHAR2(1),
    ETC1           VARCHAR2(160),
    ETC2           VARCHAR2(160),
    ETC3           VARCHAR2(160),
    ETC4           VARCHAR2(160),
    ETC5           VARCHAR2(160),
    ETC6           VARCHAR2(160)
)
/

create index IDX2_KKO_FRIENDS_MSG_LOG_1
    on KKO_FRIENDS_MSG_LOG (STATUS, REQDATE)
/

create index IDX2_KKO_FRIENDS_MSG_LOG_2
    on KKO_FRIENDS_MSG_LOG (PHONE)
/

create table SMS_MSG_BARCODE
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_BARCODE_1
    on SMS_MSG_BARCODE (STATUS, REQDATE)
/

create index IDX_SMS_MSG_BARCODE_2
    on SMS_MSG_BARCODE (PHONE)
/

create unique index PK_SMS_MSG_BARCODE
    on SMS_MSG_BARCODE (MSGKEY)
/

alter table SMS_MSG_BARCODE
    add constraint SMS_MSG_BARCODE_PK
        primary key (MSGKEY)
/

create table SMS_MSG_BARCODE_LOG
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_BARCODE_LOG_1
    on SMS_MSG_BARCODE_LOG (STATUS, REQDATE)
/

create index IDX_SMS_MSG_BARCODE_LOG_2
    on SMS_MSG_BARCODE_LOG (PHONE)
/

create table MMS_MSG_BARCODE
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_BARCODE_1
    on MMS_MSG_BARCODE (STATUS, REQDATE)
/

create index IDX_MMS_MSG_BARCODE_2
    on MMS_MSG_BARCODE (PHONE)
/

create unique index PK_MMS_MSG_BARCODE
    on MMS_MSG_BARCODE (MSGKEY)
/

alter table MMS_MSG_BARCODE
    add constraint MMS_MSG_BARCODE_PK
        primary key (MSGKEY)
/

create table MSG_PHONE_BARCODE
(
    MSGTYPE     CHAR         default 'S' not null,
    MSGKEY      NUMBER(15)               not null,
    PHONE       VARCHAR2(16)             not null,
    CALLBACK    VARCHAR2(16)             not null,
    STATUS      VARCHAR2(2)  default '1' not null,
    RSLTDATE    DATE,
    REPORTDATE  DATE,
    RSLT        VARCHAR2(10) default '00',
    NET         VARCHAR2(10),
    REPLACE_CNT NUMBER(10)   default 0   not null,
    REPLACE_MSG VARCHAR2(256)
)
/

create unique index PK_MSG_PHONE_BARCODE
    on MSG_PHONE_BARCODE (MSGTYPE, MSGKEY, PHONE)
/

alter table MSG_PHONE_BARCODE
    add constraint MSG_PHONE_BARCODE_PK
        primary key (MSGTYPE, MSGKEY, PHONE)
/

create table KKO_MSG
(
    MSGKEY         NUMBER(15)               not null,
    SERIALNUM      NUMBER(10),
    ID             VARCHAR2(16),
    STATUS         VARCHAR2(2)  default '1' not null,
    PHONE          VARCHAR2(16) default ''  not null,
    CALLBACK       VARCHAR2(16) default ''  not null,
    REQDATE        DATE                     not null,
    SENTDATE       DATE,
    RSLTDATE       DATE,
    REPORTDATE     DATE,
    RSLT           VARCHAR2(10) default '00',
    MSG_RSLT       VARCHAR2(10) default '00',
    NET            VARCHAR2(10),
    MSG            VARCHAR2(4000),
    TEMPLATE_CODE  VARCHAR2(10),
    FAILED_TYPE    VARCHAR2(3),
    FAILED_SUBJECT VARCHAR2(50),
    FAILED_MSG     VARCHAR2(4000),
    FAILED_IMG     VARCHAR2(256),
    PROFILE_KEY    VARCHAR2(100),
    URL            VARCHAR2(1000),
    URL_BUTTON_TXT VARCHAR2(160),
    IMG_PATH       VARCHAR2(256),
    IMG_URL        VARCHAR2(1000),
    BUTTON_JSON    VARCHAR2(1000),
    AD_FLAG        VARCHAR2(1),
    ETC1           VARCHAR2(160),
    ETC2           VARCHAR2(160),
    ETC3           VARCHAR2(160),
    ETC4           VARCHAR2(160),
    ETC5           VARCHAR2(160),
    ETC6           VARCHAR2(160),
    TEMPLATE_TITLE VARCHAR2(200),
    WI_FLAG        VARCHAR2(1),
    PRICE          VARCHAR2(10),
    CURRENCY_TYPE  VARCHAR2(3)
)
/

create index IDX1_KKO_MSG_1
    on KKO_MSG (STATUS, REQDATE)
/

create index IDX1_KKO_MSG_2
    on KKO_MSG (PHONE)
/

create unique index PK1_KKO_MSG
    on KKO_MSG (MSGKEY)
/

alter table KKO_MSG
    add constraint KKO_MSG_PK
        primary key (MSGKEY)
/

create trigger KKO_MSG_I
    before insert
    on KKO_MSG
    for each row
DECLARE
Atime         number(2);

BEGIN

    /*방문예약 알림톡 전송시간 설정*/
      if :new.template_code = 'mk010' then
      
          Atime := to_number(to_char(:new.reqdate,'hh24'));
          
          IF Atime between 0 and 8 THEN 
             :new.reqdate   := TRUNC(:new.reqdate) + 09/24 + 00/1440 ;
          elsif Atime between 22 and 23 then
             :new.reqdate   := TRUNC(:new.reqdate) + 1 + 09/24 + 00/1440 ;
          end if;
          
      end if;

END;
/

create table KKO_MSG_LOG
(
    MSGKEY         NUMBER(15)               not null,
    SERIALNUM      NUMBER(10),
    ID             VARCHAR2(16),
    STATUS         VARCHAR2(2)  default '1' not null,
    PHONE          VARCHAR2(16) default ''  not null,
    CALLBACK       VARCHAR2(16) default ''  not null,
    REQDATE        DATE                     not null,
    SENTDATE       DATE,
    RSLTDATE       DATE,
    REPORTDATE     DATE,
    RSLT           VARCHAR2(10) default '00',
    MSG_RSLT       VARCHAR2(10) default '00',
    NET            VARCHAR2(10),
    MSG            VARCHAR2(4000),
    TEMPLATE_CODE  VARCHAR2(10),
    FAILED_TYPE    VARCHAR2(3),
    FAILED_SUBJECT VARCHAR2(50),
    FAILED_MSG     VARCHAR2(4000),
    FAILED_IMG     VARCHAR2(256),
    PROFILE_KEY    VARCHAR2(100),
    URL            VARCHAR2(1000),
    URL_BUTTON_TXT VARCHAR2(160),
    IMG_PATH       VARCHAR2(256),
    IMG_URL        VARCHAR2(1000),
    BUTTON_JSON    VARCHAR2(1000),
    AD_FLAG        VARCHAR2(1),
    ETC1           VARCHAR2(160),
    ETC2           VARCHAR2(160),
    ETC3           VARCHAR2(160),
    ETC4           VARCHAR2(160),
    ETC5           VARCHAR2(160),
    ETC6           VARCHAR2(160),
    TEMPLATE_TITLE VARCHAR2(200),
    WI_FLAG        VARCHAR2(1),
    PRICE          VARCHAR2(10),
    CURRENCY_TYPE  VARCHAR2(3)
)
/

comment on column KKO_MSG_LOG.ETC1 is '？꾩넚？？emp_no)'
/

comment on column KKO_MSG_LOG.ETC2 is '？꾩넚？？？？怨좉컼踰덊샇)'
/

comment on column KKO_MSG_LOG.ETC3 is '？꾪몴踰덊샇(A+？먮ℓ？쇱옄+trxn_no+pos_no)'
/

create index IDX1_KKO_MSG_LOG_1
    on KKO_MSG_LOG (STATUS, REQDATE)
/

create index IDX1_KKO_MSG_LOG_2
    on KKO_MSG_LOG (PHONE)
/

create index IDX1_KKO_MSG_LOG_3
    on KKO_MSG_LOG (TEMPLATE_CODE, ETC3, STATUS)
/

create table SMS_MSG_LOG_201809
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_201809_1
    on SMS_MSG_LOG_201809 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_201809_2
    on SMS_MSG_LOG_201809 (PHONE)
/

create table MMS_MSG_LOG_201809
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_201809_1
    on MMS_MSG_LOG_201809 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_201809_2
    on MMS_MSG_LOG_201809 (PHONE)
/

create table SMS_MSG
(
    MSGKEY     NUMBER(15)               not null
        constraint PK_SMS_MSG
            primary key,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_1
    on SMS_MSG (STATUS, REQDATE)
/

create index IDX_SMS_MSG_2
    on SMS_MSG (PHONE)
/

create table MMS_MSG
(
    MSGKEY          NUMBER(15)               not null
        constraint PK_MMS_MSG
            primary key,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_1
    on MMS_MSG (STATUS, REQDATE)
/

create index IDX_MMS_MSG_2
    on MMS_MSG (PHONE)
/

create table MSG_PHONE
(
    MSGTYPE     CHAR         default 'S' not null,
    MSGKEY      NUMBER(15)               not null,
    PHONE       VARCHAR2(16)             not null,
    CALLBACK    VARCHAR2(16)             not null,
    STATUS      VARCHAR2(2)  default '1' not null,
    RSLTDATE    DATE,
    REPORTDATE  DATE,
    RSLT        VARCHAR2(10) default '00',
    NET         VARCHAR2(10),
    REPLACE_CNT NUMBER(10)   default 0   not null,
    REPLACE_MSG VARCHAR2(256),
    constraint PK_MSG_PHONE
        primary key (MSGTYPE, MSGKEY, PHONE)
)
/

create table KKO_SMS_MSG_LOG
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    PHONE      VARCHAR2(70) default ''  not null,
    CALLBACK   VARCHAR2(70) default ''  not null,
    SENTDATE   DATE,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_KKO_SMS_MSG_LOG_1
    on KKO_SMS_MSG_LOG (STATUS, REQDATE)
/

create index IDX_KKO_SMS_MSG_LOG_2
    on KKO_SMS_MSG_LOG (PHONE)
/

create table KKO_MMS_MSG_LOG
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(70) default ''  not null,
    CALLBACK        VARCHAR2(70) default ''  not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_KKO_MMS_MSG_LOG_1
    on KKO_MMS_MSG_LOG (STATUS, REQDATE)
/

create index IDX_KKO_MMS_MSG_LOG_2
    on KKO_MMS_MSG_LOG (PHONE)
/

create table KKO_SMS_MSG
(
    MSGKEY     NUMBER(15)               not null
        constraint PK_KKO_SMS_MSG
            primary key,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    SENTDATE   DATE,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_KKO_SMS_MSG_1
    on KKO_SMS_MSG (STATUS, REQDATE)
/

create index IDX_KKO_SMS_MSG_2
    on KKO_SMS_MSG (PHONE)
/

create table KKO_MMS_MSG
(
    MSGKEY          NUMBER(15)               not null
        constraint PK_KKO_MMS_MSG
            primary key,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_KKO_MMS_MSG_1
    on KKO_MMS_MSG (STATUS, REQDATE)
/

create index IDX_KKO_MMS_MSG_2
    on KKO_MMS_MSG (PHONE)
/

create table BATCH_JOB_INSTANCE
(
    JOB_INSTANCE_ID NUMBER(19)    not null,
    VERSION         NUMBER(19),
    JOB_NAME        VARCHAR2(100) not null,
    JOB_KEY         VARCHAR2(32)  not null
)
/

create unique index JOB_INST_UN
    on BATCH_JOB_INSTANCE (JOB_NAME, JOB_KEY)
/

create table TA_CMN_CD_GRP
(
    GRP_CD          VARCHAR2(50) not null
        constraint IDX_TA_CMN_CD_GRP_PK
            primary key,
    GRP_NM          VARCHAR2(50),
    GRP_DSCRT       VARCHAR2(500),
    USE_YN          CHAR,
    USER_DEFINE1_NM VARCHAR2(50),
    USER_DEFINE2_NM VARCHAR2(50),
    USER_DEFINE3_NM VARCHAR2(50),
    USER_DEFINE4_NM VARCHAR2(50),
    USER_DEFINE5_NM VARCHAR2(50),
    REG_DTTM        DATE,
    REGR_NO         NUMBER,
    UPD_DTTM        DATE,
    UPDR_NO         NUMBER,
    DEL_YN          CHAR,
    DEL_DTTM        DATE,
    DELR_NO         NUMBER
)
/

comment on table TA_CMN_CD_GRP is '공통 코드 그룹'
/

comment on column TA_CMN_CD_GRP.GRP_CD is '그룹 코드'
/

comment on column TA_CMN_CD_GRP.GRP_NM is '그룹 명'
/

comment on column TA_CMN_CD_GRP.GRP_DSCRT is '그룹 설명'
/

comment on column TA_CMN_CD_GRP.USE_YN is '사용 여부'
/

comment on column TA_CMN_CD_GRP.USER_DEFINE1_NM is '사용자 정의1 명'
/

comment on column TA_CMN_CD_GRP.USER_DEFINE2_NM is '사용자 정의2 명'
/

comment on column TA_CMN_CD_GRP.USER_DEFINE3_NM is '사용자 정의3 명'
/

comment on column TA_CMN_CD_GRP.USER_DEFINE4_NM is '사용자 정의4 명'
/

comment on column TA_CMN_CD_GRP.USER_DEFINE5_NM is '사용자 정의5 명'
/

comment on column TA_CMN_CD_GRP.REG_DTTM is '등록 일시'
/

comment on column TA_CMN_CD_GRP.REGR_NO is '등록자 번호'
/

comment on column TA_CMN_CD_GRP.UPD_DTTM is '수정 일시'
/

comment on column TA_CMN_CD_GRP.UPDR_NO is '수정자 번호'
/

comment on column TA_CMN_CD_GRP.DEL_YN is '삭제 여부'
/

comment on column TA_CMN_CD_GRP.DEL_DTTM is '삭제 일시'
/

comment on column TA_CMN_CD_GRP.DELR_NO is '삭제자 번호'
/

create table TA_MENU
(
    MENU_ID      VARCHAR2(20)  not null
        constraint IDX_TA_MENU_PK
            primary key,
    UP_MENU_ID   VARCHAR2(20)
        constraint FK_MENU_1
            references TA_MENU
                on delete set null,
    MENU_NM      VARCHAR2(100) not null,
    MENU_DSCRT   VARCHAR2(300),
    SORT_SEQ     NUMBER,
    USE_YN       CHAR,
    MENU_LVL     NUMBER        not null,
    URL          VARCHAR2(300),
    SITE_TYPE_CD VARCHAR2(1)   not null,
    SCREEN_YN    VARCHAR2(1),
    REG_DTTM     DATE,
    REGR_NO      NUMBER default 1,
    UPD_DTTM     DATE,
    UPDR_NO      NUMBER default 1
)
/

comment on table TA_MENU is '메뉴'
/

comment on column TA_MENU.MENU_ID is '메뉴 아이디'
/

comment on column TA_MENU.UP_MENU_ID is '상위 메뉴 아이디'
/

comment on column TA_MENU.MENU_NM is '메뉴 명'
/

comment on column TA_MENU.MENU_DSCRT is '메뉴 설명'
/

comment on column TA_MENU.SORT_SEQ is '정렬 순서'
/

comment on column TA_MENU.USE_YN is '사용 여부'
/

comment on column TA_MENU.MENU_LVL is '메뉴 레벨'
/

comment on column TA_MENU.URL is 'URL'
/

comment on column TA_MENU.SITE_TYPE_CD is '사이트 유형 코드'
/

comment on column TA_MENU.SCREEN_YN is '화면 여부'
/

comment on column TA_MENU.REG_DTTM is '등록 일시'
/

comment on column TA_MENU.REGR_NO is '등록자 번호'
/

comment on column TA_MENU.UPD_DTTM is '수정 일시'
/

comment on column TA_MENU.UPDR_NO is '수정자 번호'
/

create table TA_SEQ
(
    SITE_NO NUMBER(19)   not null,
    SEQ_GB  VARCHAR2(50) not null,
    SEQ     NUMBER(19),
    constraint IDX_TA_SEQ_PK
        primary key (SITE_NO, SEQ_GB)
)
/

comment on table TA_SEQ is '순번'
/

comment on column TA_SEQ.SITE_NO is '사이트 번호'
/

comment on column TA_SEQ.SEQ_GB is '순번 구분'
/

comment on column TA_SEQ.SEQ is '순번'
/

create table TA_SITE_SYS_WORK
(
    WORK_SEQ     NUMBER(19) not null
        constraint IDX_TA_SITE_SYS_WORK_PK
            primary key,
    IDX          NUMBER(19),
    SITE_ID      VARCHAR2(50),
    MANAGER_ID   VARCHAR2(20),
    MANAGER_PW   VARCHAR2(300),
    SITE_TYPE_CD VARCHAR2(1),
    SVC_START_DT VARCHAR2(8),
    SVC_END_DT   VARCHAR2(8),
    HOMEPAGE_ID  VARCHAR2(20),
    DISK         NUMBER,
    TRAFFIC      NUMBER,
    IP           VARCHAR2(50),
    VIP          VARCHAR2(255),
    APPLY_CD     NUMBER,
    STATUS_CD    VARCHAR2(1),
    REG_DTTM     DATE,
    UPD_DTTM     DATE
)
/

comment on table TA_SITE_SYS_WORK is '사이트 시스템 작업'
/

comment on column TA_SITE_SYS_WORK.WORK_SEQ is '작업 순번'
/

comment on column TA_SITE_SYS_WORK.IDX is 'IDX'
/

comment on column TA_SITE_SYS_WORK.SITE_ID is '사이트 ID'
/

comment on column TA_SITE_SYS_WORK.MANAGER_ID is '관리자 아이디'
/

comment on column TA_SITE_SYS_WORK.MANAGER_PW is '관리자 비밀번호'
/

comment on column TA_SITE_SYS_WORK.SITE_TYPE_CD is '사이트 유형 코드'
/

comment on column TA_SITE_SYS_WORK.SVC_START_DT is '서비스 시작 일자'
/

comment on column TA_SITE_SYS_WORK.SVC_END_DT is '서비스 종료 일자'
/

comment on column TA_SITE_SYS_WORK.HOMEPAGE_ID is '홈페이지 아이디'
/

comment on column TA_SITE_SYS_WORK.DISK is '디스크'
/

comment on column TA_SITE_SYS_WORK.TRAFFIC is '트래픽'
/

comment on column TA_SITE_SYS_WORK.IP is 'IP'
/

comment on column TA_SITE_SYS_WORK.VIP is 'VIP'
/

comment on column TA_SITE_SYS_WORK.APPLY_CD is '신청 코드'
/

comment on column TA_SITE_SYS_WORK.STATUS_CD is '상태 코드'
/

comment on column TA_SITE_SYS_WORK.REG_DTTM is '등록 일시'
/

comment on column TA_SITE_SYS_WORK.UPD_DTTM is '수정 일시'
/

create unique index IDX_TA_SITE_SYS_WORK_1
    on TA_SITE_SYS_WORK (IDX desc)
/

create table TC_DORMANT_MEMBER
(
    MEMBER_NO                NUMBER not null,
    DORMANT_DTTM             DATE   not null,
    SITE_NO                  NUMBER(19),
    MEMBER_NM                VARCHAR2(100),
    BIRTH                    VARCHAR2(100),
    BORN_YEAR                VARCHAR2(10),
    BORN_MONTH               VARCHAR2(5),
    GENDER_GB_CD             VARCHAR2(30),
    NTN_GB_CD                VARCHAR2(10),
    JOIN_DTTM                DATE,
    CERTIFY_METHOD_CD        VARCHAR2(10),
    EMAIL_RECV_YN            VARCHAR2(1),
    SMS_RECV_YN              VARCHAR2(1),
    MEMBER_STATUS_CD         VARCHAR2(10),
    LOGIN_ID                 VARCHAR2(300) default NULL,
    PW                       VARCHAR2(300),
    TEL                      VARCHAR2(50),
    MOBILE                   VARCHAR2(50),
    EMAIL                    VARCHAR2(100),
    JOIN_PATH_CD             VARCHAR2(10),
    PW_CHG_DTTM              DATE,
    LOGIN_FAIL_CNT           NUMBER,
    STRTNB_ADDR              VARCHAR2(500),
    ROAD_ADDR                VARCHAR2(500),
    DTL_ADDR                 VARCHAR2(500),
    NEW_POST_NO              VARCHAR2(50),
    MANAGER_MEMO             VARCHAR2(1000),
    REALNM_CERTIFY_YN        VARCHAR2(1),
    MEMBER_GRADE_NO          NUMBER,
    GRADE_AUTO_REARRANGE_YN  VARCHAR2(1),
    MEMBER_CI                VARCHAR2(300),
    MEMBER_DI                VARCHAR2(300),
    MEMBER_GB_CD             VARCHAR2(10),
    ADULT_CERTIFY_YN         VARCHAR2(1),
    NEXT_PW_CHG_SCD_DTTM     DATE,
    FRG_ADDR_COUNTRY         VARCHAR2(300),
    FRG_ADDR_CITY            VARCHAR2(300),
    FRG_ADDR_STATE           VARCHAR2(300),
    FRG_ADDR_ZIP_CODE        VARCHAR2(100),
    FRG_ADDR_DTL1            VARCHAR2(300),
    FRG_ADDR_DTL2            VARCHAR2(300),
    JOIN_DEVICE_TYPE         VARCHAR2(2),
    REGR_NO                  NUMBER,
    REG_DTTM                 DATE,
    UPDR_NO                  NUMBER,
    UPD_DTTM                 DATE,
    BIZ_REG_NO               VARCHAR2(10),
    RECV_RJT_YN              VARCHAR2(1)   default 'N',
    MEMBER_TYPE_CD           CHAR(2)       default 01,
    MANAGER_NM               VARCHAR2(100),
    BIZ_FILE_PATH            VARCHAR2(300),
    BIZ_FILE_NM              VARCHAR2(300),
    BIZ_FILE_SIZE            NUMBER,
    BIZ_ORG_FILE_NM          VARCHAR2(300),
    EMAIL_CERTIFY_VALUE      VARCHAR2(300),
    MEMBER_CARD_NO           VARCHAR2(20),
    CUSTOM_STORE_NO          VARCHAR2(10),
    CUSTOM_STORE_NM          VARCHAR2(200),
    INTEGRATION_MEMBER_GB_CD VARCHAR2(2),
    MOBILE_SMR               VARCHAR2(4),
    APP_TOKEN                VARCHAR2(300),
    RECOM_MEMBER_NO          NUMBER,
    APP_LAST_LOGIN_DTTM      DATE,
    AUTO_LOGIN_GB            VARCHAR2(1),
    LOCA_GB                  VARCHAR2(1),
    NOTI_GB                  VARCHAR2(1),
    EVENT_GB                 VARCHAR2(1),
    NEWS_GB                  VARCHAR2(1),
    MEMBER_INTEGRATION_DTTM  DATE,
    STORE_JOIN_YN            VARCHAR2(1),
    OS_TYPE                  VARCHAR2(10),
    CEO_NM                   VARCHAR2(50),
    ID_CHG_YN                VARCHAR2(1)   default 'N',
    ID_CHG_DTTM              DATE,
    APP_FIRST_LOGIN_DTTM     DATE,
    constraint IDX_TC_DORMANT_MEMBER_PK
        primary key (MEMBER_NO, DORMANT_DTTM)
)
/

comment on table TC_DORMANT_MEMBER is '휴면 회원'
/

comment on column TC_DORMANT_MEMBER.MEMBER_NO is '회원 번호'
/

comment on column TC_DORMANT_MEMBER.DORMANT_DTTM is '휴면 일시'
/

comment on column TC_DORMANT_MEMBER.SITE_NO is '사이트 번호'
/

comment on column TC_DORMANT_MEMBER.MEMBER_NM is '회원 명'
/

comment on column TC_DORMANT_MEMBER.BIRTH is '생일'
/

comment on column TC_DORMANT_MEMBER.BORN_YEAR is '생년'
/

comment on column TC_DORMANT_MEMBER.BORN_MONTH is '생월'
/

comment on column TC_DORMANT_MEMBER.GENDER_GB_CD is '성별 구분 코드'
/

comment on column TC_DORMANT_MEMBER.NTN_GB_CD is '국적 구분 코드'
/

comment on column TC_DORMANT_MEMBER.JOIN_DTTM is '가입 일시'
/

comment on column TC_DORMANT_MEMBER.CERTIFY_METHOD_CD is '인증 방법 코드'
/

comment on column TC_DORMANT_MEMBER.EMAIL_RECV_YN is '이메일 수신 여부'
/

comment on column TC_DORMANT_MEMBER.SMS_RECV_YN is 'SMS 수신 여부'
/

comment on column TC_DORMANT_MEMBER.MEMBER_STATUS_CD is '회원 상태 코드'
/

comment on column TC_DORMANT_MEMBER.LOGIN_ID is '로그인 아이디'
/

comment on column TC_DORMANT_MEMBER.PW is '비밀번호'
/

comment on column TC_DORMANT_MEMBER.TEL is '전화'
/

comment on column TC_DORMANT_MEMBER.MOBILE is '휴대폰'
/

comment on column TC_DORMANT_MEMBER.EMAIL is '이메일'
/

comment on column TC_DORMANT_MEMBER.JOIN_PATH_CD is '가입 경로 코드'
/

comment on column TC_DORMANT_MEMBER.PW_CHG_DTTM is '비밀번호 변경 일시'
/

comment on column TC_DORMANT_MEMBER.LOGIN_FAIL_CNT is '로그인 실패 수'
/

comment on column TC_DORMANT_MEMBER.STRTNB_ADDR is '번지 주소'
/

comment on column TC_DORMANT_MEMBER.ROAD_ADDR is '도로 주소'
/

comment on column TC_DORMANT_MEMBER.DTL_ADDR is '상세 주소'
/

comment on column TC_DORMANT_MEMBER.NEW_POST_NO is '신 우편 번호'
/

comment on column TC_DORMANT_MEMBER.MANAGER_MEMO is '관리자 메모'
/

comment on column TC_DORMANT_MEMBER.REALNM_CERTIFY_YN is '실명 인증 여부'
/

comment on column TC_DORMANT_MEMBER.MEMBER_GRADE_NO is '회원 등급 번호'
/

comment on column TC_DORMANT_MEMBER.GRADE_AUTO_REARRANGE_YN is '등급 자동 산정 여부'
/

comment on column TC_DORMANT_MEMBER.MEMBER_CI is '회원 CI'
/

comment on column TC_DORMANT_MEMBER.MEMBER_DI is '회원 DI'
/

comment on column TC_DORMANT_MEMBER.MEMBER_GB_CD is '회원 구분 코드'
/

comment on column TC_DORMANT_MEMBER.ADULT_CERTIFY_YN is '성인 인증 여부'
/

comment on column TC_DORMANT_MEMBER.NEXT_PW_CHG_SCD_DTTM is '다음 비밀번호 변경 예정 일시'
/

comment on column TC_DORMANT_MEMBER.FRG_ADDR_COUNTRY is '해외 주소 COUNTRY'
/

comment on column TC_DORMANT_MEMBER.FRG_ADDR_CITY is '해외 주소 CITY'
/

comment on column TC_DORMANT_MEMBER.FRG_ADDR_STATE is '해외 주소 STATE'
/

comment on column TC_DORMANT_MEMBER.FRG_ADDR_ZIP_CODE is '해외 주소 ZIP CODE'
/

comment on column TC_DORMANT_MEMBER.FRG_ADDR_DTL1 is '해외 주소 상세1'
/

comment on column TC_DORMANT_MEMBER.FRG_ADDR_DTL2 is '해외 주소 상세2'
/

comment on column TC_DORMANT_MEMBER.JOIN_DEVICE_TYPE is '가입 장치 유형'
/

comment on column TC_DORMANT_MEMBER.REGR_NO is '등록자 번호'
/

comment on column TC_DORMANT_MEMBER.REG_DTTM is '등록 일시'
/

comment on column TC_DORMANT_MEMBER.UPDR_NO is '수정자 번호'
/

comment on column TC_DORMANT_MEMBER.UPD_DTTM is '수정 일시'
/

comment on column TC_DORMANT_MEMBER.BIZ_REG_NO is '사업자 등록 번호'
/

comment on column TC_DORMANT_MEMBER.RECV_RJT_YN is '수신 거부 여부'
/

comment on column TC_DORMANT_MEMBER.MEMBER_TYPE_CD is '회원 유형 코드'
/

comment on column TC_DORMANT_MEMBER.MANAGER_NM is '담당자 명'
/

comment on column TC_DORMANT_MEMBER.MEMBER_CARD_NO is '회원카드번호'
/

comment on column TC_DORMANT_MEMBER.INTEGRATION_MEMBER_GB_CD is '통합 회원 구분 코드'
/

comment on column TC_DORMANT_MEMBER.MOBILE_SMR is '휴대폰 요약'
/

comment on column TC_DORMANT_MEMBER.RECOM_MEMBER_NO is '추천 회원 번호'
/

comment on column TC_DORMANT_MEMBER.MEMBER_INTEGRATION_DTTM is '회원 통합 일시'
/

comment on column TC_DORMANT_MEMBER.STORE_JOIN_YN is '매장 가입 여부'
/

comment on column TC_DORMANT_MEMBER.CEO_NM is '대표자 명'
/

comment on column TC_DORMANT_MEMBER.ID_CHG_YN is '아이디 변경 여부'
/

comment on column TC_DORMANT_MEMBER.ID_CHG_DTTM is '아이디 변경 일시'
/

comment on column TC_DORMANT_MEMBER.APP_FIRST_LOGIN_DTTM is '앱 최초 로그인 일시'
/

create unique index IDX_TC_DORMANT_MEMBER_INDX01
    on TC_DORMANT_MEMBER (MEMBER_CARD_NO)
/

create index IDX_TC_DORMANT_MEMBER_INDX02
    on TC_DORMANT_MEMBER (SITE_NO, LOGIN_ID)
/

create table TC_MEMBER_AUTH
(
    USER_EMAIL VARCHAR2(100),
    AUTH_KEY   VARCHAR2(100),
    AUTH_DATE  DATE default SYSDATE
)
/

comment on table TC_MEMBER_AUTH is '회원인증'
/

comment on column TC_MEMBER_AUTH.USER_EMAIL is '이메일'
/

comment on column TC_MEMBER_AUTH.AUTH_KEY is '키'
/

comment on column TC_MEMBER_AUTH.AUTH_DATE is '인증일시'
/

create table TC_STR_BOOKING_BANNER
(
    BANNER_NO   NUMBER(38)    not null
        constraint TC_STR_BOOKING_BANNER_PK
            primary key,
    STR_CODE    VARCHAR2(4)   not null,
    ORG_FILE_NM VARCHAR2(100),
    FILE_PATH   VARCHAR2(100) not null,
    FILE_NM     VARCHAR2(50)  not null,
    FILE_TYPE   VARCHAR2(20),
    FILE_SIZE   NUMBER,
    REG_ID      VARCHAR2(20),
    REG_DATE    DATE,
    IS_VIEW     VARCHAR2(1)
)
/

comment on table TC_STR_BOOKING_BANNER is 'KIOSK 대기화면 배너'
/

comment on column TC_STR_BOOKING_BANNER.BANNER_NO is '배너 번호'
/

comment on column TC_STR_BOOKING_BANNER.STR_CODE is '가맹점'
/

comment on column TC_STR_BOOKING_BANNER.ORG_FILE_NM is '파일 원본명'
/

comment on column TC_STR_BOOKING_BANNER.FILE_PATH is '파일경로'
/

comment on column TC_STR_BOOKING_BANNER.FILE_NM is '파일명'
/

comment on column TC_STR_BOOKING_BANNER.FILE_TYPE is '파일타입'
/

comment on column TC_STR_BOOKING_BANNER.FILE_SIZE is '파일용량'
/

comment on column TC_STR_BOOKING_BANNER.REG_ID is '등록자ID'
/

comment on column TC_STR_BOOKING_BANNER.REG_DATE is '등록일'
/

comment on column TC_STR_BOOKING_BANNER.IS_VIEW is '보여주기(Y/N)'
/

create table TC_STR_BOOKING_CALL
(
    STR_CODE   VARCHAR2(4) not null
        constraint TC_STR_BOOKING_CALL_PK
            primary key,
    CALL_YN    VARCHAR2(1) default 'N',
    CALL_TIME  NUMBER      default 0,
    AUTO_CLEAR VARCHAR2(1) default 'Y'
)
/

comment on table TC_STR_BOOKING_CALL is 'KIOSK 직원호출'
/

comment on column TC_STR_BOOKING_CALL.STR_CODE is '가맹점'
/

comment on column TC_STR_BOOKING_CALL.CALL_YN is '호출유무(Y/N)'
/

comment on column TC_STR_BOOKING_CALL.CALL_TIME is '호출타임'
/

comment on column TC_STR_BOOKING_CALL.AUTO_CLEAR is '호출해제(:N:수동, Y:자동)'
/

create table TC_STR_BOOKING_LIST
(
    DATES       DATE                 not null,
    STR_CODE    VARCHAR2(4)          not null,
    TIMES       VARCHAR2(6)          not null,
    NM_CUST     VARCHAR2(30),
    HANDPHONE   VARCHAR2(20),
    FLAG        VARCHAR2(2),
    PURPOSE     VARCHAR2(100),
    PURPOSE_ETC VARCHAR2(100),
    BOOK_YN     CHAR,
    BOOK_TIME   VARCHAR2(4),
    INPUT_DATE  DATE default sysdate not null,
    CNG_DATE    DATE,
    SEQ_NO      NUMBER,
    STATUS      VARCHAR2(1),
    TTS_YN      CHAR,
    constraint TC_STR_BOOKING_LIST_PK
        primary key (DATES, STR_CODE, TIMES)
)
/

comment on table TC_STR_BOOKING_LIST is '매장 방문자 정보'
/

comment on column TC_STR_BOOKING_LIST.DATES is '일자'
/

comment on column TC_STR_BOOKING_LIST.STR_CODE is '가맹점'
/

comment on column TC_STR_BOOKING_LIST.TIMES is '입장시간'
/

comment on column TC_STR_BOOKING_LIST.NM_CUST is '고객명'
/

comment on column TC_STR_BOOKING_LIST.HANDPHONE is '핸드폰번호'
/

comment on column TC_STR_BOOKING_LIST.FLAG is '상태값(입장:1, 퇴장:2)'
/

comment on column TC_STR_BOOKING_LIST.PURPOSE is '방문목적'
/

comment on column TC_STR_BOOKING_LIST.PURPOSE_ETC is '방문목적 기타'
/

comment on column TC_STR_BOOKING_LIST.BOOK_YN is '예약여부'
/

comment on column TC_STR_BOOKING_LIST.BOOK_TIME is '예약시간'
/

comment on column TC_STR_BOOKING_LIST.INPUT_DATE is '등록일'
/

comment on column TC_STR_BOOKING_LIST.CNG_DATE is '수정일'
/

comment on column TC_STR_BOOKING_LIST.SEQ_NO is '고객 대기 등록 순번'
/

comment on column TC_STR_BOOKING_LIST.STATUS is '고객 응대 상태값'
/

comment on column TC_STR_BOOKING_LIST.TTS_YN is 'TTS여부 (상태값:0 또는 NULL이면 사용안함 1이면 사용)'
/

create table TC_STR_BOOKING_MSG
(
    STR_CODE VARCHAR2(4) not null
        constraint TC_STR_BOOKING_MSG_PK
            primary key,
    MSG1     VARCHAR2(200),
    MSG2     VARCHAR2(200),
    MSG3     VARCHAR2(200),
    MSG4     VARCHAR2(200),
    MSG5     VARCHAR2(200)
)
/

comment on table TC_STR_BOOKING_MSG is 'KIOSK 안내문구'
/

comment on column TC_STR_BOOKING_MSG.STR_CODE is '가맹점'
/

create table TC_WITHDRAWAL_MEMBER
(
    MEMBER_NO               NUMBER not null,
    WITHDRAWAL_DTTM         DATE   not null,
    SITE_NO                 NUMBER(19),
    MEMBER_NM               VARCHAR2(100),
    BIRTH                   VARCHAR2(100),
    BORN_YEAR               VARCHAR2(10),
    BORN_MONTH              VARCHAR2(5),
    GENDER_GB_CD            VARCHAR2(30),
    NTN_GB_CD               VARCHAR2(10),
    JOIN_DTTM               DATE,
    CERTIFY_METHOD_CD       VARCHAR2(10),
    EMAIL_RECV_YN           VARCHAR2(1),
    SMS_RECV_YN             VARCHAR2(1),
    MEMBER_STATUS_CD        VARCHAR2(10),
    LOGIN_ID                VARCHAR2(300) default NULL,
    PW                      VARCHAR2(300),
    TEL                     VARCHAR2(50),
    MOBILE                  VARCHAR2(50),
    EMAIL                   VARCHAR2(100),
    JOIN_PATH_CD            VARCHAR2(10),
    PW_CHG_DTTM             DATE,
    LOGIN_FAIL_CNT          NUMBER,
    WITHDRAWAL_TYPE_CD      VARCHAR2(10),
    WITHDRAWAL_REASON_CD    VARCHAR2(10),
    ETC_WITHDRAWAL_REASON   VARCHAR2(100),
    STRTNB_ADDR             VARCHAR2(500),
    ROAD_ADDR               VARCHAR2(500),
    DTL_ADDR                VARCHAR2(500),
    NEW_POST_NO             VARCHAR2(50),
    MANAGER_MEMO            VARCHAR2(1000),
    REALNM_CERTIFY_YN       VARCHAR2(1),
    MEMBER_GRADE_NO         NUMBER,
    GRADE_AUTO_REARRANGE_YN VARCHAR2(1),
    MEMBER_CI               VARCHAR2(300),
    MEMBER_DI               VARCHAR2(300),
    MEMBER_GB_CD            VARCHAR2(10),
    ADULT_CERTIFY_YN        VARCHAR2(1),
    NEXT_PW_CHG_SCD_DTTM    DATE,
    FRG_ADDR_COUNTRY        VARCHAR2(300),
    FRG_ADDR_CITY           VARCHAR2(300),
    FRG_ADDR_STATE          VARCHAR2(300),
    FRG_ADDR_ZIP_CODE       VARCHAR2(100),
    FRG_ADDR_DTL1           VARCHAR2(30),
    FRG_ADDR_DTL2           VARCHAR2(300),
    JOIN_DEVICE_TYPE        VARCHAR2(2),
    REGR_NO                 NUMBER,
    REG_DTTM                DATE,
    UPDR_NO                 NUMBER,
    UPD_DTTM                DATE,
    BIZ_REG_NO              VARCHAR2(10),
    constraint IDX_TC_WITHDRAWAL_MEMBER_PK
        primary key (MEMBER_NO, WITHDRAWAL_DTTM)
)
/

comment on table TC_WITHDRAWAL_MEMBER is '탈퇴 회원'
/

comment on column TC_WITHDRAWAL_MEMBER.MEMBER_NO is '회원 번호'
/

comment on column TC_WITHDRAWAL_MEMBER.WITHDRAWAL_DTTM is '탈퇴 일시'
/

comment on column TC_WITHDRAWAL_MEMBER.SITE_NO is '사이트 번호'
/

comment on column TC_WITHDRAWAL_MEMBER.MEMBER_NM is '회원 명'
/

comment on column TC_WITHDRAWAL_MEMBER.BIRTH is '생일'
/

comment on column TC_WITHDRAWAL_MEMBER.BORN_YEAR is '생년'
/

comment on column TC_WITHDRAWAL_MEMBER.BORN_MONTH is '생월'
/

comment on column TC_WITHDRAWAL_MEMBER.GENDER_GB_CD is '성별 구분 코드'
/

comment on column TC_WITHDRAWAL_MEMBER.NTN_GB_CD is '국적 구분 코드'
/

comment on column TC_WITHDRAWAL_MEMBER.JOIN_DTTM is '가입 일시'
/

comment on column TC_WITHDRAWAL_MEMBER.CERTIFY_METHOD_CD is '인증 방법 코드'
/

comment on column TC_WITHDRAWAL_MEMBER.EMAIL_RECV_YN is '이메일 수신 여부'
/

comment on column TC_WITHDRAWAL_MEMBER.SMS_RECV_YN is 'SMS 수신 여부'
/

comment on column TC_WITHDRAWAL_MEMBER.MEMBER_STATUS_CD is '회원 상태 코드'
/

comment on column TC_WITHDRAWAL_MEMBER.LOGIN_ID is '로그인 아이디'
/

comment on column TC_WITHDRAWAL_MEMBER.PW is '비밀번호'
/

comment on column TC_WITHDRAWAL_MEMBER.TEL is '전화'
/

comment on column TC_WITHDRAWAL_MEMBER.MOBILE is '휴대폰'
/

comment on column TC_WITHDRAWAL_MEMBER.EMAIL is '이메일'
/

comment on column TC_WITHDRAWAL_MEMBER.JOIN_PATH_CD is '가입 경로 코드'
/

comment on column TC_WITHDRAWAL_MEMBER.PW_CHG_DTTM is '비밀번호 변경 일시'
/

comment on column TC_WITHDRAWAL_MEMBER.LOGIN_FAIL_CNT is '로그인 실패 수'
/

comment on column TC_WITHDRAWAL_MEMBER.WITHDRAWAL_TYPE_CD is '탈퇴 유형 코드'
/

comment on column TC_WITHDRAWAL_MEMBER.WITHDRAWAL_REASON_CD is '탈퇴 사유 코드'
/

comment on column TC_WITHDRAWAL_MEMBER.ETC_WITHDRAWAL_REASON is '기타 탈퇴 사유'
/

comment on column TC_WITHDRAWAL_MEMBER.STRTNB_ADDR is '번지 주소'
/

comment on column TC_WITHDRAWAL_MEMBER.ROAD_ADDR is '도로 주소'
/

comment on column TC_WITHDRAWAL_MEMBER.DTL_ADDR is '상세 주소'
/

comment on column TC_WITHDRAWAL_MEMBER.NEW_POST_NO is '신 우편 번호'
/

comment on column TC_WITHDRAWAL_MEMBER.MANAGER_MEMO is '관리자 메모'
/

comment on column TC_WITHDRAWAL_MEMBER.REALNM_CERTIFY_YN is '실명 인증 여부'
/

comment on column TC_WITHDRAWAL_MEMBER.MEMBER_GRADE_NO is '회원 등급 번호'
/

comment on column TC_WITHDRAWAL_MEMBER.GRADE_AUTO_REARRANGE_YN is '등급 자동 산정 여부'
/

comment on column TC_WITHDRAWAL_MEMBER.MEMBER_CI is '회원 CI'
/

comment on column TC_WITHDRAWAL_MEMBER.MEMBER_DI is '회원 DI'
/

comment on column TC_WITHDRAWAL_MEMBER.MEMBER_GB_CD is '회원 구분 코드'
/

comment on column TC_WITHDRAWAL_MEMBER.ADULT_CERTIFY_YN is '성인 인증 여부'
/

comment on column TC_WITHDRAWAL_MEMBER.NEXT_PW_CHG_SCD_DTTM is '다음 비밀번호 변경 예정 일시'
/

comment on column TC_WITHDRAWAL_MEMBER.FRG_ADDR_COUNTRY is '해외 주소 COUNTRY'
/

comment on column TC_WITHDRAWAL_MEMBER.FRG_ADDR_CITY is '해외 주소 CITY'
/

comment on column TC_WITHDRAWAL_MEMBER.FRG_ADDR_STATE is '해외 주소 STATE'
/

comment on column TC_WITHDRAWAL_MEMBER.FRG_ADDR_ZIP_CODE is '해외 주소 ZIP CODE'
/

comment on column TC_WITHDRAWAL_MEMBER.FRG_ADDR_DTL1 is '해외 주소 상세1'
/

comment on column TC_WITHDRAWAL_MEMBER.FRG_ADDR_DTL2 is '해외 주소 상세2'
/

comment on column TC_WITHDRAWAL_MEMBER.JOIN_DEVICE_TYPE is '가입 장치 유형'
/

comment on column TC_WITHDRAWAL_MEMBER.REGR_NO is '등록자 번호'
/

comment on column TC_WITHDRAWAL_MEMBER.REG_DTTM is '등록 일시'
/

comment on column TC_WITHDRAWAL_MEMBER.UPDR_NO is '수정자 번호'
/

comment on column TC_WITHDRAWAL_MEMBER.UPD_DTTM is '수정 일시'
/

comment on column TC_WITHDRAWAL_MEMBER.BIZ_REG_NO is '사업자 등록 번호'
/

create unique index TC_WITHDRAWAL_MEMBER_IDX01
    on TC_WITHDRAWAL_MEMBER (WITHDRAWAL_DTTM)
/

create index TC_WITHDRAWAL_MEMBER_IDX02
    on TC_WITHDRAWAL_MEMBER (SITE_NO, LOGIN_ID)
/

create table TD_TMPL
(
    TMPL_NO   NUMBER(16) not null
        constraint IDX_TD_TMPL_PK
            primary key,
    TMPL_NM   VARCHAR2(255),
    LINK_URL  VARCHAR2(255),
    FILE_PATH VARCHAR2(300),
    FILE_NM   VARCHAR2(300),
    USE_YN    VARCHAR2(1),
    PC_GB_CD  VARCHAR2(1),
    REG_DTTM  DATE,
    REGR_NO   NUMBER,
    UPD_DTTM  DATE,
    UPDR_NO   NUMBER
)
/

comment on table TD_TMPL is '템플릿'
/

comment on column TD_TMPL.TMPL_NO is '템플릿 번호'
/

comment on column TD_TMPL.TMPL_NM is '템플릿 명'
/

comment on column TD_TMPL.LINK_URL is '링크 URL'
/

comment on column TD_TMPL.FILE_PATH is '파일 경로'
/

comment on column TD_TMPL.FILE_NM is '파일 명'
/

comment on column TD_TMPL.USE_YN is '사용 여부'
/

comment on column TD_TMPL.PC_GB_CD is 'PC 구분 코드'
/

comment on column TD_TMPL.REG_DTTM is '등록 일시'
/

comment on column TD_TMPL.REGR_NO is '등록자 번호'
/

comment on column TD_TMPL.UPD_DTTM is '수정 일시'
/

comment on column TD_TMPL.UPDR_NO is '수정자 번호'
/

create table TG_GOODS_HIST
(
    GOODS_NO                       VARCHAR2(16) not null,
    HIST_START_DTTM                VARCHAR2(16) not null,
    SELLER_NO                      NUMBER(19),
    COMPANY_NO                     NUMBER(19),
    SITE_NO                        NUMBER(19),
    NOTIFY_NO                      NUMBER(19),
    GOODS_NM                       VARCHAR2(100),
    MODEL_NM                       VARCHAR2(100),
    ITEM_NO                        VARCHAR2(18),
    BRAND_NO                       NUMBER(19),
    GOODS_SALE_STATUS_CD           VARCHAR2(1),
    DISP_YN                        VARCHAR2(1),
    RETURN_PSB_YN                  VARCHAR2(1),
    SALE_YN                        VARCHAR2(1),
    SALE_START_DT                  VARCHAR2(8),
    SALE_END_DT                    VARCHAR2(8),
    GOODS_ADD_INFO_USE_YN          VARCHAR2(1),
    MOBILE_DISP_YN                 VARCHAR2(1),
    REINWARE_APPLY_YN              VARCHAR2(1),
    ADULT_CERTIFY_YN               VARCHAR2(1),
    MAX_ORD_LIMIT_YN               VARCHAR2(1),
    MAX_ORD_QTT                    NUMBER,
    MIN_ORD_LIMIT_YN               VARCHAR2(1),
    MIN_ORD_QTT                    NUMBER,
    PR_WORDS                       VARCHAR2(300),
    ADD_OPT_USE_YN                 VARCHAR2(1),
    MULTI_OPT_YN                   VARCHAR2(1),
    HABITAT                        VARCHAR2(30),
    MMFT                           VARCHAR2(100),
    IMPORTER                       VARCHAR2(30),
    TAX_GB_CD                      VARCHAR2(1),
    HSCODE                         VARCHAR2(20),
    SEO_SEARCH_WORD                VARCHAR2(4000),
    WEIGHT                         NUMBER(10, 4),
    DLVR_SET_CD                    VARCHAR2(1),
    DLVR_EXPECT_DAYS               NUMBER,
    GOODSEACH_DLVRC                NUMBER(20, 2),
    PACK_MAX_UNIT                  NUMBER,
    PACK_UNIT_DLVRC                NUMBER(20, 2),
    COURI_DLVR_APPLY_YN            VARCHAR2(1),
    DIRECT_RECPT_APPLY_YN          VARCHAR2(1),
    DLVR_PAYMENT_KIND_CD           VARCHAR2(2),
    TX_LIMIT_CNDT                  VARCHAR2(300),
    RELATE_GOODS_APPLY_TYPE_CD     VARCHAR2(1),
    RELATE_GOODS_APPLY_CTG         NUMBER(19),
    RELATE_GOODS_SALE_PRICE_START  NUMBER(20, 2),
    RELATE_GOODS_SALE_PRICE_END    NUMBER(20, 2),
    RELATE_GOODS_SALE_STATUS_CD    VARCHAR2(1),
    RELATE_GOODS_DISP_STATUS_CD    VARCHAR2(1),
    RELATE_GOODS_AUTO_EXPS_SORT_CD VARCHAR2(2),
    GOODS_SVMN_POLICY_USE_YN       VARCHAR2(1),
    GOODS_SVMN_AMT                 NUMBER(20, 2),
    VIDEO_PATH                     VARCHAR2(300),
    VIDEO_SOURCE_PATH              VARCHAR2(300),
    DISP_IMG_PATH_TYPE_A           VARCHAR2(50),
    DISP_IMG_NM_TYPE_A             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_B           VARCHAR2(50),
    DISP_IMG_NM_TYPE_B             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_C           VARCHAR2(50),
    DISP_IMG_NM_TYPE_C             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_D           VARCHAR2(50),
    DISP_IMG_NM_TYPE_D             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_E           VARCHAR2(50),
    DISP_IMG_NM_TYPE_E             VARCHAR2(300),
    ACCM_SALE_AMT                  NUMBER(20, 2),
    ACCM_SALE_CNT                  NUMBER,
    ACCM_GOODSLETT_CNT             NUMBER,
    BASKET_SET_CNT                 NUMBER,
    FAVGOODS_SET_CNT               NUMBER,
    GOODS_INQ_CNT                  NUMBER default 999999999,
    GOODS_SCORE                    NUMBER,
    FREE_DLVR_MIN_AMT              NUMBER,
    GOODSEACH_CNDTADD_DLVRC        NUMBER,
    DEL_YN                         VARCHAR2(1),
    DELR_NO                        NUMBER,
    DEL_DTTM                       DATE,
    REGR_NO                        NUMBER,
    REG_DTTM                       DATE,
    UPDR_NO                        NUMBER,
    UPD_DTTM                       DATE,
    RSV_ONLY_YN                    VARCHAR2(1),
    NAVER_LINK_YN                  VARCHAR2(1),
    PRE_GOODS_YN                   VARCHAR2(1),
    SBN_LINK_YN                    VARCHAR2(1),
    RSV_BUY_YN                     VARCHAR2(1),
    constraint IDX_TG_GOODS_HIST_PK
        primary key (GOODS_NO, HIST_START_DTTM)
)
/

comment on table TG_GOODS_HIST is '상품 이력'
/

comment on column TG_GOODS_HIST.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_HIST.HIST_START_DTTM is '이력 시작 일시'
/

comment on column TG_GOODS_HIST.SELLER_NO is '판매자 번호'
/

comment on column TG_GOODS_HIST.COMPANY_NO is '업체 번호'
/

comment on column TG_GOODS_HIST.SITE_NO is '사이트 번호'
/

comment on column TG_GOODS_HIST.NOTIFY_NO is '고시 번호'
/

comment on column TG_GOODS_HIST.GOODS_NM is '상품 명'
/

comment on column TG_GOODS_HIST.MODEL_NM is '모델 명'
/

comment on column TG_GOODS_HIST.ITEM_NO is '단품 번호'
/

comment on column TG_GOODS_HIST.BRAND_NO is '브랜드 번호'
/

comment on column TG_GOODS_HIST.GOODS_SALE_STATUS_CD is '상품 판매 상태 코드'
/

comment on column TG_GOODS_HIST.DISP_YN is '전시 여부'
/

comment on column TG_GOODS_HIST.RETURN_PSB_YN is '반품 가능 여부'
/

comment on column TG_GOODS_HIST.SALE_YN is '판매 여부'
/

comment on column TG_GOODS_HIST.SALE_START_DT is '판매 시작 일자'
/

comment on column TG_GOODS_HIST.SALE_END_DT is '판매 종료 일자'
/

comment on column TG_GOODS_HIST.GOODS_ADD_INFO_USE_YN is '상품 추가 정보 사용 여부'
/

comment on column TG_GOODS_HIST.MOBILE_DISP_YN is '모바일 전시 여부'
/

comment on column TG_GOODS_HIST.REINWARE_APPLY_YN is '재입고 적용 여부'
/

comment on column TG_GOODS_HIST.ADULT_CERTIFY_YN is '성인 인증 여부'
/

comment on column TG_GOODS_HIST.MAX_ORD_LIMIT_YN is '최대 주문 제한 여부'
/

comment on column TG_GOODS_HIST.MAX_ORD_QTT is '최대 주문 수량'
/

comment on column TG_GOODS_HIST.MIN_ORD_LIMIT_YN is '최소 주문 제한 여부'
/

comment on column TG_GOODS_HIST.MIN_ORD_QTT is '최소 주문 수량'
/

comment on column TG_GOODS_HIST.PR_WORDS is '홍보 문구'
/

comment on column TG_GOODS_HIST.ADD_OPT_USE_YN is '추가 옵션 사용 여부'
/

comment on column TG_GOODS_HIST.MULTI_OPT_YN is '다중 옵션 여부'
/

comment on column TG_GOODS_HIST.HABITAT is '원산지'
/

comment on column TG_GOODS_HIST.MMFT is '제조사'
/

comment on column TG_GOODS_HIST.IMPORTER is '수입사'
/

comment on column TG_GOODS_HIST.TAX_GB_CD is '과세 구분 코드'
/

comment on column TG_GOODS_HIST.HSCODE is 'HSCODE'
/

comment on column TG_GOODS_HIST.SEO_SEARCH_WORD is 'SEO 검색 단어'
/

comment on column TG_GOODS_HIST.WEIGHT is '무게'
/

comment on column TG_GOODS_HIST.DLVR_SET_CD is '배송 설정 코드'
/

comment on column TG_GOODS_HIST.DLVR_EXPECT_DAYS is '배송 예상 소요일'
/

comment on column TG_GOODS_HIST.GOODSEACH_DLVRC is '상품별 배송비'
/

comment on column TG_GOODS_HIST.PACK_MAX_UNIT is '포장 최대 단위'
/

comment on column TG_GOODS_HIST.PACK_UNIT_DLVRC is '포장 단위 배송비'
/

comment on column TG_GOODS_HIST.COURI_DLVR_APPLY_YN is '택배 배송 적용 여부'
/

comment on column TG_GOODS_HIST.DIRECT_RECPT_APPLY_YN is '직접 수령 적용 여부'
/

comment on column TG_GOODS_HIST.DLVR_PAYMENT_KIND_CD is '배송 결제 방식 코드'
/

comment on column TG_GOODS_HIST.TX_LIMIT_CNDT is '거래 제한 조건'
/

comment on column TG_GOODS_HIST.RELATE_GOODS_APPLY_TYPE_CD is '관련 상품 적용 유형 코드'
/

comment on column TG_GOODS_HIST.RELATE_GOODS_APPLY_CTG is '관련 상품 적용 카테고리'
/

comment on column TG_GOODS_HIST.RELATE_GOODS_SALE_PRICE_START is '관련 상품 판매 가격 시작'
/

comment on column TG_GOODS_HIST.RELATE_GOODS_SALE_PRICE_END is '관련 상품 판매 가격 종료'
/

comment on column TG_GOODS_HIST.RELATE_GOODS_SALE_STATUS_CD is '관련 상품 판매 상태 코드'
/

comment on column TG_GOODS_HIST.RELATE_GOODS_DISP_STATUS_CD is '관련 상품 전시 상태 코드'
/

comment on column TG_GOODS_HIST.RELATE_GOODS_AUTO_EXPS_SORT_CD is '관련 상품 자동 노출 정렬 코드'
/

comment on column TG_GOODS_HIST.GOODS_SVMN_POLICY_USE_YN is '상품 적립금 정책 사용 여부'
/

comment on column TG_GOODS_HIST.GOODS_SVMN_AMT is '상품 적립금 금액'
/

comment on column TG_GOODS_HIST.VIDEO_PATH is '동영상 경로'
/

comment on column TG_GOODS_HIST.VIDEO_SOURCE_PATH is '동영상 소스 경로'
/

comment on column TG_GOODS_HIST.DISP_IMG_PATH_TYPE_A is '전시 이미지 경로 TYPE A'
/

comment on column TG_GOODS_HIST.DISP_IMG_NM_TYPE_A is '전시 이미지 명 TYPE A'
/

comment on column TG_GOODS_HIST.DISP_IMG_PATH_TYPE_B is '전시 이미지 경로 TYPE B'
/

comment on column TG_GOODS_HIST.DISP_IMG_NM_TYPE_B is '전시 이미지 명 TYPE B'
/

comment on column TG_GOODS_HIST.DISP_IMG_PATH_TYPE_C is '전시 이미지 경로 TYPE C'
/

comment on column TG_GOODS_HIST.DISP_IMG_NM_TYPE_C is '전시 이미지 명 TYPE C'
/

comment on column TG_GOODS_HIST.DISP_IMG_PATH_TYPE_D is '전시 이미지 경로 TYPE D'
/

comment on column TG_GOODS_HIST.DISP_IMG_NM_TYPE_D is '전시 이미지 명 TYPE D'
/

comment on column TG_GOODS_HIST.DISP_IMG_PATH_TYPE_E is '전시 이미지 경로 TYPE E'
/

comment on column TG_GOODS_HIST.DISP_IMG_NM_TYPE_E is '전시 이미지 명 TYPE E'
/

comment on column TG_GOODS_HIST.ACCM_SALE_AMT is '누적 판매 금액'
/

comment on column TG_GOODS_HIST.ACCM_SALE_CNT is '누적 판매 수'
/

comment on column TG_GOODS_HIST.ACCM_GOODSLETT_CNT is '누적 상품글 수'
/

comment on column TG_GOODS_HIST.BASKET_SET_CNT is '장바구니 설정 수'
/

comment on column TG_GOODS_HIST.FAVGOODS_SET_CNT is '관심상품 설정 수'
/

comment on column TG_GOODS_HIST.GOODS_INQ_CNT is '상품 조회수'
/

comment on column TG_GOODS_HIST.GOODS_SCORE is '상품 점수'
/

comment on column TG_GOODS_HIST.FREE_DLVR_MIN_AMT is '무료 배송 최소 금액'
/

comment on column TG_GOODS_HIST.GOODSEACH_CNDTADD_DLVRC is '상품별 조건부 배송비'
/

comment on column TG_GOODS_HIST.DEL_YN is '삭제 여부'
/

comment on column TG_GOODS_HIST.DELR_NO is '삭제자 번호'
/

comment on column TG_GOODS_HIST.DEL_DTTM is '삭제 일시'
/

comment on column TG_GOODS_HIST.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_HIST.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_HIST.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_HIST.UPD_DTTM is '수정 일시'
/

create table TG_ITEM_HIST
(
    ITEM_NO             VARCHAR2(18)  not null,
    HIST_START_DTTM     VARCHAR2(20)  not null,
    SITE_NO             NUMBER(19)    not null,
    GOODS_NO            VARCHAR2(16),
    ITEM_NM             VARCHAR2(100),
    USE_YN              VARCHAR2(1)   not null,
    ITEM_VER            NUMBER,
    SUPPLY_PRICE        NUMBER(20, 2),
    SEP_SUPPLY_PRICE_YN VARCHAR2(1),
    CUSTOMER_PRICE      NUMBER(20, 2),
    SALE_PRICE          NUMBER(20, 2) not null,
    STOCK_QTT           NUMBER        not null,
    SALE_QTT            NUMBER        not null,
    DEL_YN              VARCHAR2(1),
    DELR_NO             NUMBER,
    DEL_DTTM            DATE,
    REGR_NO             NUMBER,
    REG_DTTM            DATE,
    UPDR_NO             NUMBER,
    UPD_DTTM            DATE,
    constraint IDX_TG_ITEM_HIST_PK
        primary key (ITEM_NO, HIST_START_DTTM)
)
/

comment on table TG_ITEM_HIST is '단품 이력'
/

comment on column TG_ITEM_HIST.ITEM_NO is '단품 번호'
/

comment on column TG_ITEM_HIST.HIST_START_DTTM is '이력 시작 일시'
/

comment on column TG_ITEM_HIST.SITE_NO is '사이트 번호'
/

comment on column TG_ITEM_HIST.GOODS_NO is '상품 번호'
/

comment on column TG_ITEM_HIST.ITEM_NM is '단품 명'
/

comment on column TG_ITEM_HIST.USE_YN is '사용 여부'
/

comment on column TG_ITEM_HIST.ITEM_VER is '단품 VER'
/

comment on column TG_ITEM_HIST.SUPPLY_PRICE is '공급 가격'
/

comment on column TG_ITEM_HIST.SEP_SUPPLY_PRICE_YN is '개별 공급 가격 여부'
/

comment on column TG_ITEM_HIST.CUSTOMER_PRICE is '소비자 가격'
/

comment on column TG_ITEM_HIST.SALE_PRICE is '판매 가격'
/

comment on column TG_ITEM_HIST.STOCK_QTT is '재고 수량'
/

comment on column TG_ITEM_HIST.SALE_QTT is '판매 수량'
/

comment on column TG_ITEM_HIST.DEL_YN is '삭제 여부'
/

comment on column TG_ITEM_HIST.DELR_NO is '삭제자 번호'
/

comment on column TG_ITEM_HIST.DEL_DTTM is '삭제 일시'
/

comment on column TG_ITEM_HIST.REGR_NO is '등록자 번호'
/

comment on column TG_ITEM_HIST.REG_DTTM is '등록 일시'
/

comment on column TG_ITEM_HIST.UPDR_NO is '수정자 번호'
/

comment on column TG_ITEM_HIST.UPD_DTTM is '수정 일시'
/

create table TG_NOTIFY_INFO
(
    NOTIFY_NO NUMBER(19) not null
        constraint IDX_TG_NOTIFY_INFO_PK
            primary key,
    NOTIFY_NM VARCHAR2(50),
    DTL_ITEM  VARCHAR2(300),
    USE_YN    VARCHAR2(1),
    DEL_YN    VARCHAR2(1),
    DEL_ID    NUMBER,
    DEL_DTTM  DATE,
    REGR_NO   NUMBER,
    REG_DTTM  DATE,
    UPDR_NO   NUMBER,
    UPD_DTTM  DATE
)
/

comment on table TG_NOTIFY_INFO is '고시 정보'
/

comment on column TG_NOTIFY_INFO.NOTIFY_NO is '고시 번호'
/

comment on column TG_NOTIFY_INFO.NOTIFY_NM is '고시 명'
/

comment on column TG_NOTIFY_INFO.DTL_ITEM is '상세 품목'
/

comment on column TG_NOTIFY_INFO.USE_YN is '사용 여부'
/

comment on column TG_NOTIFY_INFO.DEL_YN is '삭제 여부'
/

comment on column TG_NOTIFY_INFO.DEL_ID is '삭제 아이디'
/

comment on column TG_NOTIFY_INFO.DEL_DTTM is '삭제 일시'
/

comment on column TG_NOTIFY_INFO.REGR_NO is '등록자 번호'
/

comment on column TG_NOTIFY_INFO.REG_DTTM is '등록 일시'
/

comment on column TG_NOTIFY_INFO.UPDR_NO is '수정자 번호'
/

comment on column TG_NOTIFY_INFO.UPD_DTTM is '수정 일시'
/

create table TG_NOTIFY_ITEM
(
    ITEM_NO   NUMBER(19) not null
        constraint IDX_TG_NOTIFY_ITEM_PK
            primary key,
    NOTIFY_NO NUMBER(19) not null
        constraint FK_NOTIFY_ITEM_1
            references TG_NOTIFY_INFO,
    USE_YN    VARCHAR2(1),
    ITEM_NM   VARCHAR2(100),
    DSCRT     VARCHAR2(300),
    BIGO      VARCHAR2(50),
    ITEM_SEQ  NUMBER,
    DEL_YN    VARCHAR2(1),
    DEL_ID    NUMBER,
    DEL_DTTM  DATE,
    REGR_NO   NUMBER,
    REG_DTTM  DATE,
    UPDR_NO   NUMBER,
    UPD_DTTM  DATE
)
/

comment on table TG_NOTIFY_ITEM is '고시 항목'
/

comment on column TG_NOTIFY_ITEM.ITEM_NO is '항목 번호'
/

comment on column TG_NOTIFY_ITEM.NOTIFY_NO is '고시 번호'
/

comment on column TG_NOTIFY_ITEM.USE_YN is '사용 여부'
/

comment on column TG_NOTIFY_ITEM.ITEM_NM is '항목 명'
/

comment on column TG_NOTIFY_ITEM.DSCRT is '설명'
/

comment on column TG_NOTIFY_ITEM.BIGO is '비고'
/

comment on column TG_NOTIFY_ITEM.ITEM_SEQ is '항목 순번'
/

comment on column TG_NOTIFY_ITEM.DEL_YN is '삭제 여부'
/

comment on column TG_NOTIFY_ITEM.DEL_ID is '삭제 아이디'
/

comment on column TG_NOTIFY_ITEM.DEL_DTTM is '삭제 일시'
/

comment on column TG_NOTIFY_ITEM.REGR_NO is '등록자 번호'
/

comment on column TG_NOTIFY_ITEM.REG_DTTM is '등록 일시'
/

comment on column TG_NOTIFY_ITEM.UPDR_NO is '수정자 번호'
/

comment on column TG_NOTIFY_ITEM.UPD_DTTM is '수정 일시'
/

create table TG_VISION_CHECK
(
    VISION_NO     NUMBER(9) not null
        primary key,
    AGE_CD        VARCHAR2(5),
    PO_MATR_CD    VARCHAR2(5),
    LIFE_STYLE_CD VARCHAR2(5),
    SORT_SEQ      NUMBER(9),
    VISION_GB     VARCHAR2(1)
)
/

comment on column TG_VISION_CHECK.VISION_NO is '비전체크 번호'
/

comment on column TG_VISION_CHECK.AGE_CD is '연령대 코드'
/

comment on column TG_VISION_CHECK.PO_MATR_CD is '불편사항 코드'
/

comment on column TG_VISION_CHECK.LIFE_STYLE_CD is '라이프 스타일 코드'
/

comment on column TG_VISION_CHECK.SORT_SEQ is '정렬 순서'
/

create table TG_VISION_CHECK_MAP
(
    RECOM_NO  NUMBER(9) not null
        primary key,
    VISION_NO NUMBER(9),
    CHECK_NO  NUMBER(19)
)
/

comment on column TG_VISION_CHECK_MAP.RECOM_NO is '추천 번호'
/

comment on column TG_VISION_CHECK_MAP.VISION_NO is '비전 체크 번호'
/

comment on column TG_VISION_CHECK_MAP.CHECK_NO is '카테고리 번호'
/

create table TI_CLAIM_CLCT_IF
(
    IF_SNO            VARCHAR2(16) not null
        constraint IDX_TI_CLAIM_CLCT_IF_PK
            primary key,
    IF_ID             VARCHAR2(10),
    IF_NO             VARCHAR2(16),
    SITE_NO           NUMBER(19),
    CLAIM_NO          VARCHAR2(30),
    CLAIM_DTL_SEQ     NUMBER,
    SBN_CLAIM_NO      VARCHAR2(30),
    ORD_NO            VARCHAR2(30),
    ORD_DTL_SEQ       VARCHAR2(5),
    SBN_ORD_NO        VARCHAR2(30),
    SPMALL_ORD_NO     VARCHAR2(30),
    SPMALL_ID         VARCHAR2(10),
    SPMALL_LOGIN_ID   VARCHAR2(300) default NULL,
    ORD_DLVR_STATUS   VARCHAR2(20),
    ORDR_NM           VARCHAR2(100),
    ORDR_TEL          VARCHAR2(100),
    ORDR_MOBILE       VARCHAR2(100),
    ORDR_EMAIL        VARCHAR2(100),
    ADRS_TEL          VARCHAR2(100),
    ADRS_MOBILE       VARCHAR2(100),
    DLVR_MSG          VARCHAR2(1000),
    ADRS_NM           VARCHAR2(100),
    POST_NO           VARCHAR2(100),
    DTL_ADDR          VARCHAR2(255),
    SALE_AMT          VARCHAR2(10),
    PAYMENT_AMT       VARCHAR2(10),
    ORD_ACCEPT_DTTM   VARCHAR2(14),
    GOODS_NM          VARCHAR2(100),
    OPT_NM            VARCHAR2(100),
    SALE_PRICE        VARCHAR2(10),
    ORD_QTT           VARCHAR2(5),
    GOODS_NO          VARCHAR2(20),
    ITEM_NO           VARCHAR2(20),
    ATTR_VER          VARCHAR2(5),
    CLAIM_TYPE        VARCHAR2(10),
    CLAIM_MEMO        VARCHAR2(2000),
    CLAIM_ACCEPT_DTTM VARCHAR2(14),
    CLAIM_CLCT_DTTM   VARCHAR2(14),
    SBN_IF_YN         VARCHAR2(1),
    SBN_IF_MSG        VARCHAR2(300),
    BTCH_PRC_YN       VARCHAR2(1),
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE
)
/

comment on table TI_CLAIM_CLCT_IF is '클레임 수집 연계'
/

comment on column TI_CLAIM_CLCT_IF.IF_SNO is '연계 일련번호'
/

comment on column TI_CLAIM_CLCT_IF.IF_ID is '연계 ID'
/

comment on column TI_CLAIM_CLCT_IF.IF_NO is '연계 번호'
/

comment on column TI_CLAIM_CLCT_IF.SITE_NO is '사이트 번호'
/

comment on column TI_CLAIM_CLCT_IF.CLAIM_NO is '클레임 번호'
/

comment on column TI_CLAIM_CLCT_IF.CLAIM_DTL_SEQ is '클레임 상세 순번'
/

comment on column TI_CLAIM_CLCT_IF.SBN_CLAIM_NO is '사방넷 클레임 번호'
/

comment on column TI_CLAIM_CLCT_IF.ORD_NO is '주문 번호'
/

comment on column TI_CLAIM_CLCT_IF.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TI_CLAIM_CLCT_IF.SBN_ORD_NO is '사방넷 주문 번호'
/

comment on column TI_CLAIM_CLCT_IF.SPMALL_ORD_NO is '쇼핑몰 주문 번호'
/

comment on column TI_CLAIM_CLCT_IF.SPMALL_ID is '쇼핑몰 ID'
/

comment on column TI_CLAIM_CLCT_IF.SPMALL_LOGIN_ID is '쇼핑몰 로그인 ID'
/

comment on column TI_CLAIM_CLCT_IF.ORD_DLVR_STATUS is '주문 배송 상태'
/

comment on column TI_CLAIM_CLCT_IF.ORDR_NM is '주문자 명'
/

comment on column TI_CLAIM_CLCT_IF.ORDR_TEL is '주문자 전화'
/

comment on column TI_CLAIM_CLCT_IF.ORDR_MOBILE is '주문자 휴대폰'
/

comment on column TI_CLAIM_CLCT_IF.ORDR_EMAIL is '주문자 이메일'
/

comment on column TI_CLAIM_CLCT_IF.ADRS_TEL is '수취인 전화'
/

comment on column TI_CLAIM_CLCT_IF.ADRS_MOBILE is '수취인 휴대폰'
/

comment on column TI_CLAIM_CLCT_IF.DLVR_MSG is '배송 메세지'
/

comment on column TI_CLAIM_CLCT_IF.ADRS_NM is '수취인 명'
/

comment on column TI_CLAIM_CLCT_IF.POST_NO is '우편 번호'
/

comment on column TI_CLAIM_CLCT_IF.DTL_ADDR is '상세 주소'
/

comment on column TI_CLAIM_CLCT_IF.SALE_AMT is '판매 금액'
/

comment on column TI_CLAIM_CLCT_IF.PAYMENT_AMT is '결제 금액'
/

comment on column TI_CLAIM_CLCT_IF.ORD_ACCEPT_DTTM is '주문 접수 일시'
/

comment on column TI_CLAIM_CLCT_IF.GOODS_NM is '상품 명'
/

comment on column TI_CLAIM_CLCT_IF.OPT_NM is '옵션 명'
/

comment on column TI_CLAIM_CLCT_IF.SALE_PRICE is '판매 단가'
/

comment on column TI_CLAIM_CLCT_IF.ORD_QTT is '주문 수량'
/

comment on column TI_CLAIM_CLCT_IF.GOODS_NO is '상품 번호'
/

comment on column TI_CLAIM_CLCT_IF.ITEM_NO is '단품 번호'
/

comment on column TI_CLAIM_CLCT_IF.ATTR_VER is '속성 VER'
/

comment on column TI_CLAIM_CLCT_IF.CLAIM_TYPE is '클레임 유형'
/

comment on column TI_CLAIM_CLCT_IF.CLAIM_MEMO is '클레임 메모'
/

comment on column TI_CLAIM_CLCT_IF.CLAIM_ACCEPT_DTTM is '클레임 접수 일시'
/

comment on column TI_CLAIM_CLCT_IF.CLAIM_CLCT_DTTM is '클레임 수집 일시'
/

comment on column TI_CLAIM_CLCT_IF.SBN_IF_YN is '사방넷 연계 여부'
/

comment on column TI_CLAIM_CLCT_IF.SBN_IF_MSG is '사방넷 연계 메세지'
/

comment on column TI_CLAIM_CLCT_IF.BTCH_PRC_YN is '배치 처리 여부'
/

comment on column TI_CLAIM_CLCT_IF.REGR_NO is '등록자 번호'
/

comment on column TI_CLAIM_CLCT_IF.REG_DTTM is '등록 일시'
/

comment on column TI_CLAIM_CLCT_IF.UPDR_NO is '수정자 번호'
/

comment on column TI_CLAIM_CLCT_IF.UPD_DTTM is '수정 일시'
/

create index TI_CLAIM_CLCT_IF_001
    on TI_CLAIM_CLCT_IF (ORD_NO)
/

create table TI_ERP_MALL_IF_EXEC_LOG
(
    SEQ          NUMBER               not null
        constraint TI_ERP_IF_EXEC_LOG_PK
            primary key,
    INTERFACE_ID VARCHAR2(20)         not null,
    REQ_PARAM    VARCHAR2(4000)       not null,
    RES_PARAM    VARCHAR2(4000),
    ERR_MSG      VARCHAR2(4000),
    REG_DTM      DATE default sysdate not null
)
/

comment on column TI_ERP_MALL_IF_EXEC_LOG.SEQ is '순번'
/

comment on column TI_ERP_MALL_IF_EXEC_LOG.INTERFACE_ID is '인터페이스ID'
/

comment on column TI_ERP_MALL_IF_EXEC_LOG.REQ_PARAM is '요청파라미터'
/

comment on column TI_ERP_MALL_IF_EXEC_LOG.RES_PARAM is '응답파라미터'
/

comment on column TI_ERP_MALL_IF_EXEC_LOG.ERR_MSG is '에러메시지'
/

comment on column TI_ERP_MALL_IF_EXEC_LOG.REG_DTM is '등록일시'
/

create index TI_ERP_IF_EXEC_LOG_001
    on TI_ERP_MALL_IF_EXEC_LOG (SEQ, INTERFACE_ID, REG_DTM)
/

create index TI_ERP_IF_EXEC_LOG_002
    on TI_ERP_MALL_IF_EXEC_LOG (INTERFACE_ID, REG_DTM)
/

create table TI_ERP_MEM_MAPPING
(
    MALL_MEMBER_NO NUMBER           not null,
    ERP_MEMBER_NO  VARCHAR2(16)     not null,
    ERP_MEMBER_LVL CHAR,
    DEL_YN         CHAR default 'N' not null,
    REG_DTTM       DATE default sysdate,
    UPD_DTTM       DATE default sysdate
)
/

comment on column TI_ERP_MEM_MAPPING.MALL_MEMBER_NO is '쇼핑몰회원번호'
/

comment on column TI_ERP_MEM_MAPPING.ERP_MEMBER_NO is 'ERP회원번호'
/

comment on column TI_ERP_MEM_MAPPING.ERP_MEMBER_LVL is 'ERP회원등급'
/

comment on column TI_ERP_MEM_MAPPING.DEL_YN is '삭제여부'
/

comment on column TI_ERP_MEM_MAPPING.REG_DTTM is '등록일시'
/

comment on column TI_ERP_MEM_MAPPING.UPD_DTTM is '수정일시'
/

create index IDX_TI_ERP_MEM_MAPPING_001
    on TI_ERP_MEM_MAPPING (MALL_MEMBER_NO, DEL_YN)
/

create index IDX_TI_ERP_MEM_MAPPING_002
    on TI_ERP_MEM_MAPPING (ERP_MEMBER_NO)
/

create table TI_ERP_OFFLINE_PNT_MAPPING
(
    MALL_ORDER_NO   NUMBER(16)       not null,
    MALL_ORDER_TYPE CHAR             not null,
    ERP_DATES       VARCHAR2(8)      not null,
    ERP_MEMBER_NO   VARCHAR2(8)      not null,
    ERP_SEQ_NO      NUMBER(3)        not null,
    DEL_YN          CHAR default 'N' not null,
    REG_DTTM        DATE default SYSDATE,
    UPD_DTTM        DATE default SYSDATE
)
/

comment on table TI_ERP_OFFLINE_PNT_MAPPING is 'ERP-쇼핑몰간 오프라인 포인트사용을 위한 주문번호/포인트실적번호 매핑'
/

comment on column TI_ERP_OFFLINE_PNT_MAPPING.MALL_ORDER_NO is '쇼핑몰 주문번호'
/

comment on column TI_ERP_OFFLINE_PNT_MAPPING.MALL_ORDER_TYPE is '쇼핑몰 발주구분'
/

comment on column TI_ERP_OFFLINE_PNT_MAPPING.ERP_DATES is 'ERP포인트로그번호-영업일자'
/

comment on column TI_ERP_OFFLINE_PNT_MAPPING.ERP_MEMBER_NO is 'ERP포인트로그번호-회원코드'
/

comment on column TI_ERP_OFFLINE_PNT_MAPPING.ERP_SEQ_NO is 'ERP포인트로그번호-순번'
/

comment on column TI_ERP_OFFLINE_PNT_MAPPING.DEL_YN is '삭제여부'
/

comment on column TI_ERP_OFFLINE_PNT_MAPPING.REG_DTTM is '등록일시'
/

comment on column TI_ERP_OFFLINE_PNT_MAPPING.UPD_DTTM is '수정일시'
/

create table TI_ERP_ORD_DTL_MAPPING
(
    MALL_ORDER_NO     NUMBER(16)       not null,
    MALL_ORDER_DTL_NO NUMBER           not null,
    ERP_ORD_DATE      VARCHAR2(8)      not null,
    ERP_STR_CODE      VARCHAR2(4)      not null,
    ERP_ORD_SLIP      VARCHAR2(10)     not null,
    ERP_ORDER_DTL_NO  NUMBER           not null,
    ERP_ORDER_ADD_NO  VARCHAR2(3)      not null,
    DEL_YN            CHAR default 'N' not null,
    REG_DTTM          DATE default sysdate,
    UPD_DTTM          DATE default sysdate,
    MALL_CLAIM_NO     NUMBER,
    constraint TI_ERP_ORD_DTL_MAPPING_PK
        primary key (MALL_ORDER_DTL_NO, MALL_ORDER_NO, ERP_ORD_DATE, ERP_STR_CODE, ERP_ORD_SLIP, ERP_ORDER_DTL_NO,
                     ERP_ORDER_ADD_NO)
)
/

comment on column TI_ERP_ORD_DTL_MAPPING.MALL_ORDER_NO is '쇼핑몰주문번호'
/

comment on column TI_ERP_ORD_DTL_MAPPING.MALL_ORDER_DTL_NO is '쇼핑몰주문상세번호'
/

comment on column TI_ERP_ORD_DTL_MAPPING.ERP_ORD_DATE is 'ERP주문번호-주문일자'
/

comment on column TI_ERP_ORD_DTL_MAPPING.ERP_STR_CODE is 'ERP주문번호-가맹점코드'
/

comment on column TI_ERP_ORD_DTL_MAPPING.ERP_ORD_SLIP is 'ERP주문번호-전표번호'
/

comment on column TI_ERP_ORD_DTL_MAPPING.ERP_ORDER_DTL_NO is 'ERP주문상세번호'
/

comment on column TI_ERP_ORD_DTL_MAPPING.ERP_ORDER_ADD_NO is 'ERP주문상세추가옵션번호'
/

comment on column TI_ERP_ORD_DTL_MAPPING.DEL_YN is '삭제여부'
/

comment on column TI_ERP_ORD_DTL_MAPPING.REG_DTTM is '등록일시'
/

comment on column TI_ERP_ORD_DTL_MAPPING.UPD_DTTM is '수정일시'
/

comment on column TI_ERP_ORD_DTL_MAPPING.MALL_CLAIM_NO is '쇼핑몰반품번호(반품에 의한 재발주인경우)'
/

create table TI_ERP_ORD_MAPPING
(
    MALL_ORDER_NO NUMBER(16)       not null,
    ERP_ORD_DATE  VARCHAR2(8)      not null,
    ERP_STR_CODE  VARCHAR2(4)      not null,
    ERP_ORD_SLIP  VARCHAR2(10)     not null,
    DEL_YN        CHAR default 'N' not null,
    REG_DTTM      DATE default sysdate,
    UPD_DTTM      DATE default sysdate,
    MALL_CLAIM_NO NUMBER,
    ORD_RUTE      CHAR,
    constraint TI_ERP_ORD_MAPPING_PK
        primary key (MALL_ORDER_NO, ERP_ORD_DATE, ERP_STR_CODE, ERP_ORD_SLIP)
)
/

comment on column TI_ERP_ORD_MAPPING.MALL_ORDER_NO is '쇼핑몰주문번호'
/

comment on column TI_ERP_ORD_MAPPING.ERP_ORD_DATE is 'ERP주문번호-주문일자'
/

comment on column TI_ERP_ORD_MAPPING.ERP_STR_CODE is 'ERP주문번호-가맹점코드'
/

comment on column TI_ERP_ORD_MAPPING.ERP_ORD_SLIP is 'ERP주문번호-전표번호'
/

comment on column TI_ERP_ORD_MAPPING.DEL_YN is '삭제여부'
/

comment on column TI_ERP_ORD_MAPPING.REG_DTTM is '등록일시'
/

comment on column TI_ERP_ORD_MAPPING.UPD_DTTM is '수정일시'
/

comment on column TI_ERP_ORD_MAPPING.MALL_CLAIM_NO is '쇼핑몰반품번호(반품에 의한 재발주인경우)'
/

comment on column TI_ERP_ORD_MAPPING.ORD_RUTE is '배송 루트'
/

create table TI_ERP_PO_MAPPING
(
    MALL_PRMT_NO NUMBER      not null,
    ERP_PRMT_NO  VARCHAR2(4) not null,
    constraint TI_ERP_PO_MAPPING_PK
        primary key (MALL_PRMT_NO, ERP_PRMT_NO)
)
/

comment on table TI_ERP_PO_MAPPING is 'ERP-쇼핑몰간 사전예약 KEY 매핑'
/

comment on column TI_ERP_PO_MAPPING.MALL_PRMT_NO is '쇼핑몰 기획전번호'
/

comment on column TI_ERP_PO_MAPPING.ERP_PRMT_NO is 'ERP 사전예약공통코드CTR_CODE'
/

create table TI_ERP_PRD_MAPPING
(
    MALL_ITM_CODE VARCHAR2(20)  not null,
    ERP_ITM_CODE  VARCHAR2(100) not null,
    MALL_GOODS_NO VARCHAR2(16)  not null,
    constraint TI_ERP_PRD_MAPPING_PK
        primary key (MALL_ITM_CODE, ERP_ITM_CODE)
)
/

comment on column TI_ERP_PRD_MAPPING.MALL_ITM_CODE is '쇼핑몰단품코드'
/

comment on column TI_ERP_PRD_MAPPING.ERP_ITM_CODE is 'ERP상품코드'
/

comment on column TI_ERP_PRD_MAPPING.MALL_GOODS_NO is '쇼핑몰상품번호'
/

create index TI_ERP_PRD_MAPPING_002
    on TI_ERP_PRD_MAPPING (ERP_ITM_CODE)
/

create index IDX_TI_ERP_PRD_MAPPING_003
    on TI_ERP_PRD_MAPPING (MALL_GOODS_NO, MALL_ITM_CODE)
/

create index TI_ERP_PRD_MAPPING_001
    on TI_ERP_PRD_MAPPING (MALL_ITM_CODE, ERP_ITM_CODE, MALL_GOODS_NO)
/

create table TI_ERP_RTN_MAPPING
(
    MALL_CLAIM_NO     NUMBER           not null,
    MALL_ORDER_NO     NUMBER(16)       not null,
    MALL_ORDER_DTL_NO NUMBER           not null,
    ERP_ORD_DATE      VARCHAR2(8)      not null,
    ERP_STR_CODE      VARCHAR2(4)      not null,
    ERP_ORD_SLIP      VARCHAR2(10)     not null,
    ERP_ORDER_DTL_NO  NUMBER           not null,
    ERP_ORDER_ADD_NO  VARCHAR2(3)      not null,
    DEL_YN            CHAR default 'N' not null,
    REG_DTTM          DATE default SYSDATE,
    UPD_DTTM          DATE default SYSDATE,
    constraint TI_ERP_RTN_MAPPING_PK
        primary key (MALL_CLAIM_NO, MALL_ORDER_NO, MALL_ORDER_DTL_NO)
)
/

comment on table TI_ERP_RTN_MAPPING is 'ERP-쇼핑몰간 반품 번호 매핑 테이블'
/

comment on column TI_ERP_RTN_MAPPING.MALL_CLAIM_NO is '쇼핑몰반품번호'
/

comment on column TI_ERP_RTN_MAPPING.MALL_ORDER_NO is '쇼핑몰주문번호'
/

comment on column TI_ERP_RTN_MAPPING.MALL_ORDER_DTL_NO is '쇼핑몰주문상세번호'
/

comment on column TI_ERP_RTN_MAPPING.ERP_ORD_DATE is 'ERP주문번호-주문일자'
/

comment on column TI_ERP_RTN_MAPPING.ERP_STR_CODE is 'ERP주문번호-가맹점코드'
/

comment on column TI_ERP_RTN_MAPPING.ERP_ORD_SLIP is 'ERP주문번호-전표번호'
/

comment on column TI_ERP_RTN_MAPPING.ERP_ORDER_DTL_NO is 'ERP주문상세번호'
/

comment on column TI_ERP_RTN_MAPPING.ERP_ORDER_ADD_NO is 'ERP주문상세추가옵션번호'
/

comment on column TI_ERP_RTN_MAPPING.DEL_YN is '삭제여부'
/

comment on column TI_ERP_RTN_MAPPING.REG_DTTM is '등록일시'
/

comment on column TI_ERP_RTN_MAPPING.UPD_DTTM is '수정일시'
/

create table TI_GOODS_SMR_UPD_IF
(
    IF_SNO         VARCHAR2(16)  not null
        constraint IDX_TI_GOODS_SMR_UPD_IF_PK
            primary key,
    IF_ID          VARCHAR2(10),
    IF_NO          VARCHAR2(16),
    SITE_NO        NUMBER(19),
    GOODS_NM       VARCHAR2(100) not null,
    ITEM_NM        VARCHAR2(100),
    GOODS_NO       VARCHAR2(16),
    ITEM_NO        VARCHAR2(18),
    ATTR_VER       VARCHAR2(5),
    SALE_STATUS_CD VARCHAR2(1)   not null,
    SUPPLY_PRICE   VARCHAR2(10),
    SALE_PRICE     VARCHAR2(10),
    CUSTOMER_PRICE VARCHAR2(10),
    ATTR_CLSF_CD   VARCHAR2(3),
    OPT_ITEM1      VARCHAR2(300),
    OPT_ITEM2      VARCHAR2(300),
    OPT_ITEM3      VARCHAR2(300),
    OPT_ITEM4      VARCHAR2(300),
    OPT_ITEM5      VARCHAR2(300),
    OPT_ITEM6      VARCHAR2(300),
    OPT_ITEM7      VARCHAR2(300),
    SBN_IF_YN      VARCHAR2(1),
    SBN_IF_MSG     VARCHAR2(300),
    NAVER_SEND_YN  VARCHAR2(1),
    DAUM_SEND_YN   VARCHAR2(1),
    BTCH_PRC_YN    VARCHAR2(1),
    REGR_NO        NUMBER,
    REG_DTTM       DATE,
    UPDR_NO        NUMBER,
    UPD_DTTM       DATE
)
/

comment on table TI_GOODS_SMR_UPD_IF is '상품 요약 수정 연계'
/

comment on column TI_GOODS_SMR_UPD_IF.IF_SNO is '연계 일련번호'
/

comment on column TI_GOODS_SMR_UPD_IF.IF_ID is '연계 ID'
/

comment on column TI_GOODS_SMR_UPD_IF.IF_NO is '연계 번호'
/

comment on column TI_GOODS_SMR_UPD_IF.SITE_NO is '사이트 번호'
/

comment on column TI_GOODS_SMR_UPD_IF.GOODS_NM is '상품 명'
/

comment on column TI_GOODS_SMR_UPD_IF.ITEM_NM is '단품 명'
/

comment on column TI_GOODS_SMR_UPD_IF.GOODS_NO is '상품 번호'
/

comment on column TI_GOODS_SMR_UPD_IF.ITEM_NO is '단품 번호'
/

comment on column TI_GOODS_SMR_UPD_IF.ATTR_VER is '속성 VER'
/

comment on column TI_GOODS_SMR_UPD_IF.SALE_STATUS_CD is '판매 상태 코드'
/

comment on column TI_GOODS_SMR_UPD_IF.SUPPLY_PRICE is '공급 가격'
/

comment on column TI_GOODS_SMR_UPD_IF.SALE_PRICE is '판매 가격'
/

comment on column TI_GOODS_SMR_UPD_IF.CUSTOMER_PRICE is '소비자 가격'
/

comment on column TI_GOODS_SMR_UPD_IF.ATTR_CLSF_CD is '속성 분류 코드'
/

comment on column TI_GOODS_SMR_UPD_IF.OPT_ITEM1 is '옵션 항목1'
/

comment on column TI_GOODS_SMR_UPD_IF.OPT_ITEM2 is '옵션 항목2'
/

comment on column TI_GOODS_SMR_UPD_IF.OPT_ITEM3 is '옵션 항목3'
/

comment on column TI_GOODS_SMR_UPD_IF.OPT_ITEM4 is '옵션 항목4'
/

comment on column TI_GOODS_SMR_UPD_IF.OPT_ITEM5 is '옵션 항목5'
/

comment on column TI_GOODS_SMR_UPD_IF.OPT_ITEM6 is '옵션 항목6'
/

comment on column TI_GOODS_SMR_UPD_IF.OPT_ITEM7 is '옵션 항목7'
/

comment on column TI_GOODS_SMR_UPD_IF.SBN_IF_YN is '사방넷 연계 여부'
/

comment on column TI_GOODS_SMR_UPD_IF.SBN_IF_MSG is '사방넷 연계 메세지'
/

comment on column TI_GOODS_SMR_UPD_IF.NAVER_SEND_YN is '네이버 전송 여부'
/

comment on column TI_GOODS_SMR_UPD_IF.DAUM_SEND_YN is '다음 전송 여부'
/

comment on column TI_GOODS_SMR_UPD_IF.BTCH_PRC_YN is '배치 처리 여부'
/

comment on column TI_GOODS_SMR_UPD_IF.REGR_NO is '등록자 번호'
/

comment on column TI_GOODS_SMR_UPD_IF.REG_DTTM is '등록 일시'
/

comment on column TI_GOODS_SMR_UPD_IF.UPDR_NO is '수정자 번호'
/

comment on column TI_GOODS_SMR_UPD_IF.UPD_DTTM is '수정 일시'
/

create table TI_IF_MANAGE
(
    IF_ID      VARCHAR2(10) not null
        constraint IDX_TI_IF_MANAGE_PK
            primary key,
    IF_NM      VARCHAR2(100),
    TRNS_GB_CD VARCHAR2(1),
    JOB_GB     VARCHAR2(10),
    EXEC_CYCLE VARCHAR2(20),
    EXEC_MM    VARCHAR2(50),
    EXEC_WD    VARCHAR2(50),
    EXEC_DT    VARCHAR2(50),
    EXEC_TIME  VARCHAR2(50),
    EXEC_MI    VARCHAR2(50),
    SET_SCRIPT VARCHAR2(300),
    IF_GB_CD   VARCHAR2(10),
    UP_IF_ID   VARCHAR2(10),
    IF_API_URL VARCHAR2(300),
    IF_XML_URL VARCHAR2(300),
    DSCRT      VARCHAR2(500),
    REGR_NO    NUMBER,
    REG_DTTM   DATE,
    UPDR_NO    NUMBER,
    UPD_DTTM   DATE
)
/

comment on table TI_IF_MANAGE is '연계 관리'
/

comment on column TI_IF_MANAGE.IF_ID is '연계 ID'
/

comment on column TI_IF_MANAGE.IF_NM is '연계 명'
/

comment on column TI_IF_MANAGE.TRNS_GB_CD is '송수신 구분 코드'
/

comment on column TI_IF_MANAGE.JOB_GB is 'JOB 구분'
/

comment on column TI_IF_MANAGE.EXEC_CYCLE is '실행 주기'
/

comment on column TI_IF_MANAGE.EXEC_MM is '실행 월'
/

comment on column TI_IF_MANAGE.EXEC_WD is '실행 요일'
/

comment on column TI_IF_MANAGE.EXEC_DT is '실행 일자'
/

comment on column TI_IF_MANAGE.EXEC_TIME is '실행 시간'
/

comment on column TI_IF_MANAGE.EXEC_MI is '실행 분'
/

comment on column TI_IF_MANAGE.SET_SCRIPT is '설정 스크립트'
/

comment on column TI_IF_MANAGE.IF_GB_CD is '연계 구분 코드'
/

comment on column TI_IF_MANAGE.UP_IF_ID is '상위 연계 ID'
/

comment on column TI_IF_MANAGE.IF_API_URL is '연계 API_URL'
/

comment on column TI_IF_MANAGE.IF_XML_URL is '연계 XML_URL'
/

comment on column TI_IF_MANAGE.DSCRT is '설명'
/

comment on column TI_IF_MANAGE.REGR_NO is '등록자 번호'
/

comment on column TI_IF_MANAGE.REG_DTTM is '등록 일시'
/

comment on column TI_IF_MANAGE.UPDR_NO is '수정자 번호'
/

comment on column TI_IF_MANAGE.UPD_DTTM is '수정 일시'
/

create table TI_INVOICE_REG_IF
(
    IF_SNO            VARCHAR2(16) not null
        constraint IDX_TI_INVOICE_REG_IF_PK
            primary key,
    IF_ID             VARCHAR2(10),
    IF_NO             VARCHAR2(16),
    SITE_NO           NUMBER(19),
    ORD_NO            VARCHAR2(30),
    ORD_DTL_SEQ       VARCHAR2(5),
    SBN_ORD_NO        VARCHAR2(30),
    RLS_COURIER_CD    VARCHAR2(3),
    RLS_INVOICE_NO    VARCHAR2(30),
    RETURN_INVOICE_NO VARCHAR2(30),
    SBN_IF_YN         VARCHAR2(1),
    BTCH_PRC_YN       VARCHAR2(1),
    SBN_IF_MSG        VARCHAR2(300),
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE
)
/

comment on table TI_INVOICE_REG_IF is '송장 등록 연계'
/

comment on column TI_INVOICE_REG_IF.IF_SNO is '연계 일련번호'
/

comment on column TI_INVOICE_REG_IF.IF_ID is '연계 ID'
/

comment on column TI_INVOICE_REG_IF.IF_NO is '연계 번호'
/

comment on column TI_INVOICE_REG_IF.SITE_NO is '사이트 번호'
/

comment on column TI_INVOICE_REG_IF.ORD_NO is '주문 번호'
/

comment on column TI_INVOICE_REG_IF.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TI_INVOICE_REG_IF.SBN_ORD_NO is '사방넷 주문 번호'
/

comment on column TI_INVOICE_REG_IF.RLS_COURIER_CD is '출고 택배사 코드'
/

comment on column TI_INVOICE_REG_IF.RLS_INVOICE_NO is '출고 송장 번호'
/

comment on column TI_INVOICE_REG_IF.RETURN_INVOICE_NO is '반품 송장 번호'
/

comment on column TI_INVOICE_REG_IF.SBN_IF_YN is '사방넷 연계 여부'
/

comment on column TI_INVOICE_REG_IF.BTCH_PRC_YN is '배치 처리 여부'
/

comment on column TI_INVOICE_REG_IF.SBN_IF_MSG is '사방넷 연계 메세지'
/

comment on column TI_INVOICE_REG_IF.REGR_NO is '등록자 번호'
/

comment on column TI_INVOICE_REG_IF.REG_DTTM is '등록 일시'
/

comment on column TI_INVOICE_REG_IF.UPDR_NO is '수정자 번호'
/

comment on column TI_INVOICE_REG_IF.UPD_DTTM is '수정 일시'
/

create table TI_ORD_CLCT_IF
(
    IF_SNO                VARCHAR2(16) not null
        constraint IDX_TI_ORD_CLCT_IF_PK
            primary key,
    IF_ID                 VARCHAR2(10),
    IF_NO                 VARCHAR2(16),
    SITE_NO               NUMBER(19),
    ORD_NO                VARCHAR2(30),
    ORG_ORD_NO            VARCHAR2(30),
    ORD_DTL_SEQ           VARCHAR2(5),
    SBN_ORD_NO            VARCHAR2(30),
    SBN_ORG_ORD_NO        VARCHAR2(30),
    SPMALL_ORD_NO         VARCHAR2(30),
    SPMALL_ID             VARCHAR2(10),
    SPMALL_LOGIN_ID       VARCHAR2(300) default NULL,
    DELIVERY_NO           VARCHAR2(16),
    DLVRC_NO              NUMBER(16),
    ORD_DLVR_STATUS       VARCHAR2(20),
    ORDR_NM               VARCHAR2(100),
    ORDR_TEL              VARCHAR2(100),
    ORDR_MOBILE           VARCHAR2(100),
    ORDR_EMAIL            VARCHAR2(100),
    ADRS_TEL              VARCHAR2(100),
    ADRS_MOBILE           VARCHAR2(100),
    DLVR_MSG              VARCHAR2(1000),
    ADRS_NM               VARCHAR2(100),
    POST_NO               VARCHAR2(100),
    DTL_ADDR              VARCHAR2(255),
    SALE_AMT              VARCHAR2(10),
    PAYMENT_AMT           VARCHAR2(10),
    ORD_ACCEPT_DTTM       VARCHAR2(14),
    GOODS_NM              VARCHAR2(100),
    OPT_NM                VARCHAR2(100),
    SALE_PRICE            VARCHAR2(10),
    ORD_QTT               VARCHAR2(5),
    SPMALL_ORD_DLVR_INFO  VARCHAR2(10),
    REAL_DLVR_AMT         VARCHAR2(10),
    GOODS_NO              VARCHAR2(20),
    ITEM_NO               VARCHAR2(20),
    ATTR_VER              VARCHAR2(5),
    ORD_GB_CD             VARCHAR2(3),
    ORD_CLCT_DTTM         VARCHAR2(14),
    ORD_CMPLT_DTTM        VARCHAR2(14),
    RETURN_CMPLT_REG_DTTM VARCHAR2(14),
    EXCHG_CMPLT_DTTM      VARCHAR2(14),
    RLS_CMPLT_REG_DTTM    VARCHAR2(14),
    ORD_CANCEL_DTTM       VARCHAR2(14),
    RLS_COURIER_CD        VARCHAR2(3),
    RLS_INVOICE_NO        VARCHAR2(30),
    DLVR_WISH_DT          VARCHAR2(8),
    SBN_IF_YN             VARCHAR2(1),
    SBN_IF_MSG            VARCHAR2(300),
    BTCH_PRC_YN           VARCHAR2(1),
    REGR_NO               NUMBER,
    REG_DTTM              DATE,
    UPDR_NO               NUMBER,
    UPD_DTTM              DATE
)
/

comment on table TI_ORD_CLCT_IF is '주문 수집 연계'
/

comment on column TI_ORD_CLCT_IF.IF_SNO is '연계 일련번호'
/

comment on column TI_ORD_CLCT_IF.IF_ID is '연계 ID'
/

comment on column TI_ORD_CLCT_IF.IF_NO is '연계 번호'
/

comment on column TI_ORD_CLCT_IF.SITE_NO is '사이트 번호'
/

comment on column TI_ORD_CLCT_IF.ORD_NO is '주문 번호'
/

comment on column TI_ORD_CLCT_IF.ORG_ORD_NO is '원본 주문 번호'
/

comment on column TI_ORD_CLCT_IF.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TI_ORD_CLCT_IF.SBN_ORD_NO is '사방넷 주문 번호'
/

comment on column TI_ORD_CLCT_IF.SBN_ORG_ORD_NO is '사방넷 원본 주문 번호'
/

comment on column TI_ORD_CLCT_IF.SPMALL_ORD_NO is '쇼핑몰 주문 번호'
/

comment on column TI_ORD_CLCT_IF.SPMALL_ID is '쇼핑몰 ID'
/

comment on column TI_ORD_CLCT_IF.SPMALL_LOGIN_ID is '쇼핑몰 로그인 ID'
/

comment on column TI_ORD_CLCT_IF.DELIVERY_NO is '배송지 번호'
/

comment on column TI_ORD_CLCT_IF.DLVRC_NO is '배송비 번호'
/

comment on column TI_ORD_CLCT_IF.ORD_DLVR_STATUS is '주문 배송 상태'
/

comment on column TI_ORD_CLCT_IF.ORDR_NM is '주문자 명'
/

comment on column TI_ORD_CLCT_IF.ORDR_TEL is '주문자 전화'
/

comment on column TI_ORD_CLCT_IF.ORDR_MOBILE is '주문자 휴대폰'
/

comment on column TI_ORD_CLCT_IF.ORDR_EMAIL is '주문자 이메일'
/

comment on column TI_ORD_CLCT_IF.ADRS_TEL is '수취인 전화'
/

comment on column TI_ORD_CLCT_IF.ADRS_MOBILE is '수취인 휴대폰'
/

comment on column TI_ORD_CLCT_IF.DLVR_MSG is '배송 메세지'
/

comment on column TI_ORD_CLCT_IF.ADRS_NM is '수취인 명'
/

comment on column TI_ORD_CLCT_IF.POST_NO is '우편 번호'
/

comment on column TI_ORD_CLCT_IF.DTL_ADDR is '상세 주소'
/

comment on column TI_ORD_CLCT_IF.SALE_AMT is '판매 금액'
/

comment on column TI_ORD_CLCT_IF.PAYMENT_AMT is '결제 금액'
/

comment on column TI_ORD_CLCT_IF.ORD_ACCEPT_DTTM is '주문 접수 일시'
/

comment on column TI_ORD_CLCT_IF.GOODS_NM is '상품 명'
/

comment on column TI_ORD_CLCT_IF.OPT_NM is '옵션 명'
/

comment on column TI_ORD_CLCT_IF.SALE_PRICE is '판매 단가'
/

comment on column TI_ORD_CLCT_IF.ORD_QTT is '주문 수량'
/

comment on column TI_ORD_CLCT_IF.SPMALL_ORD_DLVR_INFO is '쇼핑몰 주문 배송 정보'
/

comment on column TI_ORD_CLCT_IF.REAL_DLVR_AMT is '실 배송 금액'
/

comment on column TI_ORD_CLCT_IF.GOODS_NO is '상품 번호'
/

comment on column TI_ORD_CLCT_IF.ITEM_NO is '단품 번호'
/

comment on column TI_ORD_CLCT_IF.ATTR_VER is '속성 VER'
/

comment on column TI_ORD_CLCT_IF.ORD_GB_CD is '주문 구분 코드'
/

comment on column TI_ORD_CLCT_IF.ORD_CLCT_DTTM is '주문 수집 일시'
/

comment on column TI_ORD_CLCT_IF.ORD_CMPLT_DTTM is '주문 완료 일시'
/

comment on column TI_ORD_CLCT_IF.RETURN_CMPLT_REG_DTTM is '반품 완료 등록 일시'
/

comment on column TI_ORD_CLCT_IF.EXCHG_CMPLT_DTTM is '교환 완료 일시'
/

comment on column TI_ORD_CLCT_IF.RLS_CMPLT_REG_DTTM is '출고 완료 등록 일시'
/

comment on column TI_ORD_CLCT_IF.ORD_CANCEL_DTTM is '주문 취소 일시'
/

comment on column TI_ORD_CLCT_IF.RLS_COURIER_CD is '출고 택배사 코드'
/

comment on column TI_ORD_CLCT_IF.RLS_INVOICE_NO is '출고 송장 번호'
/

comment on column TI_ORD_CLCT_IF.DLVR_WISH_DT is '배송 희망 일자'
/

comment on column TI_ORD_CLCT_IF.SBN_IF_YN is '사방넷 연계 여부'
/

comment on column TI_ORD_CLCT_IF.SBN_IF_MSG is '사방넷 연계 메세지'
/

comment on column TI_ORD_CLCT_IF.BTCH_PRC_YN is '배치 처리 여부'
/

comment on column TI_ORD_CLCT_IF.REGR_NO is '등록자 번호'
/

comment on column TI_ORD_CLCT_IF.REG_DTTM is '등록 일시'
/

comment on column TI_ORD_CLCT_IF.UPDR_NO is '수정자 번호'
/

comment on column TI_ORD_CLCT_IF.UPD_DTTM is '수정 일시'
/

create index IDX_TI_ORD_CLCT_IF_001
    on TI_ORD_CLCT_IF (ORD_NO)
/

create table TG_GOODS_IMG_SET
(
    GOODS_IMGSET_NO NUMBER(19)   not null
        constraint IDX_TG_GOODS_IMG_SET_PK
            primary key,
    GOODS_NO        VARCHAR2(16) not null,
    DLGT_IMG_YN     VARCHAR2(1),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE
)
/

comment on table TG_GOODS_IMG_SET is '상품 이미지 세트'
/

comment on column TG_GOODS_IMG_SET.GOODS_IMGSET_NO is '상품 이미지세트 번호'
/

comment on column TG_GOODS_IMG_SET.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_IMG_SET.DLGT_IMG_YN is '대표 이미지 여부'
/

comment on column TG_GOODS_IMG_SET.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_IMG_SET.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_IMG_SET.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_IMG_SET.UPD_DTTM is '수정 일시'
/

create index IDX_TG_GOODS_IMG_SET_001
    on TG_GOODS_IMG_SET (GOODS_IMGSET_NO, GOODS_NO, DLGT_IMG_YN)
/

create table TG_GOODS_NOTIFY
(
    GOODS_NO   VARCHAR2(16) not null,
    ITEM_NO    NUMBER(19)   not null
        constraint FK_GOODS_NOTIFY_2
            references TG_NOTIFY_ITEM,
    ITEM_VALUE VARCHAR2(500) default NULL,
    REGR_NO    NUMBER,
    REG_DTTM   DATE,
    UPDR_NO    NUMBER,
    UPD_DTTM   DATE,
    constraint IDX_TG_GOODS_NOTIFY_PK
        primary key (GOODS_NO, ITEM_NO)
)
/

comment on table TG_GOODS_NOTIFY is '상품 고시'
/

comment on column TG_GOODS_NOTIFY.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_NOTIFY.ITEM_NO is '항목 번호'
/

comment on column TG_GOODS_NOTIFY.ITEM_VALUE is '항목 값'
/

comment on column TG_GOODS_NOTIFY.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_NOTIFY.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_NOTIFY.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_NOTIFY.UPD_DTTM is '수정 일시'
/

create table TG_HA_ATTR
(
    GOODS_NO     VARCHAR2(16) not null
        constraint IDX_HA_ATTR_PK
            primary key,
    HR_TYPE_CD   CHAR(2),
    HR_DEGREE_CD CHAR(2),
    FRM_CD       CHAR(2),
    REGR_NO      NUMBER,
    REG_DTTM     DATE,
    UPDR_NO      NUMBER,
    UPD_DTTM     DATE
)
/

comment on table TG_HA_ATTR is '보청기 속성'
/

comment on column TG_HA_ATTR.GOODS_NO is '상품 번호'
/

comment on column TG_HA_ATTR.HR_TYPE_CD is '난청 유형 코드'
/

comment on column TG_HA_ATTR.HR_DEGREE_CD is '난청 정도 코드'
/

comment on column TG_HA_ATTR.FRM_CD is '형태 코드'
/

comment on column TG_HA_ATTR.REGR_NO is '등록자 번호'
/

comment on column TG_HA_ATTR.REG_DTTM is '등록 일시'
/

comment on column TG_HA_ATTR.UPDR_NO is '수정자 번호'
/

comment on column TG_HA_ATTR.UPD_DTTM is '수정 일시'
/

create table TG_ITEM_ATTR
(
    ITEM_NO  VARCHAR2(18) not null,
    ATTR_VER NUMBER       not null,
    OPT_NO1  NUMBER(19),
    ATTR_NO1 NUMBER(19),
    OPT_NO2  NUMBER(19),
    ATTR_NO2 NUMBER(19),
    OPT_NO3  NUMBER(19),
    ATTR_NO3 NUMBER(19),
    OPT_NO4  NUMBER(19),
    ATTR_NO4 NUMBER(19),
    REGR_NO  NUMBER,
    REG_DTTM DATE,
    UPDR_NO  NUMBER,
    UPD_DTTM DATE,
    constraint IDX_TG_ITEM_ATTR_PK
        primary key (ITEM_NO, ATTR_VER)
)
/

comment on table TG_ITEM_ATTR is '단품 속성'
/

comment on column TG_ITEM_ATTR.ITEM_NO is '단품 번호'
/

comment on column TG_ITEM_ATTR.ATTR_VER is '속성 VER'
/

comment on column TG_ITEM_ATTR.OPT_NO1 is '옵션 번호1'
/

comment on column TG_ITEM_ATTR.ATTR_NO1 is '속성 번호1'
/

comment on column TG_ITEM_ATTR.OPT_NO2 is '옵션 번호2'
/

comment on column TG_ITEM_ATTR.ATTR_NO2 is '속성 번호2'
/

comment on column TG_ITEM_ATTR.OPT_NO3 is '옵션 번호3'
/

comment on column TG_ITEM_ATTR.ATTR_NO3 is '속성 번호3'
/

comment on column TG_ITEM_ATTR.OPT_NO4 is '옵션 번호4'
/

comment on column TG_ITEM_ATTR.ATTR_NO4 is '속성 번호4'
/

comment on column TG_ITEM_ATTR.REGR_NO is '등록자 번호'
/

comment on column TG_ITEM_ATTR.REG_DTTM is '등록 일시'
/

comment on column TG_ITEM_ATTR.UPDR_NO is '수정자 번호'
/

comment on column TG_ITEM_ATTR.UPD_DTTM is '수정 일시'
/

create table TG_ITEM_PRICE_CHG_HIST
(
    ITEM_NO   VARCHAR2(18) not null,
    SEQ       NUMBER(19)   not null,
    CHG_DT    VARCHAR2(8),
    CHG_CD    VARCHAR2(2),
    CHG_PRICE NUMBER(20, 2),
    REGR_NO   NUMBER,
    REG_DTTM  DATE,
    constraint IDX_TG_ITEM_PRICE_CHG_HIST_PK
        primary key (ITEM_NO, SEQ)
)
/

comment on table TG_ITEM_PRICE_CHG_HIST is '단품 가격 변경 이력'
/

comment on column TG_ITEM_PRICE_CHG_HIST.ITEM_NO is '단품 번호'
/

comment on column TG_ITEM_PRICE_CHG_HIST.SEQ is '순번'
/

comment on column TG_ITEM_PRICE_CHG_HIST.CHG_DT is '변경 일자'
/

comment on column TG_ITEM_PRICE_CHG_HIST.CHG_CD is '증감 코드'
/

comment on column TG_ITEM_PRICE_CHG_HIST.CHG_PRICE is '변경 가격'
/

comment on column TG_ITEM_PRICE_CHG_HIST.REGR_NO is '등록자 번호'
/

comment on column TG_ITEM_PRICE_CHG_HIST.REG_DTTM is '등록 일시'
/

create table TG_ITEM_QTT_CHG_HIST
(
    ITEM_NO  VARCHAR2(18) not null,
    SEQ      NUMBER(19)   not null,
    CHG_DT   VARCHAR2(8),
    CHG_CD   VARCHAR2(2),
    CHG_QTT  CHAR(18),
    REGR_NO  NUMBER,
    REG_DTTM DATE,
    constraint IDX_TG_ITEM_QTT_CHG_HIST_PK
        primary key (ITEM_NO, SEQ)
)
/

comment on table TG_ITEM_QTT_CHG_HIST is '단품 수량 변경 이력'
/

comment on column TG_ITEM_QTT_CHG_HIST.ITEM_NO is '단품 번호'
/

comment on column TG_ITEM_QTT_CHG_HIST.SEQ is '순번'
/

comment on column TG_ITEM_QTT_CHG_HIST.CHG_DT is '변경 일자'
/

comment on column TG_ITEM_QTT_CHG_HIST.CHG_CD is '증감 코드'
/

comment on column TG_ITEM_QTT_CHG_HIST.CHG_QTT is '변경 수량'
/

comment on column TG_ITEM_QTT_CHG_HIST.REGR_NO is '등록자 번호'
/

comment on column TG_ITEM_QTT_CHG_HIST.REG_DTTM is '등록 일시'
/

create table TG_RELATE_GOODS
(
    GOODS_NO        VARCHAR2(16) not null,
    RELATE_GOODS_NO VARCHAR2(16) not null,
    EACH_REG_SET_YN VARCHAR2(1)  not null,
    PRIOR_RANK      NUMBER,
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    constraint IDX_TG_RELATE_GOODS_PK
        primary key (GOODS_NO, RELATE_GOODS_NO)
)
/

comment on table TG_RELATE_GOODS is '관련 상품'
/

comment on column TG_RELATE_GOODS.GOODS_NO is '상품 번호'
/

comment on column TG_RELATE_GOODS.RELATE_GOODS_NO is '관련 상품 번호'
/

comment on column TG_RELATE_GOODS.EACH_REG_SET_YN is '서로 등록 설정 여부'
/

comment on column TG_RELATE_GOODS.PRIOR_RANK is '우선 순위'
/

comment on column TG_RELATE_GOODS.REGR_NO is '등록자 번호'
/

comment on column TG_RELATE_GOODS.REG_DTTM is '등록 일시'
/

comment on column TG_RELATE_GOODS.UPDR_NO is '수정자 번호'
/

comment on column TG_RELATE_GOODS.UPD_DTTM is '수정 일시'
/

create table TG_SUNGLASS_ATTR
(
    GOODS_NO               VARCHAR2(16) not null
        constraint IDX_SUNGLASS_ATTR_PK
            primary key,
    SHAPE_CD               CHAR(2),
    MATERIAL_CD            CHAR(2),
    EYEBALL_TOP_COLOR_CD   CHAR(2),
    COLOR_CD               VARCHAR2(50) default NULL,
    REGR_NO                NUMBER,
    REG_DTTM               DATE,
    UPDR_NO                NUMBER,
    UPD_DTTM               DATE,
    EYEBALL_METAL_COLOR_CD CHAR(2),
    TEMPLE_METAL_COLOR_CD  CHAR(2),
    TEMPLE_EPOXY_COLOR_CD  CHAR(2),
    TIP_COLOR_CD           CHAR(2),
    LENS_COLOR_CD          CHAR(2),
    SIZE_CD                CHAR(2)
)
/

comment on table TG_SUNGLASS_ATTR is '선글라스 속성'
/

comment on column TG_SUNGLASS_ATTR.GOODS_NO is '상품 번호'
/

comment on column TG_SUNGLASS_ATTR.SHAPE_CD is '모양 코드'
/

comment on column TG_SUNGLASS_ATTR.MATERIAL_CD is '재질 코드'
/

comment on column TG_SUNGLASS_ATTR.EYEBALL_TOP_COLOR_CD is '안구 상단 색상 코드'
/

comment on column TG_SUNGLASS_ATTR.COLOR_CD is '색상 코드'
/

comment on column TG_SUNGLASS_ATTR.REGR_NO is '등록자 번호'
/

comment on column TG_SUNGLASS_ATTR.REG_DTTM is '등록 일시'
/

comment on column TG_SUNGLASS_ATTR.UPDR_NO is '수정자 번호'
/

comment on column TG_SUNGLASS_ATTR.UPD_DTTM is '수정 일시'
/

comment on column TG_SUNGLASS_ATTR.EYEBALL_METAL_COLOR_CD is '안구 메탈 색상 코드'
/

comment on column TG_SUNGLASS_ATTR.TEMPLE_METAL_COLOR_CD is '다리 메탈 색상 코드'
/

comment on column TG_SUNGLASS_ATTR.TEMPLE_EPOXY_COLOR_CD is '다리 에폭시 색상 코드'
/

comment on column TG_SUNGLASS_ATTR.TIP_COLOR_CD is '팁 색상 코드'
/

comment on column TG_SUNGLASS_ATTR.LENS_COLOR_CD is '렌즈 색상 코드'
/

comment on column TG_SUNGLASS_ATTR.SIZE_CD is '사이즈 코드'
/

create table TO_BASKET_ANLS
(
    BASKET_NO    NUMBER(16) not null,
    SITE_NO      NUMBER(19) not null,
    MEMBER_NO    NUMBER,
    GOODS_NO     VARCHAR2(16),
    ITEM_NO      VARCHAR2(18),
    ORD_MEDIA_CD VARCHAR2(2),
    REGR_NO      NUMBER,
    REG_DTTM     DATE,
    constraint IDX_TO_BASKET_ANLS_PK
        primary key (BASKET_NO, SITE_NO)
)
/

comment on table TO_BASKET_ANLS is '장바구니 분석'
/

comment on column TO_BASKET_ANLS.BASKET_NO is '장바구니 번호'
/

comment on column TO_BASKET_ANLS.SITE_NO is '사이트 번호'
/

comment on column TO_BASKET_ANLS.MEMBER_NO is '회원 번호'
/

comment on column TO_BASKET_ANLS.GOODS_NO is '상품 번호'
/

comment on column TO_BASKET_ANLS.ITEM_NO is '단품 번호'
/

comment on column TO_BASKET_ANLS.ORD_MEDIA_CD is '주문 매체 코드'
/

comment on column TO_BASKET_ANLS.REGR_NO is '등록자 번호'
/

comment on column TO_BASKET_ANLS.REG_DTTM is '등록 일시'
/

create table TG_ADD_OPT
(
    GOODS_NO    VARCHAR2(16) not null,
    ADD_OPT_NO  NUMBER(19)   not null,
    ADD_OPT_NM  VARCHAR2(50),
    REQUIRED_YN VARCHAR2(1),
    REGR_NO     NUMBER,
    REG_DTTM    DATE,
    UPDR_NO     NUMBER,
    UPD_DTTM    DATE,
    constraint IDX_TG_ADD_OPT_PK
        primary key (GOODS_NO, ADD_OPT_NO)
)
/

comment on table TG_ADD_OPT is '추가 옵션'
/

comment on column TG_ADD_OPT.GOODS_NO is '상품 번호'
/

comment on column TG_ADD_OPT.ADD_OPT_NO is '추가 옵션 번호'
/

comment on column TG_ADD_OPT.ADD_OPT_NM is '추가 옵션 명'
/

comment on column TG_ADD_OPT.REQUIRED_YN is '필수 여부'
/

comment on column TG_ADD_OPT.REGR_NO is '등록자 번호'
/

comment on column TG_ADD_OPT.REG_DTTM is '등록 일시'
/

comment on column TG_ADD_OPT.UPDR_NO is '수정자 번호'
/

comment on column TG_ADD_OPT.UPD_DTTM is '수정 일시'
/

create table TG_ADD_OPT_DTL
(
    GOODS_NO           VARCHAR2(16) not null,
    ADD_OPT_NO         NUMBER(19)   not null,
    ADD_OPT_DTL_SEQ    NUMBER(19)   not null,
    ADD_OPT_VALUE      VARCHAR2(50),
    ADD_OPT_AMT        NUMBER(20, 2),
    ADD_OPT_AMT_CHG_CD VARCHAR2(1),
    OPT_VER            NUMBER,
    REGR_NO            NUMBER,
    REG_DTTM           DATE,
    UPDR_NO            NUMBER,
    UPD_DTTM           DATE,
    constraint IDX_TG_ADD_OPT_DTL_PK
        primary key (GOODS_NO, ADD_OPT_NO, ADD_OPT_DTL_SEQ),
    constraint FK_ADD_OPT_DTL_1
        foreign key (GOODS_NO, ADD_OPT_NO) references TG_ADD_OPT
)
/

comment on table TG_ADD_OPT_DTL is '추가 옵션 상세'
/

comment on column TG_ADD_OPT_DTL.GOODS_NO is '상품 번호'
/

comment on column TG_ADD_OPT_DTL.ADD_OPT_NO is '추가 옵션 번호'
/

comment on column TG_ADD_OPT_DTL.ADD_OPT_DTL_SEQ is '추가 옵션 상세 순번'
/

comment on column TG_ADD_OPT_DTL.ADD_OPT_VALUE is '추가 옵션 값'
/

comment on column TG_ADD_OPT_DTL.ADD_OPT_AMT is '추가 옵션 금액'
/

comment on column TG_ADD_OPT_DTL.ADD_OPT_AMT_CHG_CD is '추가 옵션 금액 증감 코드'
/

comment on column TG_ADD_OPT_DTL.OPT_VER is '옵션 VER'
/

comment on column TG_ADD_OPT_DTL.REGR_NO is '등록자 번호'
/

comment on column TG_ADD_OPT_DTL.REG_DTTM is '등록 일시'
/

comment on column TG_ADD_OPT_DTL.UPDR_NO is '수정자 번호'
/

comment on column TG_ADD_OPT_DTL.UPD_DTTM is '수정 일시'
/

create table TG_CONTACT_LENS_ATTR
(
    GOODS_NO      VARCHAR2(16) not null
        constraint IDX_CONTACT_LENS_ATTR_PK
            primary key,
    WEAR_CYCLE_CD CHAR(2),
    FOCUS_CD      CHAR(2),
    MATERIAL_CD   CHAR(2),
    COLOR_CD      VARCHAR2(50) default NULL,
    REGR_NO       NUMBER,
    REG_DTTM      DATE,
    UPDR_NO       NUMBER,
    UPD_DTTM      DATE,
    SIZE_CD       CHAR(2),
    PRICE_CD      CHAR(2),
    STATUS_CD     CHAR(2)
)
/

comment on table TG_CONTACT_LENS_ATTR is '콘택트 렌즈 속성'
/

comment on column TG_CONTACT_LENS_ATTR.GOODS_NO is '상품 번호'
/

comment on column TG_CONTACT_LENS_ATTR.WEAR_CYCLE_CD is '착용 주기 코드'
/

comment on column TG_CONTACT_LENS_ATTR.FOCUS_CD is '초점 코드'
/

comment on column TG_CONTACT_LENS_ATTR.MATERIAL_CD is '재질 코드'
/

comment on column TG_CONTACT_LENS_ATTR.COLOR_CD is '색상 코드'
/

comment on column TG_CONTACT_LENS_ATTR.REGR_NO is '등록자 번호'
/

comment on column TG_CONTACT_LENS_ATTR.REG_DTTM is '등록 일시'
/

comment on column TG_CONTACT_LENS_ATTR.UPDR_NO is '수정자 번호'
/

comment on column TG_CONTACT_LENS_ATTR.UPD_DTTM is '수정 일시'
/

comment on column TG_CONTACT_LENS_ATTR.SIZE_CD is '사이즈 코드'
/

comment on column TG_CONTACT_LENS_ATTR.PRICE_CD is '가격 코드'
/

comment on column TG_CONTACT_LENS_ATTR.STATUS_CD is '증상 코드'
/

create table TG_FRAMES_ATTR
(
    GOODS_NO    VARCHAR2(16) not null
        constraint IDX_FRAMES_ATTR_PK
            primary key,
    SHAPE_CD    CHAR(2),
    MATERIAL_CD CHAR(2),
    SIZE_CD     CHAR(2),
    COLOR_CD    VARCHAR2(50) default NULL,
    REGR_NO     NUMBER,
    REG_DTTM    DATE,
    UPDR_NO     NUMBER,
    UPD_DTTM    DATE
)
/

comment on table TG_FRAMES_ATTR is '안경테 속성'
/

comment on column TG_FRAMES_ATTR.GOODS_NO is '상품 번호'
/

comment on column TG_FRAMES_ATTR.SHAPE_CD is '모양 코드'
/

comment on column TG_FRAMES_ATTR.MATERIAL_CD is '재질 코드'
/

comment on column TG_FRAMES_ATTR.SIZE_CD is '사이즈 코드'
/

comment on column TG_FRAMES_ATTR.COLOR_CD is '색상 코드'
/

comment on column TG_FRAMES_ATTR.REGR_NO is '등록자 번호'
/

comment on column TG_FRAMES_ATTR.REG_DTTM is '등록 일시'
/

comment on column TG_FRAMES_ATTR.UPDR_NO is '수정자 번호'
/

comment on column TG_FRAMES_ATTR.UPD_DTTM is '수정 일시'
/

create table TG_GLASSES_LENS_ATTR
(
    GOODS_NO  VARCHAR2(16) not null
        constraint IDX_GLASSES_LENS_ATTR_PK
            primary key,
    USE_CD    CHAR(2),
    FOCUS_CD  CHAR(2),
    ACTION_CD CHAR(2),
    COLOR_CD  VARCHAR2(50) default NULL,
    REGR_NO   NUMBER,
    REG_DTTM  DATE,
    UPDR_NO   NUMBER,
    UPD_DTTM  DATE,
    MMFT_CD   CHAR(2),
    THICK_CD  CHAR(2),
    DESIGN_CD CHAR(2)
)
/

comment on table TG_GLASSES_LENS_ATTR is '안경 렌즈 속성'
/

comment on column TG_GLASSES_LENS_ATTR.GOODS_NO is '상품 번호'
/

comment on column TG_GLASSES_LENS_ATTR.USE_CD is '용도 코드'
/

comment on column TG_GLASSES_LENS_ATTR.FOCUS_CD is '초점 코드'
/

comment on column TG_GLASSES_LENS_ATTR.ACTION_CD is '기능 코드'
/

comment on column TG_GLASSES_LENS_ATTR.COLOR_CD is '색상 코드'
/

comment on column TG_GLASSES_LENS_ATTR.REGR_NO is '등록자 번호'
/

comment on column TG_GLASSES_LENS_ATTR.REG_DTTM is '등록 일시'
/

comment on column TG_GLASSES_LENS_ATTR.UPDR_NO is '수정자 번호'
/

comment on column TG_GLASSES_LENS_ATTR.UPD_DTTM is '수정 일시'
/

comment on column TG_GLASSES_LENS_ATTR.MMFT_CD is '제조사 코드'
/

comment on column TG_GLASSES_LENS_ATTR.THICK_CD is '두께코드'
/

comment on column TG_GLASSES_LENS_ATTR.DESIGN_CD is '설계 코드'
/

create table TG_GOODS_IMG_DTL
(
    GOODS_IMGSET_NO NUMBER(19)  not null
        constraint FK_GOODS_IMG_DTL_1
            references TG_GOODS_IMG_SET,
    GOODS_IMG_TYPE  VARCHAR2(2) not null,
    IMG_PATH        VARCHAR2(50),
    IMG_NM          VARCHAR2(300),
    IMG_WIDTH       NUMBER,
    IMG_HEIGHT      NUMBER,
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    IMG_SIZE        NUMBER,
    constraint IDX_TG_GOODS_IMG_DTL_PK
        primary key (GOODS_IMGSET_NO, GOODS_IMG_TYPE)
)
/

comment on table TG_GOODS_IMG_DTL is '상품 이미지 상세'
/

comment on column TG_GOODS_IMG_DTL.GOODS_IMGSET_NO is '상품 이미지세트 번호'
/

comment on column TG_GOODS_IMG_DTL.GOODS_IMG_TYPE is '상품 이미지 유형'
/

comment on column TG_GOODS_IMG_DTL.IMG_PATH is '이미지 경로'
/

comment on column TG_GOODS_IMG_DTL.IMG_NM is '이미지 명'
/

comment on column TG_GOODS_IMG_DTL.IMG_WIDTH is '이미지 가로'
/

comment on column TG_GOODS_IMG_DTL.IMG_HEIGHT is '이미지 세로'
/

comment on column TG_GOODS_IMG_DTL.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_IMG_DTL.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_IMG_DTL.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_IMG_DTL.UPD_DTTM is '수정 일시'
/

comment on column TG_GOODS_IMG_DTL.IMG_SIZE is '이미지 사이즈'
/

create table TD_DSN_IMG
(
    IMG_SEQ     NUMBER(16) not null,
    SITE_NO     NUMBER(19) not null,
    FILE_PATH   VARCHAR2(300),
    ORG_FILE_NM VARCHAR2(300),
    FILE_NM     VARCHAR2(300),
    DSN_GRP_CD  VARCHAR2(3),
    FILE_SIZE   NUMBER,
    SORT_SEQ    NUMBER,
    REG_DTTM    DATE,
    REGR_NO     NUMBER,
    UPD_DTTM    DATE,
    UPDR_NO     NUMBER
)
/

comment on table TD_DSN_IMG is '디자인 이미지'
/

comment on column TD_DSN_IMG.IMG_SEQ is '이미지 순번'
/

comment on column TD_DSN_IMG.SITE_NO is '사이트 번호'
/

comment on column TD_DSN_IMG.FILE_PATH is '파일 경로'
/

comment on column TD_DSN_IMG.ORG_FILE_NM is '원본 파일 명'
/

comment on column TD_DSN_IMG.FILE_NM is '파일 명'
/

comment on column TD_DSN_IMG.DSN_GRP_CD is '디자인 그룹 코드'
/

comment on column TD_DSN_IMG.FILE_SIZE is '파일 사이즈'
/

comment on column TD_DSN_IMG.SORT_SEQ is '정렬 순서'
/

comment on column TD_DSN_IMG.REG_DTTM is '등록 일시'
/

comment on column TD_DSN_IMG.REGR_NO is '등록자 번호'
/

comment on column TD_DSN_IMG.UPD_DTTM is '수정 일시'
/

comment on column TD_DSN_IMG.UPDR_NO is '수정자 번호'
/

create table TD_IMG_ATCHFILEDTL
(
    SEQ         NUMBER(16) not null,
    FILE_NO     NUMBER(16) not null,
    FILE_PATH   VARCHAR2(300),
    ORG_FILE_NM VARCHAR2(300),
    FILE_NM     VARCHAR2(300),
    FILE_SIZE   NUMBER,
    SORT_SEQ    NUMBER,
    REG_DTTM    DATE,
    REGR_NO     NUMBER,
    UPD_DTTM    DATE,
    UPDR_NO     NUMBER
)
/

comment on table TD_IMG_ATCHFILEDTL is '이미지 첨부파일상세'
/

comment on column TD_IMG_ATCHFILEDTL.SEQ is '순번'
/

comment on column TD_IMG_ATCHFILEDTL.FILE_NO is '파일 번호'
/

comment on column TD_IMG_ATCHFILEDTL.FILE_PATH is '파일 경로'
/

comment on column TD_IMG_ATCHFILEDTL.ORG_FILE_NM is '원본 파일 명'
/

comment on column TD_IMG_ATCHFILEDTL.FILE_NM is '파일 명'
/

comment on column TD_IMG_ATCHFILEDTL.FILE_SIZE is '파일 사이즈'
/

comment on column TD_IMG_ATCHFILEDTL.SORT_SEQ is '정렬 순서'
/

comment on column TD_IMG_ATCHFILEDTL.REG_DTTM is '등록 일시'
/

comment on column TD_IMG_ATCHFILEDTL.REGR_NO is '등록자 번호'
/

comment on column TD_IMG_ATCHFILEDTL.UPD_DTTM is '수정 일시'
/

comment on column TD_IMG_ATCHFILEDTL.UPDR_NO is '수정자 번호'
/

create table TD_ORG_SKIN
(
    SKIN_NO         NUMBER(16) not null,
    SITE_NO         NUMBER(19) not null,
    PC_GB_CD        VARCHAR2(1),
    DEFAULT_SKIN_YN VARCHAR2(1),
    SKIN_NM         VARCHAR2(100),
    IMG_NM          VARCHAR2(255),
    IMG_PATH        VARCHAR2(255),
    FOLDER_PATH     VARCHAR2(255),
    APPLY_SKIN_YN   VARCHAR2(1),
    WORK_SKIN_YN    VARCHAR2(1),
    REG_DTTM        DATE,
    REGR_NO         NUMBER,
    UPD_DTTM        DATE,
    UPDR_NO         NUMBER
)
/

comment on table TD_ORG_SKIN is '원본 스킨'
/

comment on column TD_ORG_SKIN.SKIN_NO is '스킨 번호'
/

comment on column TD_ORG_SKIN.SITE_NO is '사이트 번호'
/

comment on column TD_ORG_SKIN.PC_GB_CD is 'PC 구분 코드'
/

comment on column TD_ORG_SKIN.DEFAULT_SKIN_YN is '기본 스킨 여부'
/

comment on column TD_ORG_SKIN.SKIN_NM is '스킨 명'
/

comment on column TD_ORG_SKIN.IMG_NM is '이미지 명'
/

comment on column TD_ORG_SKIN.IMG_PATH is '이미지 경로'
/

comment on column TD_ORG_SKIN.FOLDER_PATH is '폴더 경로'
/

comment on column TD_ORG_SKIN.APPLY_SKIN_YN is '적용 스킨 여부'
/

comment on column TD_ORG_SKIN.WORK_SKIN_YN is '작업 스킨 여부'
/

comment on column TD_ORG_SKIN.REG_DTTM is '등록 일시'
/

comment on column TD_ORG_SKIN.REGR_NO is '등록자 번호'
/

comment on column TD_ORG_SKIN.UPD_DTTM is '수정 일시'
/

comment on column TD_ORG_SKIN.UPDR_NO is '수정자 번호'
/

create table TS_IMG_SERV_SET
(
    SITE_NO        NUMBER(19) not null,
    SVC_START_DTTM DATE,
    SVC_END_DTTM   DATE,
    IMG_SERV_URL   VARCHAR2(300),
    ID             VARCHAR2(255),
    DISK           NUMBER,
    TRAFFIC        NUMBER,
    REGR_NO        NUMBER,
    REG_DTTM       DATE,
    UPDR_NO        NUMBER,
    UPD_DTTM       DATE
)
/

comment on table TS_IMG_SERV_SET is '이미지 서버 설정'
/

comment on column TS_IMG_SERV_SET.SITE_NO is '사이트 번호'
/

comment on column TS_IMG_SERV_SET.SVC_START_DTTM is '서비스 시작 일시'
/

comment on column TS_IMG_SERV_SET.SVC_END_DTTM is '서비스 종료 일시'
/

comment on column TS_IMG_SERV_SET.IMG_SERV_URL is '이미지 서버 URL'
/

comment on column TS_IMG_SERV_SET.ID is 'ID'
/

comment on column TS_IMG_SERV_SET.DISK is '디스크'
/

comment on column TS_IMG_SERV_SET.TRAFFIC is '트래픽'
/

comment on column TS_IMG_SERV_SET.REGR_NO is '등록자 번호'
/

comment on column TS_IMG_SERV_SET.REG_DTTM is '등록 일시'
/

comment on column TS_IMG_SERV_SET.UPDR_NO is '수정자 번호'
/

comment on column TS_IMG_SERV_SET.UPD_DTTM is '수정 일시'
/

create table TS_PAYMENT_WAY_APPLY_INFO
(
    PAYMENT_WAY_APPLY_INFO_SEQ NUMBER(19) not null,
    SITE_NO                    NUMBER(19),
    PAYMENT_WAY_CD             VARCHAR2(2),
    PROC_STEP_CD               VARCHAR2(1),
    MT_NM                      VARCHAR2(50),
    BIZ_KIND_CD                VARCHAR2(1),
    BIZ_REG_NO                 VARCHAR2(10),
    BSNS_CDTS                  VARCHAR2(50),
    ITEM                       VARCHAR2(50),
    ITEM_CD                    VARCHAR2(10),
    CEO_NM                     VARCHAR2(50),
    POST                       VARCHAR2(6),
    ADDR                       VARCHAR2(255),
    ADDR_DTL                   VARCHAR2(255),
    TELNO                      VARCHAR2(20),
    MOBILE_NO                  VARCHAR2(20),
    EMAIL                      VARCHAR2(100),
    MANAGER_NM                 VARCHAR2(50),
    MANAGER_TEL_NO             VARCHAR2(20),
    MANAGER_MOBILE_NO          VARCHAR2(20),
    MANAGER_EMAIL              VARCHAR2(100),
    SPMALL_URL                 VARCHAR2(300),
    PG_ST_CD                   VARCHAR2(50),
    PG_ST_NM                   VARCHAR2(50),
    PG_ID                      VARCHAR2(200),
    CRED_PAYMENT_YN            VARCHAR2(1),
    ACTTRANS_PAYMENT_YN        VARCHAR2(1),
    VIRTACT_PAYMENT_YN         VARCHAR2(1),
    MOBILE_PAYMENT_YN          VARCHAR2(1),
    ESCROW_CRED_PAYMENT_YN     VARCHAR2(1),
    ESCROW_ACTTRANS_PAYMENT_YN VARCHAR2(1),
    ESCROW_VIRTACT_PAYMENT_YN  VARCHAR2(1),
    ESCROW_FAST_USE_YN         VARCHAR2(1),
    PRIV_INFO_USE_APPLY_YN     VARCHAR2(1),
    PRIV_INFO_OFFER_APPLY_YN   VARCHAR2(1),
    PG_USE_TERMS_APPLY_YN      VARCHAR2(1),
    PG_PRIV_INFO_USE_APPLY_YN  VARCHAR2(1),
    PTRCT_ID                   VARCHAR2(200),
    PTRCT_PW                   VARCHAR2(200),
    FRC_NM                     VARCHAR2(50),
    CUSTCT_TEL_NO              VARCHAR2(20),
    CALCULATE_BANKCD           VARCHAR2(10),
    CALCULATE_ACTNO            VARCHAR2(50),
    CALCULATE_HOLDER           VARCHAR2(50),
    APPLY_CMPLT_YN             VARCHAR2(1),
    REGR_NO                    NUMBER,
    REG_DTTM                   DATE,
    UPDR_NO                    NUMBER,
    UPD_DTTM                   DATE
)
/

comment on table TS_PAYMENT_WAY_APPLY_INFO is '결제 수단 신청 정보'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PAYMENT_WAY_APPLY_INFO_SEQ is '결제 수단 신청 정보 순번'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.SITE_NO is '사이트 번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PAYMENT_WAY_CD is '결제 수단 코드'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PROC_STEP_CD is '진행 단계 코드'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.MT_NM is '상호 명'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.BIZ_KIND_CD is '사업자 종류 코드'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.BIZ_REG_NO is '사업자 등록 번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.BSNS_CDTS is '업태'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.ITEM is '종목'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.ITEM_CD is '종목 코드'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.CEO_NM is '대표자 명'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.POST is '우편번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.ADDR is '주소'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.ADDR_DTL is '주소 상세'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.TELNO is '전화번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.MOBILE_NO is '휴대폰 번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.EMAIL is '이메일'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.MANAGER_NM is '관리자 명'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.MANAGER_TEL_NO is '관리자 전화 번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.MANAGER_MOBILE_NO is '관리자 휴대폰 번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.MANAGER_EMAIL is '관리자 이메일'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.SPMALL_URL is '쇼핑몰 URL'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PG_ST_CD is 'PG 업종 코드'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PG_ST_NM is 'PG 업종 명'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PG_ID is 'PG 아이디'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.CRED_PAYMENT_YN is '신용카드 결제 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.ACTTRANS_PAYMENT_YN is '계좌이체 결제 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.VIRTACT_PAYMENT_YN is '가상계좌 결제 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.MOBILE_PAYMENT_YN is '휴대폰 결제 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.ESCROW_CRED_PAYMENT_YN is '에스크로 신용카드 결제 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.ESCROW_ACTTRANS_PAYMENT_YN is '에스크로 계좌이체 결제 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.ESCROW_VIRTACT_PAYMENT_YN is '에스크로 가상계좌 결제 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.ESCROW_FAST_USE_YN is '에스크로 즉시 이용 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PRIV_INFO_USE_APPLY_YN is '개인 정보 이용 동의 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PRIV_INFO_OFFER_APPLY_YN is '개인 정보 제공 동의 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PG_USE_TERMS_APPLY_YN is 'PG 이용 약관 동의 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PG_PRIV_INFO_USE_APPLY_YN is 'PG 개인 정보 이용 동의 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PTRCT_ID is '파트너센터 ID'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.PTRCT_PW is '파트너센터 비밀번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.FRC_NM is '가맹점 명'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.CUSTCT_TEL_NO is '고객센터 전화 번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.CALCULATE_BANKCD is '정산 은행코드'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.CALCULATE_ACTNO is '정산 계좌번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.CALCULATE_HOLDER is '정산 예금주'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.APPLY_CMPLT_YN is '신청 완료 여부'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.REGR_NO is '등록자 번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.REG_DTTM is '등록 일시'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.UPDR_NO is '수정자 번호'
/

comment on column TS_PAYMENT_WAY_APPLY_INFO.UPD_DTTM is '수정 일시'
/

create table TY_CALCULATE_DEDUCT
(
    CALCULATE_NO VARCHAR2(13) not null,
    DEDUCT_NO    NUMBER       not null,
    DEDUCT_GB_CD VARCHAR2(1),
    DEDUCT_AMT   NUMBER(20, 2),
    DEDUCT_DSCRT VARCHAR2(500),
    TAX_GB_CD    VARCHAR2(1),
    REGR_NO      NUMBER,
    REG_DTTM     DATE,
    UPDR_NO      NUMBER,
    UPD_DTTM     DATE
)
/

comment on table TY_CALCULATE_DEDUCT is '정산 공제'
/

comment on column TY_CALCULATE_DEDUCT.CALCULATE_NO is '정산 번호'
/

comment on column TY_CALCULATE_DEDUCT.DEDUCT_NO is '공제 번호'
/

comment on column TY_CALCULATE_DEDUCT.DEDUCT_GB_CD is '공제 구분 코드'
/

comment on column TY_CALCULATE_DEDUCT.DEDUCT_AMT is '공제 금액'
/

comment on column TY_CALCULATE_DEDUCT.DEDUCT_DSCRT is '공제 설명'
/

comment on column TY_CALCULATE_DEDUCT.TAX_GB_CD is '과세 구분 코드'
/

comment on column TY_CALCULATE_DEDUCT.REGR_NO is '등록자 번호'
/

comment on column TY_CALCULATE_DEDUCT.REG_DTTM is '등록 일시'
/

comment on column TY_CALCULATE_DEDUCT.UPDR_NO is '수정자 번호'
/

comment on column TY_CALCULATE_DEDUCT.UPD_DTTM is '수정 일시'
/

create table MAIL_SEND_DTL_HIST
(
    MAIL_SEND_NO     NUMBER not null,
    MAIL_SEND_DTL_NO NUMBER not null,
    RECEIVER_EMAIL   VARCHAR2(255),
    SITE_NO          VARCHAR2(20),
    RECEIVER_NM      VARCHAR2(100),
    RECEIVER_NO      NUMBER not null,
    RESULT_CD        VARCHAR2(10),
    REG_DTTM         DATE,
    DEL_YN           VARCHAR2(1),
    DEL_DTTM         DATE
)
/

comment on table MAIL_SEND_DTL_HIST is '메일 발송 상세 이력'
/

comment on column MAIL_SEND_DTL_HIST.MAIL_SEND_NO is '메일 발송 번호'
/

comment on column MAIL_SEND_DTL_HIST.MAIL_SEND_DTL_NO is '메일 발송 상세 번호'
/

comment on column MAIL_SEND_DTL_HIST.RECEIVER_EMAIL is '수신자 이메일'
/

comment on column MAIL_SEND_DTL_HIST.SITE_NO is '사이트 번호'
/

comment on column MAIL_SEND_DTL_HIST.RECEIVER_NM is '수신자 명'
/

comment on column MAIL_SEND_DTL_HIST.RECEIVER_NO is '수신자 번호'
/

comment on column MAIL_SEND_DTL_HIST.RESULT_CD is '결과 코드'
/

comment on column MAIL_SEND_DTL_HIST.REG_DTTM is '등록 일시'
/

comment on column MAIL_SEND_DTL_HIST.DEL_YN is '삭제 여부'
/

comment on column MAIL_SEND_DTL_HIST.DEL_DTTM is '삭제 일시'
/

create table MAIL_SEND_HIST
(
    MAIL_SEND_NO   NUMBER not null,
    SITE_NO        VARCHAR2(20),
    SEND_TARGET_CD VARCHAR2(2),
    SEND_EMAIL     VARCHAR2(50),
    SEND_TITLE     VARCHAR2(500),
    SEND_CONTENT   VARCHAR2(4000),
    SENDER_NO      NUMBER,
    SENDER_NM      VARCHAR2(100),
    SEND_DTTM      DATE,
    SEND_STNDRD    VARCHAR2(100),
    SUCS_CNT       NUMBER,
    REG_DTTM       DATE,
    UPD_DTTM       DATE,
    DEL_YN         VARCHAR2(1),
    DEL_DTTM       DATE
)
/

comment on table MAIL_SEND_HIST is '메일 발송 이력'
/

comment on column MAIL_SEND_HIST.MAIL_SEND_NO is '메일 발송 번호'
/

comment on column MAIL_SEND_HIST.SITE_NO is '사이트 번호'
/

comment on column MAIL_SEND_HIST.SEND_TARGET_CD is '발송 대상 코드'
/

comment on column MAIL_SEND_HIST.SEND_EMAIL is '발송 이메일'
/

comment on column MAIL_SEND_HIST.SEND_TITLE is '발송 제목'
/

comment on column MAIL_SEND_HIST.SEND_CONTENT is '발송 내용'
/

comment on column MAIL_SEND_HIST.SENDER_NO is '발신자 번호'
/

comment on column MAIL_SEND_HIST.SENDER_NM is '발신자 명'
/

comment on column MAIL_SEND_HIST.SEND_DTTM is '발송 일시'
/

comment on column MAIL_SEND_HIST.SEND_STNDRD is '발송 기준'
/

comment on column MAIL_SEND_HIST.SUCS_CNT is '성공 건수'
/

comment on column MAIL_SEND_HIST.REG_DTTM is '등록 일시'
/

comment on column MAIL_SEND_HIST.UPD_DTTM is '수정 일시'
/

comment on column MAIL_SEND_HIST.DEL_YN is '삭제 여부'
/

comment on column MAIL_SEND_HIST.DEL_DTTM is '삭제 일시'
/

create table TA_AREA_DLVR_DEFAULT
(
    AREA_DLVR_DEFAULT_NO NUMBER(19) not null,
    POST_NO              VARCHAR2(6),
    DLVRC                NUMBER(20, 2),
    NUM_ADDR             VARCHAR2(255),
    ROADNM_ADDR          VARCHAR2(255),
    AREA_NM              VARCHAR2(255),
    REGR_NO              NUMBER,
    REG_DTTM             DATE,
    UPDR_NO              NUMBER,
    UPD_DTTM             DATE
)
/

comment on table TA_AREA_DLVR_DEFAULT is '기본 지역 배송비'
/

comment on column TA_AREA_DLVR_DEFAULT.AREA_DLVR_DEFAULT_NO is '기본 지역 배송비 번호'
/

comment on column TA_AREA_DLVR_DEFAULT.POST_NO is '우편 번호'
/

comment on column TA_AREA_DLVR_DEFAULT.DLVRC is '배송비'
/

comment on column TA_AREA_DLVR_DEFAULT.NUM_ADDR is '지번 주소'
/

comment on column TA_AREA_DLVR_DEFAULT.ROADNM_ADDR is '도로명 주소'
/

comment on column TA_AREA_DLVR_DEFAULT.AREA_NM is '지역 명'
/

comment on column TA_AREA_DLVR_DEFAULT.REGR_NO is '등록자 번호'
/

comment on column TA_AREA_DLVR_DEFAULT.REG_DTTM is '등록 일시'
/

comment on column TA_AREA_DLVR_DEFAULT.UPDR_NO is '수정자 번호'
/

comment on column TA_AREA_DLVR_DEFAULT.UPD_DTTM is '수정 일시'
/

create table TA_CMN_CTG
(
    GB_CD     VARCHAR2(10) not null,
    CTG_NO    VARCHAR2(10) not null,
    CTG_NM    VARCHAR2(50),
    UP_CTG_NO VARCHAR2(10),
    SORT_SEQ  NUMBER(3),
    USE_YN    CHAR,
    REG_DTTM  DATE,
    REGR_NO   NUMBER(10),
    UPD_DTTM  DATE,
    UPDR_NO   NUMBER(10),
    DEL_YN    CHAR,
    DEL_DTTM  DATE,
    DELR_NO   NUMBER(10)
)
/

comment on table TA_CMN_CTG is '공통 카테고리'
/

comment on column TA_CMN_CTG.GB_CD is '구분 코드'
/

comment on column TA_CMN_CTG.CTG_NO is '카테고리 번호'
/

comment on column TA_CMN_CTG.CTG_NM is '카테고리 명'
/

comment on column TA_CMN_CTG.UP_CTG_NO is '상위 카테고리 번호'
/

comment on column TA_CMN_CTG.SORT_SEQ is '정렬 순서'
/

comment on column TA_CMN_CTG.USE_YN is '사용 여부'
/

comment on column TA_CMN_CTG.REG_DTTM is '등록 일시'
/

comment on column TA_CMN_CTG.REGR_NO is '등록자 번호'
/

comment on column TA_CMN_CTG.UPD_DTTM is '수정 일시'
/

comment on column TA_CMN_CTG.UPDR_NO is '수정자 번호'
/

comment on column TA_CMN_CTG.DEL_YN is '삭제 여부'
/

comment on column TA_CMN_CTG.DEL_DTTM is '삭제 일시'
/

comment on column TA_CMN_CTG.DELR_NO is '삭제자 번호'
/

create table TA_SNS_LOGIN_INFO
(
    SITE_NO         NUMBER(19)  not null,
    OUTSIDE_LINK_CD VARCHAR2(2) not null,
    REGR_NO         NUMBER,
    REG_DTTM        DATE
)
/

comment on table TA_SNS_LOGIN_INFO is 'SNS 로그인 정보'
/

comment on column TA_SNS_LOGIN_INFO.SITE_NO is '사이트 번호'
/

comment on column TA_SNS_LOGIN_INFO.OUTSIDE_LINK_CD is '외부 연동 코드'
/

comment on column TA_SNS_LOGIN_INFO.REGR_NO is '등록자 번호'
/

comment on column TA_SNS_LOGIN_INFO.REG_DTTM is '등록 일시'
/

create table TB_ATCHFILEDTL
(
    FILE_NO   NUMBER not null,
    FILE_PATH VARCHAR2(300),
    ORG_NM    VARCHAR2(300),
    PHY_NM    VARCHAR2(300),
    EXTSN     VARCHAR2(10),
    FILE_SIZE NUMBER,
    REG_DTTM  DATE,
    REGR_NO   NUMBER,
    UPD_DTTM  DATE,
    UPDR_NO   NUMBER,
    DEL_YN    VARCHAR2(1),
    DEL_DTTM  DATE,
    DELR_NO   NUMBER
)
/

comment on table TB_ATCHFILEDTL is '첨부파일상세'
/

comment on column TB_ATCHFILEDTL.FILE_NO is '파일 번호'
/

comment on column TB_ATCHFILEDTL.FILE_PATH is '파일 경로'
/

comment on column TB_ATCHFILEDTL.ORG_NM is '원본 명'
/

comment on column TB_ATCHFILEDTL.PHY_NM is '물리 명'
/

comment on column TB_ATCHFILEDTL.EXTSN is '확장자'
/

comment on column TB_ATCHFILEDTL.FILE_SIZE is '파일 사이즈'
/

comment on column TB_ATCHFILEDTL.REG_DTTM is '등록 일시'
/

comment on column TB_ATCHFILEDTL.REGR_NO is '등록자 번호'
/

comment on column TB_ATCHFILEDTL.UPD_DTTM is '수정 일시'
/

comment on column TB_ATCHFILEDTL.UPDR_NO is '수정자 번호'
/

comment on column TB_ATCHFILEDTL.DEL_YN is '삭제 여부'
/

comment on column TB_ATCHFILEDTL.DEL_DTTM is '삭제 일시'
/

comment on column TB_ATCHFILEDTL.DELR_NO is '삭제자 번호'
/

create table TB_REPLACE_CD
(
    REPLACE_NO          NUMBER     not null,
    SITE_NO             NUMBER(19) not null,
    REPLACE_NM          VARCHAR2(50),
    REPLACE_DSCRT       VARCHAR2(1000),
    REPLACE_GB_CD       VARCHAR2(2),
    MAPPING_TABLE       VARCHAR2(30),
    MAPPING_COLUMN      VARCHAR2(30),
    DISP_MAPPING_COLUMN VARCHAR2(30),
    REG_DTTM            DATE,
    REGR_NO             NUMBER,
    UPD_DTTM            DATE,
    UPDR_NO             NUMBER,
    DEL_DTTM            DATE,
    DELR_NO             NUMBER,
    DEL_YN              CHAR
)
/

comment on table TB_REPLACE_CD is '치환 코드'
/

comment on column TB_REPLACE_CD.REPLACE_NO is '치환 번호'
/

comment on column TB_REPLACE_CD.SITE_NO is '사이트 번호'
/

comment on column TB_REPLACE_CD.REPLACE_NM is '치환 명'
/

comment on column TB_REPLACE_CD.REPLACE_DSCRT is '치환 설명'
/

comment on column TB_REPLACE_CD.REPLACE_GB_CD is '치환 구분 코드'
/

comment on column TB_REPLACE_CD.MAPPING_TABLE is '매핑 TABLE'
/

comment on column TB_REPLACE_CD.MAPPING_COLUMN is '매핑 컬럼'
/

comment on column TB_REPLACE_CD.DISP_MAPPING_COLUMN is '전시 매핑 컬럼'
/

comment on column TB_REPLACE_CD.REG_DTTM is '등록 일시'
/

comment on column TB_REPLACE_CD.REGR_NO is '등록자 번호'
/

comment on column TB_REPLACE_CD.UPD_DTTM is '수정 일시'
/

comment on column TB_REPLACE_CD.UPDR_NO is '수정자 번호'
/

comment on column TB_REPLACE_CD.DEL_DTTM is '삭제 일시'
/

comment on column TB_REPLACE_CD.DELR_NO is '삭제자 번호'
/

comment on column TB_REPLACE_CD.DEL_YN is '삭제 여부'
/

create table TD_ATCH_SKIN
(
    SKIN_NO         NUMBER(16) not null,
    SITE_NO         NUMBER(19) not null,
    PC_GB_CD        VARCHAR2(1),
    DEFAULT_SKIN_YN VARCHAR2(1),
    SKIN_NM         VARCHAR2(100),
    IMG_NM          VARCHAR2(255),
    IMG_PATH        VARCHAR2(255),
    FOLDER_PATH     VARCHAR2(255),
    APPLY_SKIN_YN   VARCHAR2(1),
    WORK_SKIN_YN    VARCHAR2(1),
    REG_DTTM        DATE,
    REGR_NO         NUMBER,
    UPD_DTTM        DATE,
    UPDR_NO         NUMBER
)
/

comment on table TD_ATCH_SKIN is '첨부 스킨'
/

comment on column TD_ATCH_SKIN.SKIN_NO is '스킨 번호'
/

comment on column TD_ATCH_SKIN.SITE_NO is '사이트 번호'
/

comment on column TD_ATCH_SKIN.PC_GB_CD is 'PC 구분 코드'
/

comment on column TD_ATCH_SKIN.DEFAULT_SKIN_YN is '기본 스킨 여부'
/

comment on column TD_ATCH_SKIN.SKIN_NM is '스킨 명'
/

comment on column TD_ATCH_SKIN.IMG_NM is '이미지 명'
/

comment on column TD_ATCH_SKIN.IMG_PATH is '이미지 경로'
/

comment on column TD_ATCH_SKIN.FOLDER_PATH is '폴더 경로'
/

comment on column TD_ATCH_SKIN.APPLY_SKIN_YN is '적용 스킨 여부'
/

comment on column TD_ATCH_SKIN.WORK_SKIN_YN is '작업 스킨 여부'
/

comment on column TD_ATCH_SKIN.REG_DTTM is '등록 일시'
/

comment on column TD_ATCH_SKIN.REGR_NO is '등록자 번호'
/

comment on column TD_ATCH_SKIN.UPD_DTTM is '수정 일시'
/

comment on column TD_ATCH_SKIN.UPDR_NO is '수정자 번호'
/

create table TD_IMG_ATCHFILE
(
    FILE_NO  NUMBER(16) not null,
    SITE_NO  NUMBER(19),
    USE_YN   VARCHAR2(1),
    REG_DTTM DATE,
    REGR_NO  NUMBER,
    UPD_DTTM DATE,
    UPDR_NO  NUMBER
)
/

comment on table TD_IMG_ATCHFILE is '이미지 첨부파일'
/

comment on column TD_IMG_ATCHFILE.FILE_NO is '파일 번호'
/

comment on column TD_IMG_ATCHFILE.SITE_NO is '사이트 번호'
/

comment on column TD_IMG_ATCHFILE.USE_YN is '사용 여부'
/

comment on column TD_IMG_ATCHFILE.REG_DTTM is '등록 일시'
/

comment on column TD_IMG_ATCHFILE.REGR_NO is '등록자 번호'
/

comment on column TD_IMG_ATCHFILE.UPD_DTTM is '수정 일시'
/

comment on column TD_IMG_ATCHFILE.UPDR_NO is '수정자 번호'
/

create table TG_GOODS_ADD_INFO
(
    ADD_INFO_SEQ NUMBER(19)   not null,
    GOODS_NO     VARCHAR2(16) not null,
    USE_YN       VARCHAR2(1),
    DISP_LABEL   VARCHAR2(50),
    DISP_VALUE   VARCHAR2(50),
    REGR_NO      NUMBER,
    REG_DTTM     DATE,
    UPDR_NO      NUMBER,
    UPD_DTTM     DATE
)
/

comment on table TG_GOODS_ADD_INFO is '상품 추가 정보'
/

comment on column TG_GOODS_ADD_INFO.ADD_INFO_SEQ is '추가 정보 순번'
/

comment on column TG_GOODS_ADD_INFO.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_ADD_INFO.USE_YN is '사용 여부'
/

comment on column TG_GOODS_ADD_INFO.DISP_LABEL is '표시 라벨'
/

comment on column TG_GOODS_ADD_INFO.DISP_VALUE is '표시 값'
/

comment on column TG_GOODS_ADD_INFO.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_ADD_INFO.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_ADD_INFO.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_ADD_INFO.UPD_DTTM is '수정 일시'
/

create table TG_GOODS_PRCT
(
    SEQ      NUMBER(19)   not null,
    GOODS_NO VARCHAR2(16) not null,
    CONTENT  VARCHAR2(500),
    DISP_YN  VARCHAR2(1),
    REGR_NO  NUMBER,
    REG_DTTM DATE,
    UPDR_NO  NUMBER,
    UPD_DTTM DATE
)
/

comment on table TG_GOODS_PRCT is '상품 주의사항'
/

comment on column TG_GOODS_PRCT.SEQ is '순번'
/

comment on column TG_GOODS_PRCT.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_PRCT.CONTENT is '내용'
/

comment on column TG_GOODS_PRCT.DISP_YN is '전시 여부'
/

comment on column TG_GOODS_PRCT.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_PRCT.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_PRCT.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_PRCT.UPD_DTTM is '수정 일시'
/

create table TG_GOODS_SRCH_WORD
(
    SEQ       NUMBER(19)   not null,
    GOODS_NO  VARCHAR2(16) not null,
    SRCH_WORD VARCHAR2(50),
    REGR_NO   NUMBER,
    REG_DTTM  DATE,
    UPDR_NO   NUMBER,
    UPD_DTTM  DATE
)
/

comment on table TG_GOODS_SRCH_WORD is '상품 검색어'
/

comment on column TG_GOODS_SRCH_WORD.SEQ is '순번'
/

comment on column TG_GOODS_SRCH_WORD.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_SRCH_WORD.SRCH_WORD is '검색어'
/

comment on column TG_GOODS_SRCH_WORD.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_SRCH_WORD.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_SRCH_WORD.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_SRCH_WORD.UPD_DTTM is '수정 일시'
/

create table TS_SITE_RETADRSS
(
    RETADRSS_NO NUMBER(19) not null,
    SITE_NO     NUMBER(19),
    POST_NO     VARCHAR2(6),
    ADDR        VARCHAR2(255),
    DTL_ADDR    VARCHAR2(255),
    REGR_NO     NUMBER,
    REG_DTTM    DATE,
    UPDR_NO     NUMBER,
    UPD_DTTM    DATE
)
/

comment on table TS_SITE_RETADRSS is '사이트 반품지'
/

comment on column TS_SITE_RETADRSS.RETADRSS_NO is '반품지 번호'
/

comment on column TS_SITE_RETADRSS.SITE_NO is '사이트 번호'
/

comment on column TS_SITE_RETADRSS.POST_NO is '우편 번호'
/

comment on column TS_SITE_RETADRSS.ADDR is '주소'
/

comment on column TS_SITE_RETADRSS.DTL_ADDR is '상세 주소'
/

comment on column TS_SITE_RETADRSS.REGR_NO is '등록자 번호'
/

comment on column TS_SITE_RETADRSS.REG_DTTM is '등록 일시'
/

comment on column TS_SITE_RETADRSS.UPDR_NO is '수정자 번호'
/

comment on column TS_SITE_RETADRSS.UPD_DTTM is '수정 일시'
/

create table TS_SITE_SRCH
(
    SRCH_NO   NUMBER(19) not null,
    SITE_NO   NUMBER(19),
    SRCH_WORD VARCHAR2(50),
    REG_DTTM  DATE,
    REGR_NO   NUMBER
)
/

comment on table TS_SITE_SRCH is '사이트 검색'
/

comment on column TS_SITE_SRCH.SRCH_NO is '검색 번호'
/

comment on column TS_SITE_SRCH.SITE_NO is '사이트 번호'
/

comment on column TS_SITE_SRCH.SRCH_WORD is '검색어'
/

comment on column TS_SITE_SRCH.REG_DTTM is '등록 일시'
/

comment on column TS_SITE_SRCH.REGR_NO is 'REGR_NO'
/

create table TB_SMS_SEND_HIST
(
    SMS_SEND_NO    NUMBER not null,
    ORD_NO         NUMBER(16),
    SEND_TYPE_CD   VARCHAR2(10),
    SEND_TARGET_CD VARCHAR2(2),
    SEND_FRM_CD    VARCHAR2(10),
    RESULT_CD      VARCHAR2(10),
    SEND_TELNO     VARCHAR2(50),
    SEND_WORDS     VARCHAR2(300),
    SENDER_NO      NUMBER,
    SENDER_NM      VARCHAR2(100),
    SEND_DTTM      DATE,
    REAL_SEND_DTTM DATE,
    RECV_TELNO     VARCHAR2(50),
    RECEIVER_NO    NUMBER,
    RECEIVER_NM    VARCHAR2(100),
    RECV_DTTM      DATE,
    SITE_NO        NUMBER(19),
    AUTO_SEND_YN   VARCHAR2(1),
    REG_DTTM       DATE,
    REGR_NO        NUMBER,
    UPD_DTTM       DATE,
    UPDR_NO        NUMBER,
    DEL_DTTM       DATE,
    DELR_NO        NUMBER,
    DEL_YN         CHAR,
    SENDER_ID      VARCHAR2(20),
    RECEIVER_ID    VARCHAR2(20)
)
/

comment on table TB_SMS_SEND_HIST is 'SMS 발송 이력'
/

comment on column TB_SMS_SEND_HIST.SMS_SEND_NO is 'SMS 발송 번호'
/

comment on column TB_SMS_SEND_HIST.ORD_NO is '주문 번호'
/

comment on column TB_SMS_SEND_HIST.SEND_TYPE_CD is '발송 유형 코드'
/

comment on column TB_SMS_SEND_HIST.SEND_TARGET_CD is '발송 대상 코드'
/

comment on column TB_SMS_SEND_HIST.SEND_FRM_CD is '발송 형태 코드'
/

comment on column TB_SMS_SEND_HIST.RESULT_CD is '결과 코드'
/

comment on column TB_SMS_SEND_HIST.SEND_TELNO is '발송 전화번호'
/

comment on column TB_SMS_SEND_HIST.SEND_WORDS is '발송 문구'
/

comment on column TB_SMS_SEND_HIST.SENDER_NO is '발신자 번호'
/

comment on column TB_SMS_SEND_HIST.SENDER_NM is '발신자 명'
/

comment on column TB_SMS_SEND_HIST.SEND_DTTM is '발송 일시'
/

comment on column TB_SMS_SEND_HIST.REAL_SEND_DTTM is '실 발송 일시'
/

comment on column TB_SMS_SEND_HIST.RECV_TELNO is '수신 전화번호'
/

comment on column TB_SMS_SEND_HIST.RECEIVER_NO is '수신자 번호'
/

comment on column TB_SMS_SEND_HIST.RECEIVER_NM is '수신자 명'
/

comment on column TB_SMS_SEND_HIST.RECV_DTTM is '수신 일시'
/

comment on column TB_SMS_SEND_HIST.SITE_NO is '사이트 번호'
/

comment on column TB_SMS_SEND_HIST.AUTO_SEND_YN is '자동 발송 여부'
/

comment on column TB_SMS_SEND_HIST.REG_DTTM is '등록 일시'
/

comment on column TB_SMS_SEND_HIST.REGR_NO is '등록자 번호'
/

comment on column TB_SMS_SEND_HIST.UPD_DTTM is '수정 일시'
/

comment on column TB_SMS_SEND_HIST.UPDR_NO is '수정자 번호'
/

comment on column TB_SMS_SEND_HIST.DEL_DTTM is '삭제 일시'
/

comment on column TB_SMS_SEND_HIST.DELR_NO is '삭제자 번호'
/

comment on column TB_SMS_SEND_HIST.DEL_YN is '삭제 여부'
/

comment on column TB_SMS_SEND_HIST.SENDER_ID is '발신자 아이디'
/

comment on column TB_SMS_SEND_HIST.RECEIVER_ID is '수신자 아이디'
/

create table SMS_SEND_HIST
(
    SMS_SEND_NO    NUMBER        not null,
    SITE_NO        VARCHAR2(20),
    ORD_NO         NUMBER(16),
    SEND_TYPE_CD   VARCHAR2(10),
    SEND_TARGET_CD VARCHAR2(2),
    SEND_FRM_CD    VARCHAR2(10),
    SEND_TELNO     VARCHAR2(50)   default NULL,
    SEND_WORDS     VARCHAR2(4000) default NULL,
    SENDER_NO      NUMBER,
    SENDER_NM      VARCHAR2(50)   default NULL,
    SEND_DTTM      DATE,
    RECV_TELNO     VARCHAR2(100) not null,
    RECEIVER_NO    NUMBER        not null,
    RECEIVER_ID    VARCHAR2(200),
    RECEIVER_NM    VARCHAR2(100),
    RECV_DTTM      DATE,
    AUTO_SEND_YN   VARCHAR2(1),
    REG_DTTM       DATE,
    UPD_DTTM       DATE,
    SENDER_ID      VARCHAR2(50)
)
/

comment on table SMS_SEND_HIST is 'SMS 발송 이력'
/

comment on column SMS_SEND_HIST.SMS_SEND_NO is 'SMS 발송 번호'
/

comment on column SMS_SEND_HIST.SITE_NO is '사이트 번호'
/

comment on column SMS_SEND_HIST.ORD_NO is '주문 번호'
/

comment on column SMS_SEND_HIST.SEND_TYPE_CD is '발송 유형 코드'
/

comment on column SMS_SEND_HIST.SEND_TARGET_CD is '발송 대상 코드'
/

comment on column SMS_SEND_HIST.SEND_FRM_CD is '발송 형태 코드'
/

comment on column SMS_SEND_HIST.SEND_TELNO is '발송 전화번호'
/

comment on column SMS_SEND_HIST.SEND_WORDS is '발송 문구'
/

comment on column SMS_SEND_HIST.SENDER_NO is '발신자 번호'
/

comment on column SMS_SEND_HIST.SENDER_NM is '발신자 명'
/

comment on column SMS_SEND_HIST.SEND_DTTM is '발송 일시'
/

comment on column SMS_SEND_HIST.RECV_TELNO is '수신 전화번호'
/

comment on column SMS_SEND_HIST.RECEIVER_NO is '수신자 번호'
/

comment on column SMS_SEND_HIST.RECEIVER_ID is '수신자 아이디'
/

comment on column SMS_SEND_HIST.RECEIVER_NM is '수신자 명'
/

comment on column SMS_SEND_HIST.RECV_DTTM is '수신 일시'
/

comment on column SMS_SEND_HIST.AUTO_SEND_YN is '자동 발송 여부'
/

comment on column SMS_SEND_HIST.REG_DTTM is '등록 일시'
/

comment on column SMS_SEND_HIST.UPD_DTTM is '수정 일시'
/

comment on column SMS_SEND_HIST.SENDER_ID is '발신자 ID'
/

create table KKF_SMS_MSG
(
    MSGKEY     NUMBER(15)               not null
        constraint PK_KKF_SMS_MSG
            primary key,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    SENTDATE   DATE,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_KKF_SMS_MSG_1
    on KKF_SMS_MSG (STATUS, REQDATE)
/

create index IDX_KKF_SMS_MSG_2
    on KKF_SMS_MSG (PHONE)
/

create table KKF_MMS_MSG
(
    MSGKEY          NUMBER(15)               not null
        constraint PK_KKF_MMS_MSG
            primary key,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_KKF_MMS_MSG_1
    on KKF_MMS_MSG (STATUS, REQDATE)
/

create index IDX_KKF_MMS_MSG_2
    on KKF_MMS_MSG (PHONE)
/

create table KKF_MSG
(
    MSGKEY         NUMBER(15)               not null
        constraint PK_KKF_MSG
            primary key,
    SERIALNUM      NUMBER(10),
    ID             VARCHAR2(16),
    STATUS         VARCHAR2(2)  default '1' not null,
    PHONE          VARCHAR2(16) default ''  not null,
    CALLBACK       VARCHAR2(16) default ''  not null,
    REQDATE        DATE                     not null,
    SENTDATE       DATE,
    RSLTDATE       DATE,
    REPORTDATE     DATE,
    RSLT           VARCHAR2(10) default '00',
    MSG_RSLT       VARCHAR2(10) default '00',
    NET            VARCHAR2(10),
    MSG            VARCHAR2(4000),
    TEMPLATE_CODE  VARCHAR2(10),
    FAILED_TYPE    VARCHAR2(3),
    FAILED_SUBJECT VARCHAR2(50),
    FAILED_MSG     VARCHAR2(4000),
    FAILED_IMG     VARCHAR2(256),
    PROFILE_KEY    VARCHAR2(100),
    URL            VARCHAR2(1000),
    URL_BUTTON_TXT VARCHAR2(160),
    IMG_PATH       VARCHAR2(256),
    IMG_URL        VARCHAR2(1000),
    BUTTON_JSON    VARCHAR2(1000),
    AD_FLAG        VARCHAR2(1),
    ETC1           VARCHAR2(160),
    ETC2           VARCHAR2(160),
    ETC3           VARCHAR2(160),
    ETC4           VARCHAR2(160),
    ETC5           VARCHAR2(160),
    ETC6           VARCHAR2(160),
    TEMPLATE_TITLE VARCHAR2(200),
    WI_FLAG        VARCHAR2(1),
    PRICE          VARCHAR2(10),
    CURRENCY_TYPE  VARCHAR2(3)
)
/

create index IDX_KKF_MSG_1
    on KKF_MSG (STATUS, REQDATE)
/

create index IDX_KKF_MSG_2
    on KKF_MSG (PHONE)
/

create table KKF_SMS_MSG_LOG
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    PHONE      VARCHAR2(70) default ''  not null,
    CALLBACK   VARCHAR2(70) default ''  not null,
    SENTDATE   DATE,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_KKF_SMS_MSG_LOG_1
    on KKF_SMS_MSG_LOG (STATUS, REQDATE)
/

create index IDX_KKF_SMS_MSG_LOG_2
    on KKF_SMS_MSG_LOG (PHONE)
/

create table KKF_MMS_MSG_LOG
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(70) default ''  not null,
    CALLBACK        VARCHAR2(70) default ''  not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_KKF_MMS_MSG_LOG_1
    on KKF_MMS_MSG_LOG (STATUS, REQDATE)
/

create index IDX_KKF_MMS_MSG_LOG_2
    on KKF_MMS_MSG_LOG (PHONE)
/

create table KKF_MSG_LOG
(
    MSGKEY         NUMBER(15)               not null,
    SERIALNUM      NUMBER(10),
    ID             VARCHAR2(16),
    STATUS         VARCHAR2(2)  default '1' not null,
    PHONE          VARCHAR2(16) default ''  not null,
    CALLBACK       VARCHAR2(16) default ''  not null,
    REQDATE        DATE                     not null,
    SENTDATE       DATE,
    RSLTDATE       DATE,
    REPORTDATE     DATE,
    RSLT           VARCHAR2(10) default '00',
    MSG_RSLT       VARCHAR2(10) default '00',
    NET            VARCHAR2(10),
    MSG            VARCHAR2(4000),
    TEMPLATE_CODE  VARCHAR2(10),
    FAILED_TYPE    VARCHAR2(3),
    FAILED_SUBJECT VARCHAR2(50),
    FAILED_MSG     VARCHAR2(4000),
    FAILED_IMG     VARCHAR2(256),
    PROFILE_KEY    VARCHAR2(100),
    URL            VARCHAR2(1000),
    URL_BUTTON_TXT VARCHAR2(160),
    IMG_PATH       VARCHAR2(256),
    IMG_URL        VARCHAR2(1000),
    BUTTON_JSON    VARCHAR2(1000),
    AD_FLAG        VARCHAR2(1),
    ETC1           VARCHAR2(160),
    ETC2           VARCHAR2(160),
    ETC3           VARCHAR2(160),
    ETC4           VARCHAR2(160),
    ETC5           VARCHAR2(160),
    ETC6           VARCHAR2(160),
    TEMPLATE_TITLE VARCHAR2(200),
    WI_FLAG        VARCHAR2(1),
    PRICE          VARCHAR2(10),
    CURRENCY_TYPE  VARCHAR2(3)
)
/

create index IDX_KKF_MSG_LOG_1
    on KKF_MSG_LOG (STATUS, REQDATE)
/

create index IDX_KKF_MSG_LOG_2
    on KKF_MSG_LOG (PHONE)
/

create table SMS_MSG_LOG_201810
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_201810_1
    on SMS_MSG_LOG_201810 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_201810_2
    on SMS_MSG_LOG_201810 (PHONE)
/

create table MMS_MSG_LOG_201810
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_201810_1
    on MMS_MSG_LOG_201810 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_201810_2
    on MMS_MSG_LOG_201810 (PHONE)
/

create table TG_VISION_STEP
(
    VISION_NO    NUMBER(9) not null
        primary key,
    VISION_GB    VARCHAR2(1),
    AGE_CD       VARCHAR2(5),
    STEP1_CD     VARCHAR2(5),
    STEP2_CD     VARCHAR2(5),
    STEP3_CD     VARCHAR2(5),
    STEP4_CD     VARCHAR2(5),
    STEP5_CD     VARCHAR2(5),
    STEP6_CD     VARCHAR2(5),
    STEP7_CD     VARCHAR2(5),
    STEP8_CD     VARCHAR2(5),
    STEP9_CD     VARCHAR2(5),
    STEP10_CD    VARCHAR2(5),
    STEP_FULL_NM VARCHAR2(200),
    SORT_SEQ     NUMBER(9),
    USE_YN       VARCHAR2(1)
)
/

comment on column TG_VISION_STEP.VISION_NO is '비전체크 번호'
/

comment on column TG_VISION_STEP.VISION_GB is '비전체크 구분 '
/

comment on column TG_VISION_STEP.AGE_CD is '연령대 코드'
/

comment on column TG_VISION_STEP.STEP1_CD is 'step 1 ~ 10의 각 코드값'
/

comment on column TG_VISION_STEP.STEP_FULL_NM is '전체 명칭'
/

comment on column TG_VISION_STEP.SORT_SEQ is '정렬 순서'
/

create table TY_CALCULATE_LEDGER
(
    CALCULATE_NO        VARCHAR2(13) not null
        constraint IDX_TY_CALCULATE_LEDGER_PK
            primary key,
    CALCULATE_DTTM      DATE,
    CALCULATE_STARTDT   DATE,
    CALCULATE_ENDDT     DATE,
    SELLER_NO           NUMBER(10),
    SITE_NO             NUMBER(10),
    PAYMENT_AMT         NUMBER(20, 2),
    CMS_TOTAL           NUMBER(20, 2),
    CALCULATE_AMT       NUMBER(20, 2),
    CALCULATE_STATUS_CD VARCHAR2(2),
    REGR_NO             NUMBER,
    REG_DTTM            DATE,
    UPDR_NO             NUMBER,
    UPD_DTTM            DATE
)
/

comment on column TY_CALCULATE_LEDGER.CALCULATE_NO is '정산번호'
/

comment on column TY_CALCULATE_LEDGER.CALCULATE_DTTM is '정산일시'
/

comment on column TY_CALCULATE_LEDGER.CALCULATE_STARTDT is '정산기준 시작일자'
/

comment on column TY_CALCULATE_LEDGER.CALCULATE_ENDDT is '정산기준 종료일자'
/

comment on column TY_CALCULATE_LEDGER.SELLER_NO is '판매자 번호'
/

comment on column TY_CALCULATE_LEDGER.SITE_NO is '사이트 번호'
/

comment on column TY_CALCULATE_LEDGER.PAYMENT_AMT is '결제 금액'
/

comment on column TY_CALCULATE_LEDGER.CMS_TOTAL is '수수료 합계'
/

comment on column TY_CALCULATE_LEDGER.CALCULATE_AMT is '정산 금액'
/

comment on column TY_CALCULATE_LEDGER.CALCULATE_STATUS_CD is '정산 상태 코드'
/

comment on column TY_CALCULATE_LEDGER.REGR_NO is '등록자 번호'
/

comment on column TY_CALCULATE_LEDGER.REG_DTTM is '등록 일시'
/

comment on column TY_CALCULATE_LEDGER.UPDR_NO is '수정자 번호'
/

comment on column TY_CALCULATE_LEDGER.UPD_DTTM is '수정 일시'
/

create table TY_CALCULATE_LEDGER_DTL
(
    CALCULATE_NO              VARCHAR2(13) not null,
    CALCULATE_DTL_NO          NUMBER       not null,
    CALCULATE_STNDRD_DT       DATE,
    ORDR_NO                   NUMBER(20),
    ORDR_NM                   VARCHAR2(100),
    ORD_DTTM                  DATE,
    ORD_NO                    NUMBER(16),
    ORD_DTL_SEQ               NUMBER,
    ORD_GOODS_NO              VARCHAR2(20),
    GOODS_NM                  VARCHAR2(100),
    DLVR_AMT                  NUMBER,
    PAYMENT_AMT               NUMBER(20, 2),
    SELLER_CMS_RATE           NUMBER(10, 2),
    INTEGRATION_POINT_USE_AMT NUMBER(10),
    D_MONEY_USE_AMT           NUMBER(10),
    D_MONEY_ACCU_AMT          NUMBER(10),
    D_MONEY_RECOM_ACCU_AMT    NUMBER(10),
    CP_DC_GB_CD               VARCHAR2(2),
    CP_DC_VALUE               NUMBER(10, 2),
    CP_DC_AMT                 NUMBER(10),
    MEMBER_GRADE_DC_GB_CD     VARCHAR2(2),
    MEMBER_GRADE_DC_VALUE     VARCHAR2(2),
    MEMBER_GRADE_DC_AMT       NUMBER(10, 2),
    PRMT_DC_GB_CD             VARCHAR2(2),
    PRMT_DC_VALUE             NUMBER(10, 2),
    PRMT_DC_AMT               NUMBER(10),
    LT_PVD_AMT                NUMBER(10),
    COURIER_NM                VARCHAR2(100),
    INVOICE_NO                VARCHAR2(30),
    CALCULATE_GB              VARCHAR2(2),
    PURCHASE_AMT              NUMBER(20, 2),
    SALE_CHANNEL              VARCHAR2(10),
    ORD_QTT                   NUMBER,
    PAYMENT_WAY_CD            VARCHAR2(20),
    REGR_NO                   NUMBER,
    REG_DTTM                  DATE,
    DC_AMT                    NUMBER(10),
    SELLER_NO                 NUMBER(10),
    CLAIM_NO                  NUMBER(10),
    STORE_NO                  VARCHAR2(20),
    STORE_NM                  VARCHAR2(200),
    PAYMENT_CMPLT_DTTM        DATE,
    PAYMENT_WAY_NM            VARCHAR2(100),
    PAYMENT_PG_CD             VARCHAR2(20),
    PAYMENT_PG_NM             VARCHAR2(100),
    SALE_AMT                  NUMBER,
    SUPPLY_AMT                NUMBER,
    COMM_INCOME_AMT           NUMBER,
    CP_APPLY_AMT              NUMBER,
    constraint IDX_TY_CALCULATE_LEDGER_DTL_PK
        primary key (CALCULATE_NO, CALCULATE_DTL_NO)
)
/

comment on column TY_CALCULATE_LEDGER_DTL.CALCULATE_NO is '정산번호'
/

comment on column TY_CALCULATE_LEDGER_DTL.CALCULATE_DTL_NO is '정산상세번호'
/

comment on column TY_CALCULATE_LEDGER_DTL.CALCULATE_STNDRD_DT is '정산기준일자'
/

comment on column TY_CALCULATE_LEDGER_DTL.ORDR_NO is '주문자번호'
/

comment on column TY_CALCULATE_LEDGER_DTL.ORDR_NM is '주문자명'
/

comment on column TY_CALCULATE_LEDGER_DTL.ORD_DTTM is '주문일시'
/

comment on column TY_CALCULATE_LEDGER_DTL.ORD_NO is '주문번호'
/

comment on column TY_CALCULATE_LEDGER_DTL.ORD_DTL_SEQ is '주문상세번호'
/

comment on column TY_CALCULATE_LEDGER_DTL.ORD_GOODS_NO is '주문상품번호'
/

comment on column TY_CALCULATE_LEDGER_DTL.GOODS_NM is '상품명'
/

comment on column TY_CALCULATE_LEDGER_DTL.DLVR_AMT is '배송금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.PAYMENT_AMT is '결제금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.SELLER_CMS_RATE is '판매자 수수료 율'
/

comment on column TY_CALCULATE_LEDGER_DTL.INTEGRATION_POINT_USE_AMT is '통합 포인트 사용 금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.D_MONEY_USE_AMT is 'D-머니 사용 금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.D_MONEY_ACCU_AMT is 'D-머니 적립 금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.D_MONEY_RECOM_ACCU_AMT is 'D-머니 추천 적립 금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.CP_DC_GB_CD is '쿠폰 할인 구분 코드'
/

comment on column TY_CALCULATE_LEDGER_DTL.CP_DC_VALUE is '쿠폰 할인 값'
/

comment on column TY_CALCULATE_LEDGER_DTL.CP_DC_AMT is '쿠폰 할인 금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.MEMBER_GRADE_DC_GB_CD is '회원 등급 할인 구분 코드'
/

comment on column TY_CALCULATE_LEDGER_DTL.MEMBER_GRADE_DC_VALUE is '회원 등급 할인 값'
/

comment on column TY_CALCULATE_LEDGER_DTL.MEMBER_GRADE_DC_AMT is '회원 등급 할인 금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.PRMT_DC_GB_CD is '프로모션 할인 구분 코드'
/

comment on column TY_CALCULATE_LEDGER_DTL.PRMT_DC_VALUE is '프로모션 할인 구분 값'
/

comment on column TY_CALCULATE_LEDGER_DTL.PRMT_DC_AMT is '프로모션 할인 금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.LT_PVD_AMT is '최종지급금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.COURIER_NM is '택배사명'
/

comment on column TY_CALCULATE_LEDGER_DTL.INVOICE_NO is '송장번호'
/

comment on column TY_CALCULATE_LEDGER_DTL.CALCULATE_GB is '정산구분'
/

comment on column TY_CALCULATE_LEDGER_DTL.PURCHASE_AMT is '매입금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.SALE_CHANNEL is '판매채널'
/

comment on column TY_CALCULATE_LEDGER_DTL.ORD_QTT is '주문수량'
/

comment on column TY_CALCULATE_LEDGER_DTL.PAYMENT_WAY_CD is '결제수단코드'
/

comment on column TY_CALCULATE_LEDGER_DTL.REGR_NO is '등록자번호'
/

comment on column TY_CALCULATE_LEDGER_DTL.REG_DTTM is '등록일시'
/

comment on column TY_CALCULATE_LEDGER_DTL.DC_AMT is '할인금액'
/

comment on column TY_CALCULATE_LEDGER_DTL.SELLER_NO is '판매자번호'
/

comment on column TY_CALCULATE_LEDGER_DTL.CLAIM_NO is '클레임번호'
/

comment on column TY_CALCULATE_LEDGER_DTL.SALE_AMT is '판매가'
/

comment on column TY_CALCULATE_LEDGER_DTL.SUPPLY_AMT is '공급가'
/

comment on column TY_CALCULATE_LEDGER_DTL.COMM_INCOME_AMT is '수수료수익'
/

comment on column TY_CALCULATE_LEDGER_DTL.CP_APPLY_AMT is '쿠폰적용가'
/

create table TA_APP_LOGIN_INFO
(
    LOGIN_DTTM  TIMESTAMP(6) not null
        primary key,
    JSESSIONID  VARCHAR2(50),
    LOGIN_ID    VARCHAR2(30),
    EXPIRE_TIME TIMESTAMP(6) not null,
    MEMBER_NO   VARCHAR2(50),
    COOKIE_VAL  VARCHAR2(3000)
)
/

create index IDX_JSESSIONID
    on TA_APP_LOGIN_INFO (JSESSIONID)
/

create table TA_APP_LOGIN_INFO_20181122
(
    LOGIN_DTTM  TIMESTAMP(6) not null,
    JSESSIONID  VARCHAR2(50),
    LOGIN_ID    VARCHAR2(30),
    EXPIRE_TIME TIMESTAMP(6) not null,
    MEMBER_NO   VARCHAR2(50),
    COOKIE_VAL  VARCHAR2(3000)
)
/

create table TO_PAYMENT_MX
(
    P_TID              VARCHAR2(40),
    P_MID              VARCHAR2(10),
    P_AUTH_DT          VARCHAR2(14),
    P_STATUS           VARCHAR2(4),
    P_TYPE             VARCHAR2(10),
    P_OID              VARCHAR2(100),
    P_FN_CD1           VARCHAR2(4),
    P_FN_CD2           VARCHAR2(10),
    P_FN_NM            VARCHAR2(50),
    P_UNAME            VARCHAR2(30),
    P_AMT              VARCHAR2(8),
    P_RMESG1           VARCHAR2(500),
    P_RMESG2           VARCHAR2(500),
    P_NOTI             VARCHAR2(1024),
    P_AUTH_NO          VARCHAR2(30),
    P_CARD_ISSUER_CODE VARCHAR2(4),
    P_CARD_NUM         VARCHAR2(16),
    REG_DTTM           DATE,
    REGR_NO            NUMBER,
    UPD_DTTM           DATE,
    UPDR_NO            NUMBER,
    P_RESULTCD         VARCHAR2(500),
    P_RESULTMSG        VARCHAR2(500),
    P_EXRATE           VARCHAR2(200),
    P_HASH             VARCHAR2(500),
    P_KOR_AMT          VARCHAR2(200),
    P_EXCHANGE_RATE    VARCHAR2(200)
)
/

create table SMS_MSG_LOG_201901
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_201901_1
    on SMS_MSG_LOG_201901 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_201901_2
    on SMS_MSG_LOG_201901 (PHONE)
/

create table MMS_MSG_LOG_201901
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_201901_1
    on MMS_MSG_LOG_201901 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_201901_2
    on MMS_MSG_LOG_201901 (PHONE)
/

create table SMS_MSG_LOG_201902
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_201902_1
    on SMS_MSG_LOG_201902 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_201902_2
    on SMS_MSG_LOG_201902 (PHONE)
/

create table MMS_MSG_LOG_201902
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_201902_1
    on MMS_MSG_LOG_201902 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_201902_2
    on MMS_MSG_LOG_201902 (PHONE)
/

create table ERP_MEMBERTEST
(
    UPD_DTTM      DATE,
    ERP_MEMBER_NO NUMBER
)
/

create table TT_VISIT_RSV_PATH_ANLS
(
    SITE_NO       NUMBER(19),
    YR            VARCHAR2(4),
    MM            VARCHAR2(2),
    DT            VARCHAR2(2),
    EQPM_GB_CD    VARCHAR2(2),
    VISIT_PATH_CD VARCHAR2(2),
    VSTR_CNT      NUMBER(38),
    REGR_NO       NUMBER(38),
    REG_DTTM      DATE,
    UPDR_NO       NUMBER(38),
    UPD_DTTM      DATE
)
/

comment on table TT_VISIT_RSV_PATH_ANLS is '방문 예약 경로 분석'
/

comment on column TT_VISIT_RSV_PATH_ANLS.SITE_NO is '사이트 번호'
/

comment on column TT_VISIT_RSV_PATH_ANLS.YR is '년도'
/

comment on column TT_VISIT_RSV_PATH_ANLS.MM is '월'
/

comment on column TT_VISIT_RSV_PATH_ANLS.DT is '일자'
/

comment on column TT_VISIT_RSV_PATH_ANLS.EQPM_GB_CD is '기기 구분 코드'
/

comment on column TT_VISIT_RSV_PATH_ANLS.VISIT_PATH_CD is '방문 경로 코드'
/

comment on column TT_VISIT_RSV_PATH_ANLS.VSTR_CNT is '방문자 수'
/

comment on column TT_VISIT_RSV_PATH_ANLS.REGR_NO is '등록자 번호'
/

comment on column TT_VISIT_RSV_PATH_ANLS.REG_DTTM is '등록 일시'
/

comment on column TT_VISIT_RSV_PATH_ANLS.UPDR_NO is '수정자 번호'
/

comment on column TT_VISIT_RSV_PATH_ANLS.UPD_DTTM is '수정 일시'
/

create unique index IDX_TT_VISIT_RSV_PATH_ANLS_PK
    on TT_VISIT_RSV_PATH_ANLS (SITE_NO, YR, MM, DT, EQPM_GB_CD, VISIT_PATH_CD)
/

create index IDX_TT_VISIT_RSV_PATH_ANLS
    on TT_VISIT_RSV_PATH_ANLS (SITE_NO, YR, MM, DT)
/

create index TT_IDX_VISIT_RSV_PATH_ANLS_001
    on TT_VISIT_RSV_PATH_ANLS (REG_DTTM)
/

create index TT_IDX_VISIT_RSV_PATH_ANLS_002
    on TT_VISIT_RSV_PATH_ANLS (UPD_DTTM)
/

create index TT_IDX_VISIT_RSV_PATH_ANLS_003
    on TT_VISIT_RSV_PATH_ANLS (SITE_NO, YR, MM, DT, EQPM_GB_CD, VISIT_PATH_CD, UPD_DTTM)
/

create table TT_VISIT_RSVCOM_PATH_ANLS
(
    SITE_NO       NUMBER(19),
    YR            VARCHAR2(4),
    MM            VARCHAR2(2),
    DT            VARCHAR2(2),
    EQPM_GB_CD    VARCHAR2(2),
    VISIT_PATH_CD VARCHAR2(2),
    VSTR_CNT      NUMBER(38),
    REGR_NO       NUMBER(38),
    REG_DTTM      DATE,
    UPDR_NO       NUMBER(38),
    UPD_DTTM      DATE
)
/

comment on table TT_VISIT_RSVCOM_PATH_ANLS is '방문 접수 경로 분석'
/

comment on column TT_VISIT_RSVCOM_PATH_ANLS.SITE_NO is '사이트 번호'
/

comment on column TT_VISIT_RSVCOM_PATH_ANLS.YR is '년도'
/

comment on column TT_VISIT_RSVCOM_PATH_ANLS.MM is '월'
/

comment on column TT_VISIT_RSVCOM_PATH_ANLS.DT is '일자'
/

comment on column TT_VISIT_RSVCOM_PATH_ANLS.EQPM_GB_CD is '기기 구분 코드'
/

comment on column TT_VISIT_RSVCOM_PATH_ANLS.VISIT_PATH_CD is '방문 경로 코드'
/

comment on column TT_VISIT_RSVCOM_PATH_ANLS.VSTR_CNT is '방문자 수'
/

comment on column TT_VISIT_RSVCOM_PATH_ANLS.REGR_NO is '등록자 번호'
/

comment on column TT_VISIT_RSVCOM_PATH_ANLS.REG_DTTM is '등록 일시'
/

comment on column TT_VISIT_RSVCOM_PATH_ANLS.UPDR_NO is '수정자 번호'
/

comment on column TT_VISIT_RSVCOM_PATH_ANLS.UPD_DTTM is '수정 일시'
/

create unique index IDX_TT_VISIT_RCOM_PATH_ANLS_PK
    on TT_VISIT_RSVCOM_PATH_ANLS (SITE_NO, YR, MM, DT, EQPM_GB_CD, VISIT_PATH_CD)
/

create index IDX_TT_VISIT_RCOM_PATH_ANLS
    on TT_VISIT_RSVCOM_PATH_ANLS (SITE_NO, YR, MM, DT)
/

create index IDX_TT_VISIT_RCOMPATH_ANLS_001
    on TT_VISIT_RSVCOM_PATH_ANLS (REG_DTTM)
/

create index IDX_TT_VISIT_RCOMPATH_ANLS_002
    on TT_VISIT_RSVCOM_PATH_ANLS (UPD_DTTM)
/

create index IDX_TT_VISIT_RCOMPATH_ANLS_003
    on TT_VISIT_RSVCOM_PATH_ANLS (SITE_NO, YR, MM, DT, EQPM_GB_CD, VISIT_PATH_CD, UPD_DTTM)
/

create table TG_GOODS_GUN_ATTR
(
    GOODS_NO VARCHAR2(16) default NULL,
    REGR_NO  NUMBER,
    REG_DTTM DATE,
    UPDR_NO  NUMBER,
    UPD_DTTM DATE,
    GUN_NO   NUMBER
)
/

comment on table TG_GOODS_GUN_ATTR is '상품 군 속성'
/

comment on column TG_GOODS_GUN_ATTR.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_GUN_ATTR.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_GUN_ATTR.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_GUN_ATTR.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_GUN_ATTR.UPD_DTTM is '수정 일시'
/

comment on column TG_GOODS_GUN_ATTR.GUN_NO is '군 번호'
/

create index IDX_TG_GOODS_GUN_ATTR_001
    on TG_GOODS_GUN_ATTR (GOODS_NO)
/

create table TT_ORD_STTCS_BACKUP_20190220
(
    SITE_NO         NUMBER(19)  not null,
    YR              VARCHAR2(4) not null,
    MM              VARCHAR2(2) not null,
    DT              VARCHAR2(2) not null,
    HR              VARCHAR2(2) not null,
    PC_BUYR_CNT     NUMBER,
    PC_BUY_CNT      NUMBER,
    PC_SALE_AMT     NUMBER(20, 2),
    MOBILE_BUYR_CNT NUMBER,
    MOBILE_BUY_CNT  NUMBER,
    MOBILE_SALE_AMT NUMBER(20, 2),
    MANUAL_BUYR_CNT NUMBER,
    MANUAL_BUY_CNT  NUMBER,
    MANUAL_SALE_AMT NUMBER(20, 2),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE
)
/

create table TC_VISION_CHECK_GUN
(
    GUN_NO        NUMBER       not null
        constraint TC_VISION_CHECK_GUN_PK
            primary key,
    GOODS_TYPE_CD CHAR(2)      not null,
    GUN_NM        VARCHAR2(30) not null,
    PRICE_RANGE   VARCHAR2(30),
    SIMPLE_DSCRT  VARCHAR2(500),
    REP_IMG_NO    NUMBER,
    REGR_NO       NUMBER,
    REG_DTTM      DATE,
    UPDR_NO       NUMBER,
    UPD_DTTM      DATE,
    IS_USE        VARCHAR2(1)
)
/

comment on table TC_VISION_CHECK_GUN is '비전체크 군 관리'
/

comment on column TC_VISION_CHECK_GUN.GUN_NO is '순번'
/

comment on column TC_VISION_CHECK_GUN.GOODS_TYPE_CD is '상품 유형 코드'
/

comment on column TC_VISION_CHECK_GUN.GUN_NM is '군명'
/

comment on column TC_VISION_CHECK_GUN.PRICE_RANGE is '가격대'
/

comment on column TC_VISION_CHECK_GUN.SIMPLE_DSCRT is '간단설명'
/

comment on column TC_VISION_CHECK_GUN.REP_IMG_NO is '대표 이미지 번호'
/

comment on column TC_VISION_CHECK_GUN.REGR_NO is '등록자 번호'
/

comment on column TC_VISION_CHECK_GUN.REG_DTTM is '등록 일시'
/

comment on column TC_VISION_CHECK_GUN.UPDR_NO is '수정자 번호'
/

comment on column TC_VISION_CHECK_GUN.UPD_DTTM is '수정 일시'
/

comment on column TC_VISION_CHECK_GUN.IS_USE is '사용여부(Y/N)'
/

create table TG_VISION_CHECK_CONTACT
(
    VISION2_NO           NUMBER not null
        constraint TG_VISION_CHECK_CONTACT_PK
            primary key,
    VISION2_AGE_CD       VARCHAR2(2),
    VISION2_WEAR_CD      VARCHAR2(2),
    VISION2_WEAR_TIME_CD VARCHAR2(2),
    VISION2_WEAR_DAY_CD  VARCHAR2(2),
    VISION2_INCON1_C_CD  VARCHAR2(2),
    GUN_NO               NUMBER not null,
    SORT_SEQ             NUMBER
)
/

comment on table TG_VISION_CHECK_CONTACT is '콘택트렌즈 비전체크 후 군 모음'
/

comment on column TG_VISION_CHECK_CONTACT.VISION2_NO is '비전체크 번호'
/

comment on column TG_VISION_CHECK_CONTACT.VISION2_AGE_CD is '연령대 코드'
/

comment on column TG_VISION_CHECK_CONTACT.VISION2_WEAR_CD is '착용유무'
/

comment on column TG_VISION_CHECK_CONTACT.VISION2_WEAR_TIME_CD is '착용시간 코드'
/

comment on column TG_VISION_CHECK_CONTACT.VISION2_WEAR_DAY_CD is '착용일 코드'
/

comment on column TG_VISION_CHECK_CONTACT.VISION2_INCON1_C_CD is '불편사항1 코드'
/

comment on column TG_VISION_CHECK_CONTACT.GUN_NO is '군 번호'
/

comment on column TG_VISION_CHECK_CONTACT.SORT_SEQ is '정렬 순번'
/

create table TG_VISION_CHECK_GLASSES
(
    VISION2_NO           NUMBER not null
        constraint TG_VISION_CHECK_GLASSES_PK
            primary key,
    VISION2_AGE_CD       VARCHAR2(2),
    VISION2_INCON2_G_CD  VARCHAR2(2),
    VISION2_LIFESTYLE_CD VARCHAR2(2),
    GUN_NO               NUMBER not null,
    SORT_SEQ             NUMBER
)
/

comment on table TG_VISION_CHECK_GLASSES is '안경렌즈 비전체크 후 결과 군 모음'
/

comment on column TG_VISION_CHECK_GLASSES.VISION2_NO is '비전체크 번호'
/

comment on column TG_VISION_CHECK_GLASSES.VISION2_AGE_CD is '나이 코드'
/

comment on column TG_VISION_CHECK_GLASSES.VISION2_INCON2_G_CD is '불편사항2 코드'
/

comment on column TG_VISION_CHECK_GLASSES.VISION2_LIFESTYLE_CD is '라이프스타일 코드'
/

comment on column TG_VISION_CHECK_GLASSES.GUN_NO is '군 번호'
/

comment on column TG_VISION_CHECK_GLASSES.SORT_SEQ is '정렬순번'
/

create table TG_VISION_CHECK_RESULT
(
    VISION_CHECK_NO NUMBER      not null
        constraint TG_VISION_CHECK_RESULT_PK
            primary key,
    MEMBER_NO       NUMBER      not null,
    LENS_TYPE       VARCHAR2(1) not null,
    AGE_CD          VARCHAR2(2),
    WEAR_CD         VARCHAR2(2),
    INCON1_CD       VARCHAR2(50),
    INCON2_CD       VARCHAR2(50),
    LIFESTYLE_CD    VARCHAR2(50),
    CONTACT_TYPE_CD VARCHAR2(2),
    WEAR_TIME_CD    VARCHAR2(2),
    WEAR_DAY_CD     VARCHAR2(2),
    CONTACT_PURP_CD VARCHAR2(50),
    INCON_ETC       VARCHAR2(1000) default NULL,
    REG_DTTM        DATE
)
/

comment on table TG_VISION_CHECK_RESULT is '비전체크 안경렌즈/콘택트렌즈 결과 저장'
/

comment on column TG_VISION_CHECK_RESULT.VISION_CHECK_NO is '번호'
/

comment on column TG_VISION_CHECK_RESULT.MEMBER_NO is '고객번호'
/

comment on column TG_VISION_CHECK_RESULT.LENS_TYPE is '렌즈 타입'
/

comment on column TG_VISION_CHECK_RESULT.AGE_CD is '나이 코드'
/

comment on column TG_VISION_CHECK_RESULT.WEAR_CD is '착용여부 코드'
/

comment on column TG_VISION_CHECK_RESULT.INCON1_CD is '불편사항1'
/

comment on column TG_VISION_CHECK_RESULT.INCON2_CD is '불편사항2'
/

comment on column TG_VISION_CHECK_RESULT.LIFESTYLE_CD is '라이프스타일'
/

comment on column TG_VISION_CHECK_RESULT.CONTACT_TYPE_CD is '투명/컬러'
/

comment on column TG_VISION_CHECK_RESULT.WEAR_TIME_CD is '착용시간'
/

comment on column TG_VISION_CHECK_RESULT.WEAR_DAY_CD is '착용날짜'
/

comment on column TG_VISION_CHECK_RESULT.CONTACT_PURP_CD is '착용목적'
/

comment on column TG_VISION_CHECK_RESULT.INCON_ETC is '직접입력'
/

comment on column TG_VISION_CHECK_RESULT.REG_DTTM is '등록일'
/

create table AM070TBL_CEN_JEGO
(
    ITM_CODE VARCHAR2(13)            not null,
    USE_IND  VARCHAR2(1) default 'Y' not null
)
/

create table TO_ORD
(
    ORD_NO             NUMBER(16) not null
        constraint IDX_TO_ORD_PK
            primary key,
    ORG_ORD_NO         NUMBER(16)
        constraint FK_ORD_2
            references TO_ORD
                on delete set null,
    ORD_STATUS_CD      VARCHAR2(2),
    ORD_MEDIA_CD       VARCHAR2(2),
    SALE_CHANNEL_CD    VARCHAR2(10),
    MEMBER_ORD_YN      VARCHAR2(1),
    MEMBER_NO          NUMBER,
    MEMBER_GRADE_NO    NUMBER,
    SITE_NO            NUMBER(19),
    LOGIN_ID           VARCHAR2(300) default NULL,
    ORD_SECT_NO        VARCHAR2(10),
    ORDR_NM            VARCHAR2(100),
    ORDR_EMAIL         VARCHAR2(100),
    ORDR_TEL           VARCHAR2(100),
    ORDR_MOBILE        VARCHAR2(100),
    ORDR_IP            VARCHAR2(15),
    ORD_ACCEPT_DTTM    DATE,
    ORD_CMPLT_DTTM     DATE,
    ORD_CANCEL_DTTM    DATE,
    PAYMENT_CMPLT_DTTM DATE,
    SMS_RECV_YN        VARCHAR2(1),
    EMAIL_RECV_YN      VARCHAR2(1),
    PVD_SVMN           NUMBER(20, 2),
    MANUAL_ORD_YN      VARCHAR2(1)   default 'N',
    PAYMENT_AMT        NUMBER(20, 2),
    SALE_AMT           NUMBER(20, 2),
    DC_AMT             NUMBER(20, 2),
    REGR_NO            NUMBER,
    REG_DTTM           DATE,
    UPDR_NO            NUMBER,
    UPD_DTTM           DATE,
    RECOM_MEMBER_NO    NUMBER
)
/

comment on table TO_ORD is '주문'
/

comment on column TO_ORD.ORD_NO is '주문 번호'
/

comment on column TO_ORD.ORG_ORD_NO is '원본 주문 번호'
/

comment on column TO_ORD.ORD_STATUS_CD is '주문 상태 코드'
/

comment on column TO_ORD.ORD_MEDIA_CD is '주문 매체 코드'
/

comment on column TO_ORD.SALE_CHANNEL_CD is '판매 채널 코드'
/

comment on column TO_ORD.MEMBER_ORD_YN is '회원 주문 여부'
/

comment on column TO_ORD.MEMBER_NO is '회원 번호'
/

comment on column TO_ORD.MEMBER_GRADE_NO is '회원 등급 번호'
/

comment on column TO_ORD.SITE_NO is '사이트 번호'
/

comment on column TO_ORD.LOGIN_ID is '로그인 아이디'
/

comment on column TO_ORD.ORD_SECT_NO is '주문 비밀 번호'
/

comment on column TO_ORD.ORDR_NM is '주문자 명'
/

comment on column TO_ORD.ORDR_EMAIL is '주문자 이메일'
/

comment on column TO_ORD.ORDR_TEL is '주문자 전화'
/

comment on column TO_ORD.ORDR_MOBILE is '주문자 휴대폰'
/

comment on column TO_ORD.ORDR_IP is '주문자 IP'
/

comment on column TO_ORD.ORD_ACCEPT_DTTM is '주문 접수 일시'
/

comment on column TO_ORD.ORD_CMPLT_DTTM is '주문 완료 일시'
/

comment on column TO_ORD.ORD_CANCEL_DTTM is '주문 취소 일시'
/

comment on column TO_ORD.PAYMENT_CMPLT_DTTM is '결제 완료 일시'
/

comment on column TO_ORD.SMS_RECV_YN is 'SMS 수신 여부'
/

comment on column TO_ORD.EMAIL_RECV_YN is '이메일 수신 여부'
/

comment on column TO_ORD.PVD_SVMN is '지급 적립금'
/

comment on column TO_ORD.MANUAL_ORD_YN is '수기 주문 여부'
/

comment on column TO_ORD.PAYMENT_AMT is '결제 금액'
/

comment on column TO_ORD.SALE_AMT is '판매 금액'
/

comment on column TO_ORD.DC_AMT is '할인 금액'
/

comment on column TO_ORD.REGR_NO is '등록자 번호'
/

comment on column TO_ORD.REG_DTTM is '등록 일시'
/

comment on column TO_ORD.UPDR_NO is '수정자 번호'
/

comment on column TO_ORD.UPD_DTTM is '수정 일시'
/

create table TO_ORD_DTL
(
    ORD_NO            NUMBER(16) not null
        constraint FK_ORD_DTL_4
            references TO_ORD,
    ORD_DTL_SEQ       NUMBER     not null,
    ORD_DTL_STATUS_CD VARCHAR2(2),
    GOODS_NO          VARCHAR2(16),
    ITEM_NO           VARCHAR2(18),
    GOODS_NM          VARCHAR2(100),
    ITEM_NM           VARCHAR2(100),
    ORD_QTT           NUMBER,
    SUPPLY_AMT        NUMBER(20, 2),
    CUSTOMER_AMT      NUMBER(20, 2),
    SALE_AMT          NUMBER(20, 2),
    DC_AMT            NUMBER(20, 2),
    GOODS_READY_DTTM  DATE,
    RLS_CMD_DTTM      DATE,
    RLS_CMPLT_DTTM    DATE,
    DLVR_CMPLT_DTTM   DATE,
    GOODS_ESTM_REG_YN VARCHAR2(1),
    DLVR_WISH_DT      VARCHAR2(8),
    ADD_OPT_YN        VARCHAR2(1),
    ADD_OPT_NO        NUMBER(19),
    ADD_OPT_NM        VARCHAR2(255),
    ADD_OPT_DTL_SEQ   NUMBER(19),
    CLAIM_NO          NUMBER(16),
    RETURN_CD         VARCHAR2(2),
    CLAIM_CD          VARCHAR2(2),
    CLAIM_ACCEPT_DTTM DATE,
    CLAIM_CMPLT_DTTM  DATE,
    CLAIM_CANCEL_DTTM DATE,
    CLAIM_REASON_CD   VARCHAR2(2),
    CLAIM_DTL_REASON  VARCHAR2(2000),
    CLAIM_MEMO        VARCHAR2(2000),
    DLVR_API          VARCHAR2(1) default 'N',
    DLVR_API_DTTM     DATE,
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE,
    CTG_NO            NUMBER(19),
    CLAIM_QTT         NUMBER,
    PVD_SVMN          NUMBER(20, 2),
    RECOM_PVD_SVMN    NUMBER(20, 2),
    RECOM_ACCU_RATE   NUMBER(10, 2),
    constraint IDX_TO_ORD_DTL_PK
        primary key (ORD_NO, ORD_DTL_SEQ)
)
/

comment on table TO_ORD_DTL is '주문 상세'
/

comment on column TO_ORD_DTL.ORD_NO is '주문 번호'
/

comment on column TO_ORD_DTL.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TO_ORD_DTL.ORD_DTL_STATUS_CD is '주문 상세 상태 코드'
/

comment on column TO_ORD_DTL.GOODS_NO is '상품 번호'
/

comment on column TO_ORD_DTL.ITEM_NO is '단품 번호'
/

comment on column TO_ORD_DTL.GOODS_NM is '상품 명'
/

comment on column TO_ORD_DTL.ITEM_NM is '단품 명'
/

comment on column TO_ORD_DTL.ORD_QTT is '주문 수량'
/

comment on column TO_ORD_DTL.SUPPLY_AMT is '공급 금액'
/

comment on column TO_ORD_DTL.CUSTOMER_AMT is '소비자 금액'
/

comment on column TO_ORD_DTL.SALE_AMT is '판매 금액'
/

comment on column TO_ORD_DTL.DC_AMT is '할인 금액'
/

comment on column TO_ORD_DTL.GOODS_READY_DTTM is '상품 준비 일시'
/

comment on column TO_ORD_DTL.RLS_CMD_DTTM is '출고 지시 일시'
/

comment on column TO_ORD_DTL.RLS_CMPLT_DTTM is '출고 완료 일시'
/

comment on column TO_ORD_DTL.DLVR_CMPLT_DTTM is '배송 완료 일시'
/

comment on column TO_ORD_DTL.GOODS_ESTM_REG_YN is '상품 평가 등록 여부'
/

comment on column TO_ORD_DTL.DLVR_WISH_DT is '배송 희망 일자'
/

comment on column TO_ORD_DTL.ADD_OPT_YN is '추가 옵션 여부'
/

comment on column TO_ORD_DTL.ADD_OPT_NO is '추가 옵션 번호'
/

comment on column TO_ORD_DTL.ADD_OPT_NM is '추가 옵션 명'
/

comment on column TO_ORD_DTL.ADD_OPT_DTL_SEQ is '추가 옵션 상세 순번'
/

comment on column TO_ORD_DTL.CLAIM_NO is '클레임 번호'
/

comment on column TO_ORD_DTL.RETURN_CD is '반품 코드'
/

comment on column TO_ORD_DTL.CLAIM_CD is '클레임 코드'
/

comment on column TO_ORD_DTL.CLAIM_ACCEPT_DTTM is '클레임 접수 일시'
/

comment on column TO_ORD_DTL.CLAIM_CMPLT_DTTM is '클레임 완료 일시'
/

comment on column TO_ORD_DTL.CLAIM_CANCEL_DTTM is '클레임 취소 일시'
/

comment on column TO_ORD_DTL.CLAIM_REASON_CD is '클레임 사유 코드'
/

comment on column TO_ORD_DTL.CLAIM_DTL_REASON is '클레임 상세 사유'
/

comment on column TO_ORD_DTL.CLAIM_MEMO is '클레임 메모'
/

comment on column TO_ORD_DTL.DLVR_API is '배송 API'
/

comment on column TO_ORD_DTL.DLVR_API_DTTM is '배송 API 일시'
/

comment on column TO_ORD_DTL.REGR_NO is '등록자 번호'
/

comment on column TO_ORD_DTL.REG_DTTM is '등록 일시'
/

comment on column TO_ORD_DTL.UPDR_NO is '수정자 번호'
/

comment on column TO_ORD_DTL.UPD_DTTM is '수정 일시'
/

comment on column TO_ORD_DTL.CTG_NO is '카테고리 번호'
/

comment on column TO_ORD_DTL.CLAIM_QTT is '클레임 수량'
/

comment on column TO_ORD_DTL.PVD_SVMN is '지급적립금'
/

comment on column TO_ORD_DTL.RECOM_PVD_SVMN is '추천인 지급적립금'
/

comment on column TO_ORD_DTL.RECOM_ACCU_RATE is '추천인 적립 율'
/

create index IDX_TO_ORD_DTL_001
    on TO_ORD_DTL (ORD_NO)
/

create index IDX_TO_ORD_DTL_002
    on TO_ORD_DTL (SALE_AMT)
/

create index IDX_TO_ORD_DTL_003
    on TO_ORD_DTL (ORD_DTL_STATUS_CD)
/

create index IDX_TO_ORD_DTL_004
    on TO_ORD_DTL (GOODS_NO)
/

create index IDX_TO_ORD_DTL_005
    on TO_ORD_DTL (REG_DTTM, RETURN_CD)
/

create table TO_ORD_DTL_STATUS_HIST
(
    ORD_NO            NUMBER(16)  not null,
    ORD_DTL_SEQ       NUMBER      not null,
    HIST_START_DTTM   DATE        not null,
    ORD_DTL_STATUS_CD VARCHAR2(2) not null,
    CLAIM_NO          NUMBER(16),
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE,
    CLAIM_QTT         NUMBER,
    RETURN_CD         VARCHAR2(2),
    constraint IDX_TO_ORD_DTL_STATUS_HIST_PK
        primary key (ORD_NO, ORD_DTL_SEQ, HIST_START_DTTM, ORD_DTL_STATUS_CD),
    constraint FK_ORD_DTL_HIST_1
        foreign key (ORD_NO, ORD_DTL_SEQ) references TO_ORD_DTL
)
/

comment on table TO_ORD_DTL_STATUS_HIST is '주문 상세 상태 이력'
/

comment on column TO_ORD_DTL_STATUS_HIST.ORD_NO is '주문 번호'
/

comment on column TO_ORD_DTL_STATUS_HIST.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TO_ORD_DTL_STATUS_HIST.HIST_START_DTTM is '이력 시작 일시'
/

comment on column TO_ORD_DTL_STATUS_HIST.ORD_DTL_STATUS_CD is '주문 상세 상태 코드'
/

comment on column TO_ORD_DTL_STATUS_HIST.CLAIM_NO is '클레임 번호'
/

comment on column TO_ORD_DTL_STATUS_HIST.REGR_NO is '등록자 번호'
/

comment on column TO_ORD_DTL_STATUS_HIST.REG_DTTM is '등록 일시'
/

comment on column TO_ORD_DTL_STATUS_HIST.UPDR_NO is '수정자 번호'
/

comment on column TO_ORD_DTL_STATUS_HIST.UPD_DTTM is '수정 일시'
/

comment on column TO_ORD_DTL_STATUS_HIST.CLAIM_QTT is '클레임 수량'
/

comment on column TO_ORD_DTL_STATUS_HIST.RETURN_CD is '반품코드'
/

create trigger TO_ORD_DTL_STATUS_HIST_TRG01
    after insert or update
    on TO_ORD_DTL
    for each row
BEGIN
    IF(INSERTING OR UPDATING('ORD_DTL_STATUS_CD'))
    THEN
        INSERT INTO TO_ORD_DTL_STATUS_HIST(ORD_NO, ORD_DTL_SEQ, HIST_START_DTTM, ORD_DTL_STATUS_CD, CLAIM_NO, CLAIM_QTT, RETURN_CD, REGR_NO, REG_DTTM, UPDR_NO, UPD_DTTM)
        VALUES
        (:NEW.ORD_NO, :NEW.ORD_DTL_SEQ, SYSDATE, :NEW.ORD_DTL_STATUS_CD, :NEW.CLAIM_NO, :NEW.CLAIM_QTT, :NEW.RETURN_CD, :NEW.REGR_NO, SYSDATE, :NEW.UPDR_NO, :NEW.UPD_DTTM);
    END IF;
END;

/

create index IDX_TO_ORD_001
    on TO_ORD (MEMBER_NO)
/

create index IDX_TO_ORD_002
    on TO_ORD (ORD_STATUS_CD)
/

create table TO_ORD_DELIVERY
(
    ORD_NO            NUMBER(16) not null
        constraint IDX_TO_ORD_DELIVERY_PK
            primary key
        constraint FK_ORD_DELIVERY_3
            references TO_ORD,
    MEMBER_NO         NUMBER,
    AREA_DLVR_SET_NO  NUMBER(19),
    SITE_NO           NUMBER(19),
    DELIVERY_NM       VARCHAR2(100),
    ADRS_NM           VARCHAR2(100),
    ADRS_TEL          VARCHAR2(100),
    ADRS_MOBILE       VARCHAR2(100),
    POST_NO           VARCHAR2(100),
    ROADNM_ADDR       VARCHAR2(255),
    NUM_ADDR          VARCHAR2(255),
    DTL_ADDR          VARCHAR2(255),
    DLVR_MSG          VARCHAR2(1000),
    MEMBER_GB_CD      VARCHAR2(10),
    FRG_ADDR_CITY     VARCHAR2(100),
    FRG_ADDR_COUNTRY  VARCHAR2(100),
    FRG_ADDR_STATE    VARCHAR2(100),
    FRG_ADDR_ZIP_CODE VARCHAR2(100),
    FRG_ADDR_DTL1     VARCHAR2(255),
    FRG_ADDR_DTL2     VARCHAR2(255),
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE
)
/

comment on table TO_ORD_DELIVERY is '주문 배송지'
/

comment on column TO_ORD_DELIVERY.ORD_NO is '주문 번호'
/

comment on column TO_ORD_DELIVERY.MEMBER_NO is '회원 번호'
/

comment on column TO_ORD_DELIVERY.AREA_DLVR_SET_NO is '지역 배송 설정 번호'
/

comment on column TO_ORD_DELIVERY.SITE_NO is '사이트 번호'
/

comment on column TO_ORD_DELIVERY.DELIVERY_NM is '배송지 명'
/

comment on column TO_ORD_DELIVERY.ADRS_NM is '수취인 명'
/

comment on column TO_ORD_DELIVERY.ADRS_TEL is '수취인 전화'
/

comment on column TO_ORD_DELIVERY.ADRS_MOBILE is '수취인 휴대폰'
/

comment on column TO_ORD_DELIVERY.POST_NO is '우편 번호'
/

comment on column TO_ORD_DELIVERY.ROADNM_ADDR is '도로명 주소'
/

comment on column TO_ORD_DELIVERY.NUM_ADDR is '지번 주소'
/

comment on column TO_ORD_DELIVERY.DTL_ADDR is '상세 주소'
/

comment on column TO_ORD_DELIVERY.DLVR_MSG is '배송 메세지'
/

comment on column TO_ORD_DELIVERY.MEMBER_GB_CD is '회원 구분 코드'
/

comment on column TO_ORD_DELIVERY.FRG_ADDR_CITY is '해외 주소 CITY'
/

comment on column TO_ORD_DELIVERY.FRG_ADDR_COUNTRY is '해외 주소 COUNTRY'
/

comment on column TO_ORD_DELIVERY.FRG_ADDR_STATE is '해외 주소 STATE'
/

comment on column TO_ORD_DELIVERY.FRG_ADDR_ZIP_CODE is '해외 주소 ZIP CODE'
/

comment on column TO_ORD_DELIVERY.FRG_ADDR_DTL1 is '해외 주소 상세1'
/

comment on column TO_ORD_DELIVERY.FRG_ADDR_DTL2 is '해외 주소 상세2'
/

comment on column TO_ORD_DELIVERY.REGR_NO is '등록자 번호'
/

comment on column TO_ORD_DELIVERY.REG_DTTM is '등록 일시'
/

comment on column TO_ORD_DELIVERY.UPDR_NO is '수정자 번호'
/

comment on column TO_ORD_DELIVERY.UPD_DTTM is '수정 일시'
/

create table TO_DLVR
(
    DLVR_NO                 NUMBER(16) not null
        constraint IDX_TO_DLVR_PK
            primary key,
    ORD_NO                  NUMBER(16)
        constraint FK_DLVR_1
            references TO_ORD_DELIVERY,
    ORD_DTL_SEQ             NUMBER,
    DLVR_PRC_TYPE_CD        VARCHAR2(2),
    DLVRC_PAYMENT_CD        VARCHAR2(2),
    DLVR_SET_CD             VARCHAR2(2),
    RLS_COURIER_CD          VARCHAR2(2),
    RLS_INVOICE_NO          VARCHAR2(30),
    RLS_INVOICE_REG_DTTM    DATE,
    RLS_CMPLT_REG_DTTM      DATE,
    RETURN_COURIER_CD       VARCHAR2(2),
    RETURN_INVOICE_NO       VARCHAR2(30),
    RETURN_INVOICE_REG_DTTM DATE,
    RETURN_CMPLT_REG_DTTM   DATE,
    DLVR_QTT                NUMBER,
    DLVR_MSG                VARCHAR2(500),
    ORG_DLVR_AMT            NUMBER(20, 2),
    AREA_DLVR_SET_NO        NUMBER(19),
    SITE_NO                 NUMBER(19),
    REAL_DLVR_AMT           NUMBER(20, 2),
    AREA_ADD_DLVRC          NUMBER(20, 2),
    DLVR_SEQ                NUMBER,
    REGR_NO                 NUMBER,
    REG_DTTM                DATE,
    UPDR_NO                 NUMBER,
    UPD_DTTM                DATE,
    constraint FK_DLVR_2
        foreign key (ORD_NO, ORD_DTL_SEQ) references TO_ORD_DTL
            on delete set null
)
/

comment on table TO_DLVR is '배송'
/

comment on column TO_DLVR.DLVR_NO is '배송 번호'
/

comment on column TO_DLVR.ORD_NO is '주문 번호'
/

comment on column TO_DLVR.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TO_DLVR.DLVR_PRC_TYPE_CD is '배송 처리 유형 코드'
/

comment on column TO_DLVR.DLVRC_PAYMENT_CD is '배송비 결제 코드'
/

comment on column TO_DLVR.DLVR_SET_CD is '배송 설정 코드'
/

comment on column TO_DLVR.RLS_COURIER_CD is '출고 택배사 코드'
/

comment on column TO_DLVR.RLS_INVOICE_NO is '출고 송장 번호'
/

comment on column TO_DLVR.RLS_INVOICE_REG_DTTM is '출고 송장 등록 일시'
/

comment on column TO_DLVR.RLS_CMPLT_REG_DTTM is '출고 완료 등록 일시'
/

comment on column TO_DLVR.RETURN_COURIER_CD is '반품 택배사 코드'
/

comment on column TO_DLVR.RETURN_INVOICE_NO is '반품 송장 번호'
/

comment on column TO_DLVR.RETURN_INVOICE_REG_DTTM is '반품 송장 등록 일시'
/

comment on column TO_DLVR.RETURN_CMPLT_REG_DTTM is '반품 완료 등록 일시'
/

comment on column TO_DLVR.DLVR_QTT is '배송 수량'
/

comment on column TO_DLVR.DLVR_MSG is '배송 메세지'
/

comment on column TO_DLVR.ORG_DLVR_AMT is '원본 배송 금액'
/

comment on column TO_DLVR.AREA_DLVR_SET_NO is '지역 배송 설정 번호'
/

comment on column TO_DLVR.SITE_NO is '사이트 번호'
/

comment on column TO_DLVR.REAL_DLVR_AMT is '실 배송 금액'
/

comment on column TO_DLVR.AREA_ADD_DLVRC is '지역 추가 배송비'
/

comment on column TO_DLVR.DLVR_SEQ is '배송 순번'
/

comment on column TO_DLVR.REGR_NO is '등록자 번호'
/

comment on column TO_DLVR.REG_DTTM is '등록 일시'
/

comment on column TO_DLVR.UPDR_NO is '수정자 번호'
/

comment on column TO_DLVR.UPD_DTTM is '수정 일시'
/

create index IDX_TO_DLVR_001
    on TO_DLVR (ORD_NO, ORD_DTL_SEQ)
/

create index IDX_TO_DLVR_002
    on TO_DLVR (RLS_CMPLT_REG_DTTM)
/

create table TO_ORD_DELIVERY_HIST
(
    HIST_START_DTTM   DATE       not null,
    ORD_NO            NUMBER(16) not null
        constraint FK_ORD_DELIVERY_HIST_1
            references TO_ORD_DELIVERY,
    MEMBER_NO         NUMBER,
    AREA_DLVR_SET_NO  NUMBER,
    SITE_NO           NUMBER,
    DELIVERY_NM       VARCHAR2(100),
    ADRS_NM           VARCHAR2(100),
    ADRS_TEL          VARCHAR2(100),
    ADRS_MOBILE       VARCHAR2(100),
    POST_NO           VARCHAR2(100),
    NUM_ADDR          VARCHAR2(255),
    ROADNM_ADDR       VARCHAR2(255),
    DTL_ADDR          VARCHAR2(255),
    DLVR_MSG          VARCHAR2(1000),
    MEMBER_GB_CD      VARCHAR2(10),
    FRG_ADDR_CITY     VARCHAR2(100),
    FRG_ADDR_COUNTRY  VARCHAR2(100),
    FRG_ADDR_STATE    VARCHAR2(100),
    FRG_ADDR_ZIP_CODE VARCHAR2(100),
    FRG_ADDR_DTL1     VARCHAR2(255),
    FRG_ADDR_DTL2     VARCHAR2(255),
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE,
    constraint IDX_TO_ORD_DELIVERY_HIST_PK
        primary key (HIST_START_DTTM, ORD_NO)
)
/

comment on table TO_ORD_DELIVERY_HIST is '주문 배송지 이력'
/

comment on column TO_ORD_DELIVERY_HIST.HIST_START_DTTM is '이력 시작 일시'
/

comment on column TO_ORD_DELIVERY_HIST.ORD_NO is '주문 번호'
/

comment on column TO_ORD_DELIVERY_HIST.MEMBER_NO is '회원 번호'
/

comment on column TO_ORD_DELIVERY_HIST.AREA_DLVR_SET_NO is '지역 배송 설정 번호'
/

comment on column TO_ORD_DELIVERY_HIST.SITE_NO is '사이트 번호'
/

comment on column TO_ORD_DELIVERY_HIST.DELIVERY_NM is '배송지 명'
/

comment on column TO_ORD_DELIVERY_HIST.ADRS_NM is '수취인 명'
/

comment on column TO_ORD_DELIVERY_HIST.ADRS_TEL is '수취인 전화'
/

comment on column TO_ORD_DELIVERY_HIST.ADRS_MOBILE is '수취인 휴대폰'
/

comment on column TO_ORD_DELIVERY_HIST.POST_NO is '우편 번호'
/

comment on column TO_ORD_DELIVERY_HIST.NUM_ADDR is '지번 주소'
/

comment on column TO_ORD_DELIVERY_HIST.ROADNM_ADDR is '도로명 주소'
/

comment on column TO_ORD_DELIVERY_HIST.DTL_ADDR is '상세 주소'
/

comment on column TO_ORD_DELIVERY_HIST.DLVR_MSG is '배송 메세지'
/

comment on column TO_ORD_DELIVERY_HIST.MEMBER_GB_CD is '회원 구분 코드'
/

comment on column TO_ORD_DELIVERY_HIST.FRG_ADDR_CITY is '해외 주소 CITY'
/

comment on column TO_ORD_DELIVERY_HIST.FRG_ADDR_COUNTRY is '해외 주소 COUNTRY'
/

comment on column TO_ORD_DELIVERY_HIST.FRG_ADDR_STATE is '해외 주소 STATE'
/

comment on column TO_ORD_DELIVERY_HIST.FRG_ADDR_ZIP_CODE is '해외 주소 ZIP CODE'
/

comment on column TO_ORD_DELIVERY_HIST.FRG_ADDR_DTL1 is '해외 주소 상세1'
/

comment on column TO_ORD_DELIVERY_HIST.FRG_ADDR_DTL2 is '해외 주소 상세2'
/

comment on column TO_ORD_DELIVERY_HIST.REGR_NO is '등록자 번호'
/

comment on column TO_ORD_DELIVERY_HIST.REG_DTTM is '등록 일시'
/

comment on column TO_ORD_DELIVERY_HIST.UPDR_NO is '수정자 번호'
/

comment on column TO_ORD_DELIVERY_HIST.UPD_DTTM is '수정 일시'
/

create trigger TO_ORD_DELIVERY_HIST_TRG01
    after insert or update
    on TO_ORD_DELIVERY
    for each row
BEGIN
    IF(INSERTING OR UPDATING)
    THEN
        INSERT INTO TO_ORD_DELIVERY_HIST
        (
            HIST_START_DTTM,
            ORD_NO,
            MEMBER_NO,
            AREA_DLVR_SET_NO,
            SITE_NO,
            DELIVERY_NM,
            ADRS_NM,
            ADRS_TEL,
            ADRS_MOBILE,
            POST_NO,
            NUM_ADDR,
            ROADNM_ADDR,
            DTL_ADDR,
            DLVR_MSG,
            MEMBER_GB_CD,
            FRG_ADDR_CITY,
            FRG_ADDR_COUNTRY,
            FRG_ADDR_STATE,
            FRG_ADDR_ZIP_CODE,
            FRG_ADDR_DTL1,
            FRG_ADDR_DTL2,
            REGR_NO,
            REG_DTTM,
            UPDR_NO,
            UPD_DTTM
        )
        VALUES
        (
            SYSDATE,
            :NEW.ORD_NO,
            :NEW.MEMBER_NO,
            :NEW.AREA_DLVR_SET_NO,
            :NEW.SITE_NO,
            :NEW.DELIVERY_NM,
            :NEW.ADRS_NM,
            :NEW.ADRS_TEL,
            :NEW.ADRS_MOBILE,
            :NEW.POST_NO,
            :NEW.NUM_ADDR,
            :NEW.ROADNM_ADDR,
            :NEW.DTL_ADDR,
            :NEW.DLVR_MSG,
            :NEW.MEMBER_GB_CD,
            :NEW.FRG_ADDR_CITY,
            :NEW.FRG_ADDR_COUNTRY,
            :NEW.FRG_ADDR_STATE,
            :NEW.FRG_ADDR_ZIP_CODE,
            :NEW.FRG_ADDR_DTL1,
            :NEW.FRG_ADDR_DTL2,
            :NEW.REGR_NO,
            :NEW.REG_DTTM,
            :NEW.UPDR_NO,
            :NEW.UPD_DTTM
        );
    END IF;
END;

/

create table TO_PAYMENT
(
    PAYMENT_NO         NUMBER(16) not null
        constraint IDX_TO_PAYMENT_PK
            primary key,
    PAYMENT_TURN       NUMBER,
    ORD_NO             NUMBER(16)
        constraint R_1580
            references TO_ORD
                on delete set null,
    SITE_NO            NUMBER(19),
    PAYMENT_PG_CD      VARCHAR2(2),
    PAYMENT_WAY_CD     VARCHAR2(2),
    PAYMENT_STATUS_CD  VARCHAR2(2),
    PAYMENT_CMPLT_DTTM DATE,
    PAYMENT_AMT        NUMBER(20, 2),
    MEMBER_NO          NUMBER,
    TX_NO              VARCHAR2(100),
    CONFIRM_NO         VARCHAR2(50),
    CONFIRM_DTTM       DATE,
    CONFIRM_RESULT_CD  VARCHAR2(20),
    CONFIRM_RESULT_MSG VARCHAR2(500),
    CARD_CD            VARCHAR2(10),
    INSTMNT_MONTH      VARCHAR2(2),
    NOINT_YN           VARCHAR2(1),
    BANK_CD            VARCHAR2(10),
    ACT_NO             VARCHAR2(50),
    HOLDER_NM          VARCHAR2(200) default NULL,
    DPSTER_NM          VARCHAR2(100),
    DPST_SCD_DT        VARCHAR2(14),
    DPST_SCD_AMT       NUMBER(20, 2),
    DPST_CHECK_MSG     VARCHAR2(500),
    PAYMENT_MOBILE     VARCHAR2(100),
    TELECOM_CD         VARCHAR2(2),
    ESCROW_YN          VARCHAR2(1)   default 'N',
    ESCROW_CONFIRMNO   VARCHAR2(20),
    REFUND_AMT         NUMBER(20, 2) default 0,
    CLAIM_CMPLT_DTTM   DATE,
    CLAIM_NO           NUMBER(16),
    REGR_NO            NUMBER,
    REG_DTTM           DATE,
    UPDR_NO            NUMBER,
    UPD_DTTM           DATE,
    APP_LINK_GB_CD     VARCHAR2(3)
)
/

comment on table TO_PAYMENT is '결제'
/

comment on column TO_PAYMENT.PAYMENT_NO is '결제 번호'
/

comment on column TO_PAYMENT.PAYMENT_TURN is '결제 차수'
/

comment on column TO_PAYMENT.ORD_NO is '주문 번호'
/

comment on column TO_PAYMENT.SITE_NO is '사이트 번호'
/

comment on column TO_PAYMENT.PAYMENT_PG_CD is '결제 PG 코드'
/

comment on column TO_PAYMENT.PAYMENT_WAY_CD is '결제 수단 코드'
/

comment on column TO_PAYMENT.PAYMENT_STATUS_CD is '결제 상태 코드'
/

comment on column TO_PAYMENT.PAYMENT_CMPLT_DTTM is '결제 완료 일시'
/

comment on column TO_PAYMENT.PAYMENT_AMT is '결제 금액'
/

comment on column TO_PAYMENT.MEMBER_NO is '회원 번호'
/

comment on column TO_PAYMENT.TX_NO is '거래 번호'
/

comment on column TO_PAYMENT.CONFIRM_NO is '승인 번호'
/

comment on column TO_PAYMENT.CONFIRM_DTTM is '승인 일시'
/

comment on column TO_PAYMENT.CONFIRM_RESULT_CD is '승인 결과 코드'
/

comment on column TO_PAYMENT.CONFIRM_RESULT_MSG is '승인 결과 메세지'
/

comment on column TO_PAYMENT.CARD_CD is '카드사 코드'
/

comment on column TO_PAYMENT.INSTMNT_MONTH is '할부 개월'
/

comment on column TO_PAYMENT.NOINT_YN is '무이자 여부'
/

comment on column TO_PAYMENT.BANK_CD is '은행 코드'
/

comment on column TO_PAYMENT.ACT_NO is '계좌 번호'
/

comment on column TO_PAYMENT.HOLDER_NM is '예금주 명'
/

comment on column TO_PAYMENT.DPSTER_NM is '입금자 명'
/

comment on column TO_PAYMENT.DPST_SCD_DT is '입금 예정 일자'
/

comment on column TO_PAYMENT.DPST_SCD_AMT is '입금 예정 금액'
/

comment on column TO_PAYMENT.DPST_CHECK_MSG is '입금 확인 메세지'
/

comment on column TO_PAYMENT.PAYMENT_MOBILE is '결제 핸드폰번호'
/

comment on column TO_PAYMENT.TELECOM_CD is '통신사 코드'
/

comment on column TO_PAYMENT.ESCROW_YN is '에스크로 여부'
/

comment on column TO_PAYMENT.ESCROW_CONFIRMNO is '에스크로 승인번호'
/

comment on column TO_PAYMENT.REFUND_AMT is '환불 금액'
/

comment on column TO_PAYMENT.CLAIM_CMPLT_DTTM is '클레임 완료 일시'
/

comment on column TO_PAYMENT.CLAIM_NO is '클레임 번호'
/

comment on column TO_PAYMENT.REGR_NO is '등록자 번호'
/

comment on column TO_PAYMENT.REG_DTTM is '등록 일시'
/

comment on column TO_PAYMENT.UPDR_NO is '수정자 번호'
/

comment on column TO_PAYMENT.UPD_DTTM is '수정 일시'
/

comment on column TO_PAYMENT.APP_LINK_GB_CD is '앱 연동 구분 코드'
/

create index IDX_TO_PAYMENT_001
    on TO_PAYMENT (ORD_NO)
/

create table TO_PAYMENT_CASH_REFUND
(
    CASH_REFUND_NO   NUMBER(16) not null
        constraint IDX_TO_PAYMENT_CASH_REFUND_PK
            primary key,
    PAYMENT_NO       NUMBER(16)
        constraint FK_PAYMENT_CASH_REFUND_1
            references TO_PAYMENT
                on delete set null,
    REFUND_TYPE_CD   VARCHAR2(2),
    REFUND_STATUS_CD VARCHAR2(2),
    BANK_CD          VARCHAR2(2),
    ACT_NO           VARCHAR2(50),
    HOLDER_NM        VARCHAR2(100),
    SCD_AMT          NUMBER(20, 2),
    REFUND_AMT       NUMBER(20, 2),
    CMS_AMT          NUMBER(20, 2),
    SCD_DT           VARCHAR2(8),
    SMS_SEND_YN      VARCHAR2(1),
    PRC_RESP_CD      VARCHAR2(2),
    PRC_RESP_CONTENT VARCHAR2(2000),
    ACCEPT_NO        NUMBER,
    ACCEPT_DTTM      DATE,
    STNBY_NO         NUMBER,
    STNBY_DTTM       DATE,
    CMPLT_NO         NUMBER,
    CMPLT_DTTM       DATE,
    ERR_DTTM         DATE,
    MEMO             VARCHAR2(2000),
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE
)
/

comment on table TO_PAYMENT_CASH_REFUND is '결제 현금 환불'
/

comment on column TO_PAYMENT_CASH_REFUND.CASH_REFUND_NO is '현금 환불 번호'
/

comment on column TO_PAYMENT_CASH_REFUND.PAYMENT_NO is '결제 번호'
/

comment on column TO_PAYMENT_CASH_REFUND.REFUND_TYPE_CD is '환불 유형 코드'
/

comment on column TO_PAYMENT_CASH_REFUND.REFUND_STATUS_CD is '환불 상태 코드'
/

comment on column TO_PAYMENT_CASH_REFUND.BANK_CD is '은행 코드'
/

comment on column TO_PAYMENT_CASH_REFUND.ACT_NO is '계좌 번호'
/

comment on column TO_PAYMENT_CASH_REFUND.HOLDER_NM is '예금주 명'
/

comment on column TO_PAYMENT_CASH_REFUND.SCD_AMT is '예정 금액'
/

comment on column TO_PAYMENT_CASH_REFUND.REFUND_AMT is '환불 금액'
/

comment on column TO_PAYMENT_CASH_REFUND.CMS_AMT is '수수료 금액'
/

comment on column TO_PAYMENT_CASH_REFUND.SCD_DT is '예정 일자'
/

comment on column TO_PAYMENT_CASH_REFUND.SMS_SEND_YN is 'SMS 전송 여부'
/

comment on column TO_PAYMENT_CASH_REFUND.PRC_RESP_CD is '처리 응답 코드'
/

comment on column TO_PAYMENT_CASH_REFUND.PRC_RESP_CONTENT is '처리 응답 내용'
/

comment on column TO_PAYMENT_CASH_REFUND.ACCEPT_NO is '접수자 번호'
/

comment on column TO_PAYMENT_CASH_REFUND.ACCEPT_DTTM is '접수 일시'
/

comment on column TO_PAYMENT_CASH_REFUND.STNBY_NO is '대기자 번호'
/

comment on column TO_PAYMENT_CASH_REFUND.STNBY_DTTM is '대기 일시'
/

comment on column TO_PAYMENT_CASH_REFUND.CMPLT_NO is '완료자 번호'
/

comment on column TO_PAYMENT_CASH_REFUND.CMPLT_DTTM is '완료 일시'
/

comment on column TO_PAYMENT_CASH_REFUND.ERR_DTTM is '에러 일시'
/

comment on column TO_PAYMENT_CASH_REFUND.MEMO is '메모'
/

comment on column TO_PAYMENT_CASH_REFUND.REGR_NO is '등록자 번호'
/

comment on column TO_PAYMENT_CASH_REFUND.REG_DTTM is '등록 일시'
/

comment on column TO_PAYMENT_CASH_REFUND.UPDR_NO is '수정자 번호'
/

comment on column TO_PAYMENT_CASH_REFUND.UPD_DTTM is '수정 일시'
/

create table TO_PAYMENT_STATUS_HIST
(
    HIST_START_DTTM   DATE                 not null,
    PAYMENT_NO        NUMBER(16) default 0 not null
        constraint FK_PAYMENT_STATUS_1
            references TO_PAYMENT,
    PAYMENT_STATUS_CD VARCHAR2(2),
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE
)
/

comment on table TO_PAYMENT_STATUS_HIST is '결제 상태 이력'
/

comment on column TO_PAYMENT_STATUS_HIST.HIST_START_DTTM is '이력 시작 일시'
/

comment on column TO_PAYMENT_STATUS_HIST.PAYMENT_NO is '결제 번호'
/

comment on column TO_PAYMENT_STATUS_HIST.PAYMENT_STATUS_CD is '결제 상태 코드'
/

comment on column TO_PAYMENT_STATUS_HIST.REGR_NO is '등록자 번호'
/

comment on column TO_PAYMENT_STATUS_HIST.REG_DTTM is '등록 일시'
/

comment on column TO_PAYMENT_STATUS_HIST.UPDR_NO is '수정자 번호'
/

comment on column TO_PAYMENT_STATUS_HIST.UPD_DTTM is '수정 일시'
/

create trigger TO_PAYMENT_STATUS_HIST_TRG01
    after insert
    on TO_PAYMENT
    for each row
BEGIN
    IF(INSERTING OR UPDATING('PAYMENT_STATUS_CD'))
    THEN
        INSERT INTO TO_PAYMENT_STATUS_HIST(HIST_START_DTTM, PAYMENT_NO, PAYMENT_STATUS_CD, REGR_NO, REG_DTTM, UPDR_NO, UPD_DTTM)
        VALUES
        (SYSDATE, :NEW.PAYMENT_NO, :NEW.PAYMENT_STATUS_CD, :NEW.REGR_NO, :NEW.REG_DTTM, :NEW.UPDR_NO, :NEW.UPD_DTTM);
    END IF;
END;

/

create table TO_TAX_BILL
(
    TAX_BILL_NO        NUMBER not null
        constraint IDX_TO_TAX_BILL_PK
            primary key,
    ORD_NO             NUMBER(16)
        constraint FK_TAX_BILL_1
            references TO_ORD
                on delete set null,
    TAX_BILL_STATUS_CD VARCHAR2(2),
    APPLICANT_GB_CD    VARCHAR2(2),
    USE_GB_CD          VARCHAR2(2),
    MEMBER_NO          NUMBER,
    ISSUE_WAY_CD       VARCHAR2(2),
    ISSUE_WAY_NO       VARCHAR2(13),
    COMPANY_NM         VARCHAR2(100),
    BIZ_NO             VARCHAR2(13),
    CEO_NM             VARCHAR2(100),
    BSNS_CDTS          VARCHAR2(255),
    ITEM               VARCHAR2(255),
    POST_NO            VARCHAR2(100),
    ROADNM_ADDR        VARCHAR2(255),
    NUM_ADDR           VARCHAR2(255),
    DTL_ADDR           VARCHAR2(255),
    SUPPLY_AMT         NUMBER(20, 2),
    VAT_AMT            NUMBER(20, 2),
    TOT_AMT            NUMBER(20, 2),
    ACCEPT_DTTM        DATE,
    LINK_DTTM          DATE,
    LINK_TX_NO         VARCHAR2(100),
    LINK_RESULT_CD     VARCHAR2(2),
    LINK_RESULT_MSG    VARCHAR2(1000),
    MEMO               VARCHAR2(2000),
    MANAGER_NM         VARCHAR2(100),
    EMAIL              VARCHAR2(100),
    TEL_NO             VARCHAR2(100),
    REGR_NO            NUMBER,
    REG_DTTM           DATE,
    UPDR_NO            NUMBER,
    UPD_DTTM           DATE
)
/

comment on table TO_TAX_BILL is '세금 계산서'
/

comment on column TO_TAX_BILL.TAX_BILL_NO is '세금 계산서 번호'
/

comment on column TO_TAX_BILL.ORD_NO is '주문 번호'
/

comment on column TO_TAX_BILL.TAX_BILL_STATUS_CD is '세금 계산서 상태 코드'
/

comment on column TO_TAX_BILL.APPLICANT_GB_CD is '신청자 구분 코드'
/

comment on column TO_TAX_BILL.USE_GB_CD is '사용 구분 코드'
/

comment on column TO_TAX_BILL.MEMBER_NO is '회원 번호'
/

comment on column TO_TAX_BILL.ISSUE_WAY_CD is '발급 수단 코드'
/

comment on column TO_TAX_BILL.ISSUE_WAY_NO is '발급 수단 번호'
/

comment on column TO_TAX_BILL.COMPANY_NM is '업체 명'
/

comment on column TO_TAX_BILL.BIZ_NO is '사업자 번호'
/

comment on column TO_TAX_BILL.CEO_NM is '대표자 명'
/

comment on column TO_TAX_BILL.BSNS_CDTS is '업태'
/

comment on column TO_TAX_BILL.ITEM is '종목'
/

comment on column TO_TAX_BILL.POST_NO is '우편 번호'
/

comment on column TO_TAX_BILL.ROADNM_ADDR is '도로명 주소'
/

comment on column TO_TAX_BILL.NUM_ADDR is '지번 주소'
/

comment on column TO_TAX_BILL.DTL_ADDR is '상세 주소'
/

comment on column TO_TAX_BILL.SUPPLY_AMT is '공급 금액'
/

comment on column TO_TAX_BILL.VAT_AMT is '부가세 금액'
/

comment on column TO_TAX_BILL.TOT_AMT is '총 금액'
/

comment on column TO_TAX_BILL.ACCEPT_DTTM is '접수 일시'
/

comment on column TO_TAX_BILL.LINK_DTTM is '연동 일시'
/

comment on column TO_TAX_BILL.LINK_TX_NO is '연동 거래 번호'
/

comment on column TO_TAX_BILL.LINK_RESULT_CD is '연동 결과 코드'
/

comment on column TO_TAX_BILL.LINK_RESULT_MSG is '연동 결과 메세지'
/

comment on column TO_TAX_BILL.MEMO is '메모'
/

comment on column TO_TAX_BILL.MANAGER_NM is '담당자명'
/

comment on column TO_TAX_BILL.EMAIL is '이메일'
/

comment on column TO_TAX_BILL.TEL_NO is '전화 번호'
/

comment on column TO_TAX_BILL.REGR_NO is '등록자 번호'
/

comment on column TO_TAX_BILL.REG_DTTM is '등록 일시'
/

comment on column TO_TAX_BILL.UPDR_NO is '수정자 번호'
/

comment on column TO_TAX_BILL.UPD_DTTM is '수정 일시'
/

create table TO_VISIT_RSV
(
    RSV_NO           VARCHAR2(13) not null
        constraint IDX_TO_VISIT_RSV_PK
            primary key,
    STORE_NO         VARCHAR2(20),
    MEMBER_NO        NUMBER,
    RSV_DATE         DATE,
    RSV_TIME         VARCHAR2(4),
    REQ_MATR         VARCHAR2(2000),
    VISIT_PURPOSE_CD VARCHAR2(100),
    VISIT_PURPOSE_NM VARCHAR2(500),
    CANCEL_YN        VARCHAR2(1),
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE,
    STORE_NM         VARCHAR2(200),
    VISIT_YN         VARCHAR2(1)  default 'N',
    INFLOW_PATH_CD   VARCHAR2(30) default NULL,
    CHECKUP_YN       VARCHAR2(1),
    NO_MEMBER_NM     VARCHAR2(100),
    NO_MEMBER_MOBILE VARCHAR2(200),
    EVENT_GUBUN      VARCHAR2(50)
)
/

comment on table TO_VISIT_RSV is '방문예약'
/

comment on column TO_VISIT_RSV.RSV_NO is '예약번호'
/

comment on column TO_VISIT_RSV.STORE_NO is '매장번호'
/

comment on column TO_VISIT_RSV.MEMBER_NO is '회원번호'
/

comment on column TO_VISIT_RSV.RSV_DATE is '예약일자'
/

comment on column TO_VISIT_RSV.RSV_TIME is '예약시간'
/

comment on column TO_VISIT_RSV.REQ_MATR is '요청사항'
/

comment on column TO_VISIT_RSV.VISIT_PURPOSE_CD is '방문목적코드(01,02, .. )'
/

comment on column TO_VISIT_RSV.VISIT_PURPOSE_NM is '방문목적명(매장방문,예약전용, .. )'
/

comment on column TO_VISIT_RSV.CANCEL_YN is '취소여부'
/

comment on column TO_VISIT_RSV.REGR_NO is '등록자번호'
/

comment on column TO_VISIT_RSV.REG_DTTM is '등록일시'
/

comment on column TO_VISIT_RSV.UPDR_NO is '수정자번호'
/

comment on column TO_VISIT_RSV.UPD_DTTM is '수정일시'
/

comment on column TO_VISIT_RSV.STORE_NM is '매장 명'
/

comment on column TO_VISIT_RSV.VISIT_YN is '방문 여부'
/

comment on column TO_VISIT_RSV.INFLOW_PATH_CD is '유입 경로 코드'
/

comment on column TO_VISIT_RSV.CHECKUP_YN is '검사 여부'
/

comment on column TO_VISIT_RSV.NO_MEMBER_NM is '비 회원 명'
/

comment on column TO_VISIT_RSV.NO_MEMBER_MOBILE is '비 회원 휴대폰 번호'
/

comment on column TO_VISIT_RSV.EVENT_GUBUN is '이벤트 유입 구분'
/

create index IDX_TO_VISIT_RSV_INDX
    on TO_VISIT_RSV (RSV_DATE, REG_DTTM)
/

create table TO_VISIT_RSV_DTL
(
    RSV_NO          VARCHAR2(13) not null,
    RSV_DTL_SEQ     NUMBER       not null,
    RSV_GB          VARCHAR2(10),
    ORD_NO          NUMBER(16),
    ORD_DTL_SEQ     NUMBER,
    GOODS_NO        VARCHAR2(16),
    GOODS_NM        VARCHAR2(100),
    ITEM_NO         VARCHAR2(18),
    ITEM_NM         VARCHAR2(100),
    ORD_QTT         NUMBER,
    SALE_AMT        NUMBER(20, 2),
    DC_AMT          NUMBER(20, 2),
    ADD_OPT_YN      VARCHAR2(1),
    ADD_OPT_NO      NUMBER(19),
    ADD_OPT_NM      VARCHAR2(255),
    ADD_OPT_DTL_SEQ NUMBER(19),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    ADD_OPT_BUY_QTT NUMBER,
    constraint IDX_TO_VISIT_RSV_DTL_PK
        primary key (RSV_NO, RSV_DTL_SEQ)
)
/

comment on table TO_VISIT_RSV_DTL is '방문예약상세'
/

comment on column TO_VISIT_RSV_DTL.RSV_NO is '예약번호'
/

comment on column TO_VISIT_RSV_DTL.RSV_DTL_SEQ is '예약상세순번'
/

comment on column TO_VISIT_RSV_DTL.RSV_GB is '예약구분(01:매장수령,02:예약전용상품,03:사전예약)'
/

comment on column TO_VISIT_RSV_DTL.ORD_NO is '주문번호'
/

comment on column TO_VISIT_RSV_DTL.ORD_DTL_SEQ is '주문상세순번'
/

comment on column TO_VISIT_RSV_DTL.GOODS_NO is '상품번호'
/

comment on column TO_VISIT_RSV_DTL.GOODS_NM is '상품명'
/

comment on column TO_VISIT_RSV_DTL.ITEM_NO is '단품번호'
/

comment on column TO_VISIT_RSV_DTL.ITEM_NM is '단품명'
/

comment on column TO_VISIT_RSV_DTL.ORD_QTT is '주문수량'
/

comment on column TO_VISIT_RSV_DTL.SALE_AMT is '판매금액'
/

comment on column TO_VISIT_RSV_DTL.DC_AMT is '할인금액'
/

comment on column TO_VISIT_RSV_DTL.ADD_OPT_YN is '추가옵션여부'
/

comment on column TO_VISIT_RSV_DTL.ADD_OPT_NO is '추가옵션번호'
/

comment on column TO_VISIT_RSV_DTL.ADD_OPT_NM is '추가옵션명'
/

comment on column TO_VISIT_RSV_DTL.ADD_OPT_DTL_SEQ is '추가옵션상세순번'
/

comment on column TO_VISIT_RSV_DTL.REGR_NO is '등록자번호'
/

comment on column TO_VISIT_RSV_DTL.REG_DTTM is '등록일시'
/

comment on column TO_VISIT_RSV_DTL.UPDR_NO is '수정자번호'
/

comment on column TO_VISIT_RSV_DTL.UPD_DTTM is '수정일시'
/

create materialized view log on TO_VISIT_RSV_DTL
    with primary key (RSV_NO, RSV_DTL_SEQ)
/

create index IDX_TO_VISIT_RSV_DTL_001
    on TO_VISIT_RSV_DTL (GOODS_NO)
/

create index IDX_TO_VISIT_RSV_DTL_002
    on TO_VISIT_RSV_DTL (REG_DTTM)
/

create table TP_PROMOTION_DISPZONE
(
    PRMT_NO          NUMBER     not null,
    PRMT_DISPZONE_NO NUMBER(19) not null,
    DISPZONE_NM      VARCHAR2(100),
    USE_YN           VARCHAR2(1),
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE,
    DEL_YN           VARCHAR2(1),
    DELR_NO          NUMBER,
    DEL_DTTM         DATE,
    constraint IDX_TP_PROMOTION_DISPZONE_PK
        primary key (PRMT_DISPZONE_NO, PRMT_NO)
)
/

comment on table TP_PROMOTION_DISPZONE is '프로모션 전시ZONE'
/

comment on column TP_PROMOTION_DISPZONE.PRMT_NO is '프로모션 번호'
/

comment on column TP_PROMOTION_DISPZONE.PRMT_DISPZONE_NO is '프로모션 전시ZONE 번호'
/

comment on column TP_PROMOTION_DISPZONE.DISPZONE_NM is '전시ZONE 명'
/

comment on column TP_PROMOTION_DISPZONE.USE_YN is '사용 여부'
/

comment on column TP_PROMOTION_DISPZONE.REGR_NO is '등록자 번호'
/

comment on column TP_PROMOTION_DISPZONE.REG_DTTM is '등록 일시'
/

comment on column TP_PROMOTION_DISPZONE.UPDR_NO is '수정자 번호'
/

comment on column TP_PROMOTION_DISPZONE.UPD_DTTM is '수정 일시'
/

comment on column TP_PROMOTION_DISPZONE.DEL_YN is '삭제 여부'
/

comment on column TP_PROMOTION_DISPZONE.DELR_NO is '삭제자 번호'
/

comment on column TP_PROMOTION_DISPZONE.DEL_DTTM is '삭제 일시'
/

create table TP_PROMOTION_TARGET_GOODS
(
    PRMT_NO          NUMBER       not null,
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE,
    APPLY_SEQ        NUMBER       not null,
    GOODS_NO         VARCHAR2(16) not null,
    USE_YN           VARCHAR2(1),
    PRMT_DISPZONE_NO NUMBER(19)   not null,
    constraint IDX_TP_PROMOTION_TARGET_GOODS_
        primary key (PRMT_NO, APPLY_SEQ, PRMT_DISPZONE_NO),
    constraint FK_TP_PROMOTION_DISPZONE
        foreign key (PRMT_DISPZONE_NO, PRMT_NO) references TP_PROMOTION_DISPZONE
)
/

comment on table TP_PROMOTION_TARGET_GOODS is '프로모션 대상 상품'
/

comment on column TP_PROMOTION_TARGET_GOODS.PRMT_NO is '프로모션 번호'
/

comment on column TP_PROMOTION_TARGET_GOODS.REGR_NO is '등록자 번호'
/

comment on column TP_PROMOTION_TARGET_GOODS.REG_DTTM is '등록 일시'
/

comment on column TP_PROMOTION_TARGET_GOODS.UPDR_NO is '수정자 번호'
/

comment on column TP_PROMOTION_TARGET_GOODS.UPD_DTTM is '수정 일시'
/

comment on column TP_PROMOTION_TARGET_GOODS.APPLY_SEQ is '적용 순번'
/

comment on column TP_PROMOTION_TARGET_GOODS.GOODS_NO is '상품 번호'
/

comment on column TP_PROMOTION_TARGET_GOODS.USE_YN is '사용 여부'
/

comment on column TP_PROMOTION_TARGET_GOODS.PRMT_DISPZONE_NO is '프로모션 전시ZONE 번호'
/

create index IDX_TARGET_GOODS_001
    on TP_PROMOTION_TARGET_GOODS (PRMT_NO, GOODS_NO)
/

create index IDX_TARGET_GOODS_002
    on TP_PROMOTION_TARGET_GOODS (GOODS_NO)
/

create table TS_COMPANY
(
    COMPANY_NO          NUMBER(19) not null
        constraint IDX_TS_COMPANY_PK
            primary key,
    COMPANY_NM          VARCHAR2(50),
    CEO_NM              VARCHAR2(50),
    EMAIL               VARCHAR2(100),
    BSNS_CDTS           VARCHAR2(30),
    ITEM                VARCHAR2(30),
    POST_NO             VARCHAR2(6),
    ADDR_NUM            VARCHAR2(255),
    ADDR_ROADNM         VARCHAR2(255),
    ADDR_CMN_DTL        VARCHAR2(255),
    TEL_NO              VARCHAR2(20),
    FAX_NO              VARCHAR2(20),
    CPR_NO              VARCHAR2(13),
    COMM_SALE_REGIST_NO VARCHAR2(50) default NULL,
    BIZ_NO              VARCHAR2(10),
    BIZ_INFO_LINK       VARCHAR2(300),
    PRIVACYMANAGER      VARCHAR2(20),
    SBN_ID              VARCHAR2(200),
    SBN_CERT_KEY        VARCHAR2(200),
    SBN_START_DT        VARCHAR2(14),
    SBN_END_DT          VARCHAR2(14),
    HOMEPAGE_ID         VARCHAR2(100),
    REGR_NO             NUMBER,
    REG_DTTM            DATE,
    UPDR_NO             NUMBER,
    UPD_DTTM            DATE
)
/

comment on table TS_COMPANY is '업체'
/

comment on column TS_COMPANY.COMPANY_NO is '업체 번호'
/

comment on column TS_COMPANY.COMPANY_NM is '업체 명'
/

comment on column TS_COMPANY.CEO_NM is '대표자 명'
/

comment on column TS_COMPANY.EMAIL is '이메일'
/

comment on column TS_COMPANY.BSNS_CDTS is '업태'
/

comment on column TS_COMPANY.ITEM is '종목'
/

comment on column TS_COMPANY.POST_NO is '우편 번호'
/

comment on column TS_COMPANY.ADDR_NUM is '주소 지번'
/

comment on column TS_COMPANY.ADDR_ROADNM is '주소 도로명'
/

comment on column TS_COMPANY.ADDR_CMN_DTL is '주소 공통 상세'
/

comment on column TS_COMPANY.TEL_NO is '전화 번호'
/

comment on column TS_COMPANY.FAX_NO is '팩스 번호'
/

comment on column TS_COMPANY.CPR_NO is '법인 번호'
/

comment on column TS_COMPANY.COMM_SALE_REGIST_NO is '통신 판매 신고 번호'
/

comment on column TS_COMPANY.BIZ_NO is '사업자 번호'
/

comment on column TS_COMPANY.BIZ_INFO_LINK is '사업자 정보 링크'
/

comment on column TS_COMPANY.PRIVACYMANAGER is '개인정보관리자'
/

comment on column TS_COMPANY.SBN_ID is '사방넷 아이디'
/

comment on column TS_COMPANY.SBN_CERT_KEY is '사방넷 인증키'
/

comment on column TS_COMPANY.SBN_START_DT is '사방넷 시작 일자'
/

comment on column TS_COMPANY.SBN_END_DT is '사방넷 종료 일자'
/

comment on column TS_COMPANY.HOMEPAGE_ID is '홈페이지 아이디'
/

comment on column TS_COMPANY.REGR_NO is '등록자 번호'
/

comment on column TS_COMPANY.REG_DTTM is '등록 일시'
/

comment on column TS_COMPANY.UPDR_NO is '수정자 번호'
/

comment on column TS_COMPANY.UPD_DTTM is '수정 일시'
/

create table TS_COMPANY_STATUS_HIST
(
    COMPANY_NO          NUMBER(19) not null,
    HIST_START_DTTM     DATE       not null,
    COMPANY_NM          VARCHAR2(50),
    CEO_NM              VARCHAR2(50),
    EMAIL               VARCHAR2(100),
    BSNS_CDTS           VARCHAR2(30),
    ITEM                VARCHAR2(30),
    POST_NO             VARCHAR2(6),
    ADDR_NUM            VARCHAR2(255),
    ADDR_ROADNM         VARCHAR2(255),
    ADDR_CMN_DTL        VARCHAR2(255),
    TEL_NO              VARCHAR2(20),
    FAX_NO              VARCHAR2(20),
    CPR_NO              VARCHAR2(13),
    COMM_SALE_REGIST_NO VARCHAR2(20),
    BIZ_NO              VARCHAR2(10),
    BIZ_INFO_LINK       VARCHAR2(300),
    PRIVACYMANAGER      VARCHAR2(20),
    SBN_ID              VARCHAR2(200),
    SBN_CERT_KEY        VARCHAR2(200),
    SBN_START_DT        VARCHAR2(14),
    SBN_END_DT          VARCHAR2(14),
    HOMEPAGE_ID         VARCHAR2(100),
    REGR_NO             NUMBER,
    REG_DTTM            DATE,
    UPDR_NO             NUMBER,
    UPD_DTTM            DATE,
    constraint IDX_TS_COMPANY_STATUS_HIST_PK
        primary key (COMPANY_NO, HIST_START_DTTM)
)
/

comment on table TS_COMPANY_STATUS_HIST is '업체 상태 이력'
/

comment on column TS_COMPANY_STATUS_HIST.COMPANY_NO is '업체 번호'
/

comment on column TS_COMPANY_STATUS_HIST.HIST_START_DTTM is '이력 시작 일시'
/

comment on column TS_COMPANY_STATUS_HIST.COMPANY_NM is '업체 명'
/

comment on column TS_COMPANY_STATUS_HIST.CEO_NM is '대표자 명'
/

comment on column TS_COMPANY_STATUS_HIST.EMAIL is '이메일'
/

comment on column TS_COMPANY_STATUS_HIST.BSNS_CDTS is '업태'
/

comment on column TS_COMPANY_STATUS_HIST.ITEM is '종목'
/

comment on column TS_COMPANY_STATUS_HIST.POST_NO is '우편 번호'
/

comment on column TS_COMPANY_STATUS_HIST.ADDR_NUM is '주소 지번'
/

comment on column TS_COMPANY_STATUS_HIST.ADDR_ROADNM is '주소 도로명'
/

comment on column TS_COMPANY_STATUS_HIST.ADDR_CMN_DTL is '주소 공통 상세'
/

comment on column TS_COMPANY_STATUS_HIST.TEL_NO is '전화 번호'
/

comment on column TS_COMPANY_STATUS_HIST.FAX_NO is '팩스 번호'
/

comment on column TS_COMPANY_STATUS_HIST.CPR_NO is '법인 번호'
/

comment on column TS_COMPANY_STATUS_HIST.COMM_SALE_REGIST_NO is '통신 판매 신고 번호'
/

comment on column TS_COMPANY_STATUS_HIST.BIZ_NO is '사업자 번호'
/

comment on column TS_COMPANY_STATUS_HIST.BIZ_INFO_LINK is '사업자 정보 링크'
/

comment on column TS_COMPANY_STATUS_HIST.PRIVACYMANAGER is '개인정보관리자'
/

comment on column TS_COMPANY_STATUS_HIST.SBN_ID is '사방넷 아이디'
/

comment on column TS_COMPANY_STATUS_HIST.SBN_CERT_KEY is '사방넷 인증키'
/

comment on column TS_COMPANY_STATUS_HIST.SBN_START_DT is '사방넷 시작 일자'
/

comment on column TS_COMPANY_STATUS_HIST.SBN_END_DT is '사방넷 종료 일자'
/

comment on column TS_COMPANY_STATUS_HIST.HOMEPAGE_ID is '홈페이지 아이디'
/

comment on column TS_COMPANY_STATUS_HIST.REGR_NO is '등록자 번호'
/

comment on column TS_COMPANY_STATUS_HIST.REG_DTTM is '등록 일시'
/

comment on column TS_COMPANY_STATUS_HIST.UPDR_NO is '수정자 번호'
/

comment on column TS_COMPANY_STATUS_HIST.UPD_DTTM is '수정 일시'
/

create table TS_SITE
(
    SITE_NO                      NUMBER(19) not null
        constraint IDX_TS_SITE_PK
            primary key,
    COMPANY_NO                   NUMBER(19)
        constraint FK_COMPANY_1
            references TS_COMPANY
                on delete set null,
    SITE_STATUS_CD               VARCHAR2(2),
    DLGT_DOMAIN                  VARCHAR2(50),
    TEMP_DOMAIN                  VARCHAR2(50),
    ADD_DOMAIN1                  VARCHAR2(50),
    ADD_DOMAIN2                  VARCHAR2(50),
    ADD_DOMAIN3                  VARCHAR2(50),
    ADD_DOMAIN4                  VARCHAR2(50),
    SITE_ID                      VARCHAR2(50),
    CERTIFY_SEND_NO              VARCHAR2(20),
    SVMN_PVD_YN                  VARCHAR2(1),
    SVMN_PVD_STNDRD_CD           VARCHAR2(1),
    SVMN_PVD_RATE                NUMBER(10, 4),
    SVMN_TRUNC_STNDRD_CD         VARCHAR2(1),
    SVMN_USE_PSB_POSS_AMT        NUMBER(20, 2),
    SVMN_MIN_USE_AMT             NUMBER(20, 2),
    SVMN_MAX_USE_AMT             NUMBER(20, 2),
    SVMN_USE_UNIT_CD             VARCHAR2(1),
    SVMN_CP_DUPLT_APPLY_YN       VARCHAR2(1),
    SVMN_AUTO_EXTINCTION_YN      VARCHAR2(1),
    SVMN_USE_LIMITDAY            NUMBER,
    POINT_PVD_YN                 VARCHAR2(1),
    POINT_TRUNC_STNDRD_CD        VARCHAR2(1),
    BUY_EPLG_WRITE_POINT         NUMBER(20, 2),
    POINT_ACCU_VALID_PERIOD      NUMBER,
    TAXBILL_TYPE_CD              VARCHAR2(1),
    TAXBILL_NOPB_USE_YN          VARCHAR2(1),
    TAXBILL_ACTTRANS_USE_YN      VARCHAR2(1),
    TAXBILL_VIRTACT_USE_YN       VARCHAR2(1),
    DLVRC_INCLUSION_YN           VARCHAR2(1),
    SVMN_INCLUSION_YN            VARCHAR2(1),
    ORD_AMT_YN                   VARCHAR2(1),
    USE_GUIDE_WORDS              VARCHAR2(1000),
    SEAL_IMG_PATH                VARCHAR2(300),
    PW_FIND_USE_YN               VARCHAR2(1),
    PW_CHG_GUIDE_YN              VARCHAR2(1),
    PW_CHG_GUIDE_CYCLE           NUMBER,
    PW_CHG_NEXT_CHG_DCNT         NUMBER,
    PW_CERTIFY_IPIN_YN           VARCHAR2(1),
    PW_CERTIFY_EMAIL_YN          VARCHAR2(1),
    PW_CERTIFY_MOBILE_YN         VARCHAR2(1),
    SIMPLEPAY_USE_YN             VARCHAR2(1),
    SITE_SIMP_PAYMENT_WAY_CD     VARCHAR2(2),
    SITE_PAYMENT_WAY_CD          VARCHAR2(2),
    FRG_PAYMENT_YN               VARCHAR2(1),
    FRG_PAYMENT_STORE_ID         VARCHAR2(200),
    FRG_PAYMENT_PW               VARCHAR2(200),
    NOPBPAYMENT_USE_YN           VARCHAR2(1),
    GOODS_AUTO_DEL_USE_YN        VARCHAR2(1),
    GOODS_KEEP_DCNT              NUMBER,
    SOLDOUT_GOODS_AUTO_DEL_YN    VARCHAR2(1),
    GOODS_KEEP_QTT_LIMIT_YN      VARCHAR2(1),
    GOODS_KEEP_QTT               NUMBER,
    BASKET_PAGE_MOV_YN           VARCHAR2(1),
    STOCK_SET_YN                 VARCHAR2(1),
    AVAIL_STOCK_SALE_YN          VARCHAR2(1),
    AVAIL_STOCK_QTT              NUMBER,
    COURI_USE_YN                 VARCHAR2(1),
    DIRECT_VISIT_RECPT_YN        VARCHAR2(1),
    DEFAULT_DLVRC_TYPE_CD        VARCHAR2(1),
    DEFAULT_DLVRC                NUMBER(20, 2),
    DEFAULT_DLVR_MIN_AMT         NUMBER(20, 2),
    DEFAULT_DLVR_MIN_DLVRC       NUMBER(20, 2),
    DLVR_PAYMENT_KIND_CD         VARCHAR2(1),
    CONTS_USE_YN                 VARCHAR2(1),
    IP_CONNECT_LIMIT_USE_YN      VARCHAR2(1),
    MOUSE_RCLICK_USE_YN          VARCHAR2(1),
    DRAG_COPY_USE_YN             VARCHAR2(1),
    SVC_START_DT                 VARCHAR2(8),
    SVC_END_DT                   VARCHAR2(8),
    RETADRSS_POST                VARCHAR2(6),
    RETADRSS_ADDR_NUM            VARCHAR2(255),
    RETADRSS_ADDR_ROADNM         VARCHAR2(255),
    RETADRSS_ADDR_DTL            VARCHAR2(255),
    GA_ID                        VARCHAR2(500),
    REG_DTTM                     DATE,
    CERT_KEY                     VARCHAR2(200),
    REGR_NO                      NUMBER,
    UPD_DTTM                     DATE,
    UPDR_NO                      NUMBER,
    DORMANT_MEMBER_CANCEL_METHOD VARCHAR2(1),
    RECOM_DC_VALUE               NUMBER(20, 2),
    RECOM_PVD_RATE               NUMBER(20, 2),
    SVMN_MAX_USE_GB_CD           VARCHAR2(1),
    ALIPAY_PAYMENT_YN            VARCHAR2(1),
    ALIPAY_PAYMENT_STORE_ID      VARCHAR2(200),
    ALIPAY_PAYMENT_PW            VARCHAR2(200),
    TENPAY_PAYMENT_YN            VARCHAR2(1),
    TENPAY_PAYMENT_STORE_ID      VARCHAR2(200),
    TENPAY_PAYMENT_PW            VARCHAR2(200),
    WECHPAY_PAYMENT_YN           VARCHAR2(1),
    WECHPAY_PAYMENT_STORE_ID     VARCHAR2(200),
    WECHPAY_PAYMENT_PW           VARCHAR2(200),
    BUY_EPLG_WRITE_PM_POINT      NUMBER(20, 2),
    SVMN_LOADRATE                NUMBER(10, 2),
    APP_VERSION_IOS              VARCHAR2(50),
    APP_VERSION_ANDROID          VARCHAR2(50),
    FORCE_UPDATE_YN_ANDROID      VARCHAR2(1),
    FORCE_UPDATE_YN_IOS          VARCHAR2(1)
)
/

comment on table TS_SITE is '사이트'
/

comment on column TS_SITE.SITE_NO is '사이트 번호'
/

comment on column TS_SITE.COMPANY_NO is '업체 번호'
/

comment on column TS_SITE.SITE_STATUS_CD is '사이트 상태 코드'
/

comment on column TS_SITE.DLGT_DOMAIN is '대표 도메인'
/

comment on column TS_SITE.TEMP_DOMAIN is '임시 도메인'
/

comment on column TS_SITE.ADD_DOMAIN1 is '추가 도메인1'
/

comment on column TS_SITE.ADD_DOMAIN2 is '추가 도메인2'
/

comment on column TS_SITE.ADD_DOMAIN3 is '추가 도메인3'
/

comment on column TS_SITE.ADD_DOMAIN4 is '추가 도메인4'
/

comment on column TS_SITE.SITE_ID is '사이트 ID'
/

comment on column TS_SITE.CERTIFY_SEND_NO is '인증 발송 번호'
/

comment on column TS_SITE.SVMN_PVD_YN is '적립금 지급 여부'
/

comment on column TS_SITE.SVMN_PVD_STNDRD_CD is '적립금 지급 기준 코드'
/

comment on column TS_SITE.SVMN_PVD_RATE is '적립금 지급 율'
/

comment on column TS_SITE.SVMN_TRUNC_STNDRD_CD is '적립금 절사 기준 코드'
/

comment on column TS_SITE.SVMN_USE_PSB_POSS_AMT is '적립금 사용 가능 보유 금액'
/

comment on column TS_SITE.SVMN_MIN_USE_AMT is '적립금 최소 사용 금액'
/

comment on column TS_SITE.SVMN_MAX_USE_AMT is '적립금 최대 사용 금액'
/

comment on column TS_SITE.SVMN_USE_UNIT_CD is '적립금 사용 단위 코드'
/

comment on column TS_SITE.SVMN_CP_DUPLT_APPLY_YN is '적립금 쿠폰 중복 적용 여부'
/

comment on column TS_SITE.SVMN_AUTO_EXTINCTION_YN is '적립금 자동 소멸 여부'
/

comment on column TS_SITE.SVMN_USE_LIMITDAY is '적립금 사용 기한'
/

comment on column TS_SITE.POINT_PVD_YN is '포인트 지급 여부'
/

comment on column TS_SITE.POINT_TRUNC_STNDRD_CD is '포인트 절사 기준 코드'
/

comment on column TS_SITE.BUY_EPLG_WRITE_POINT is '구매 후기 작성 포인트'
/

comment on column TS_SITE.POINT_ACCU_VALID_PERIOD is '포인트 적립 유효 기간'
/

comment on column TS_SITE.TAXBILL_TYPE_CD is '세금계산서 유형 코드'
/

comment on column TS_SITE.TAXBILL_NOPB_USE_YN is '세금계산서 무통장 사용 여부'
/

comment on column TS_SITE.TAXBILL_ACTTRANS_USE_YN is '세금계산서 계좌이체 사용 여부'
/

comment on column TS_SITE.TAXBILL_VIRTACT_USE_YN is '세금계산서 가상계좌 사용 여부'
/

comment on column TS_SITE.DLVRC_INCLUSION_YN is '배송비 포함 여부'
/

comment on column TS_SITE.SVMN_INCLUSION_YN is '적립금 포함 여부'
/

comment on column TS_SITE.ORD_AMT_YN is '주문 금액 여부'
/

comment on column TS_SITE.USE_GUIDE_WORDS is '이용 안내 문구'
/

comment on column TS_SITE.SEAL_IMG_PATH is '인감 이미지 경로'
/

comment on column TS_SITE.PW_FIND_USE_YN is '비밀번호 찾기 사용 여부'
/

comment on column TS_SITE.PW_CHG_GUIDE_YN is '비밀번호 변경 안내 여부'
/

comment on column TS_SITE.PW_CHG_GUIDE_CYCLE is '비밀번호 변경 안내 주기'
/

comment on column TS_SITE.PW_CHG_NEXT_CHG_DCNT is '비밀번호 변경 다음 변경 일수'
/

comment on column TS_SITE.PW_CERTIFY_IPIN_YN is '비밀번호 인증 아이핀 여부'
/

comment on column TS_SITE.PW_CERTIFY_EMAIL_YN is '비밀번호 인증 이메일 여부'
/

comment on column TS_SITE.PW_CERTIFY_MOBILE_YN is '비밀번호 인증 휴대폰 여부'
/

comment on column TS_SITE.SIMPLEPAY_USE_YN is '간편결제 사용 여부'
/

comment on column TS_SITE.SITE_SIMP_PAYMENT_WAY_CD is '사이트 간편 결제 수단 코드'
/

comment on column TS_SITE.SITE_PAYMENT_WAY_CD is '사이트 결제 수단 코드'
/

comment on column TS_SITE.FRG_PAYMENT_YN is '해외 결제 여부'
/

comment on column TS_SITE.FRG_PAYMENT_STORE_ID is '해외 결제 상점 아이디'
/

comment on column TS_SITE.FRG_PAYMENT_PW is '해외 결제 비밀번호'
/

comment on column TS_SITE.NOPBPAYMENT_USE_YN is '무통장결제 사용 여부'
/

comment on column TS_SITE.GOODS_AUTO_DEL_USE_YN is '상품 자동 삭제 사용 여부'
/

comment on column TS_SITE.GOODS_KEEP_DCNT is '상품 보관 일수'
/

comment on column TS_SITE.SOLDOUT_GOODS_AUTO_DEL_YN is '품절 상품 자동 삭제 여부'
/

comment on column TS_SITE.GOODS_KEEP_QTT_LIMIT_YN is '상품 보관 수량 제한 여부'
/

comment on column TS_SITE.GOODS_KEEP_QTT is '상품 보관 수량'
/

comment on column TS_SITE.BASKET_PAGE_MOV_YN is '장바구니 페이지 이동 여부'
/

comment on column TS_SITE.STOCK_SET_YN is '재고 설정 여부'
/

comment on column TS_SITE.AVAIL_STOCK_SALE_YN is '가용 재고 판매 여부'
/

comment on column TS_SITE.AVAIL_STOCK_QTT is '가용 재고 수량'
/

comment on column TS_SITE.COURI_USE_YN is '택배 사용 여부'
/

comment on column TS_SITE.DIRECT_VISIT_RECPT_YN is '직접 방문 수령 여부'
/

comment on column TS_SITE.DEFAULT_DLVRC_TYPE_CD is '기본 배송비 유형 코드'
/

comment on column TS_SITE.DEFAULT_DLVRC is '기본 배송비'
/

comment on column TS_SITE.DEFAULT_DLVR_MIN_AMT is '기본 배송 최소 금액'
/

comment on column TS_SITE.DEFAULT_DLVR_MIN_DLVRC is '기본 배송 최소 배송비'
/

comment on column TS_SITE.DLVR_PAYMENT_KIND_CD is '배송 결제 방식 코드'
/

comment on column TS_SITE.CONTS_USE_YN is '컨텐츠 사용 여부'
/

comment on column TS_SITE.IP_CONNECT_LIMIT_USE_YN is 'IP 접속 제한 사용 여부'
/

comment on column TS_SITE.MOUSE_RCLICK_USE_YN is '마우스 우클릭 사용 여부'
/

comment on column TS_SITE.DRAG_COPY_USE_YN is 'DRAG COPY 사용 여부'
/

comment on column TS_SITE.SVC_START_DT is '서비스 시작 일자'
/

comment on column TS_SITE.SVC_END_DT is '서비스 종료 일자'
/

comment on column TS_SITE.RETADRSS_POST is '반품지 우편번호'
/

comment on column TS_SITE.RETADRSS_ADDR_NUM is '반품지 주소 지번'
/

comment on column TS_SITE.RETADRSS_ADDR_ROADNM is '반품지 주소 도로명'
/

comment on column TS_SITE.RETADRSS_ADDR_DTL is '반품지 주소 상세'
/

comment on column TS_SITE.GA_ID is 'GA_ID'
/

comment on column TS_SITE.REG_DTTM is '등록 일시'
/

comment on column TS_SITE.CERT_KEY is '인증키'
/

comment on column TS_SITE.REGR_NO is '등록자 번호'
/

comment on column TS_SITE.UPD_DTTM is '수정 일시'
/

comment on column TS_SITE.UPDR_NO is '수정자 번호'
/

comment on column TS_SITE.DORMANT_MEMBER_CANCEL_METHOD is '휴면 회원 취소 방법'
/

comment on column TS_SITE.RECOM_DC_VALUE is '추천적립구분(율/금액)'
/

comment on column TS_SITE.RECOM_PVD_RATE is '추천적립률'
/

comment on column TS_SITE.SVMN_MAX_USE_GB_CD is '적립금 최대 사용 구분 코드'
/

comment on column TS_SITE.ALIPAY_PAYMENT_YN is '알리페이 사용 여부'
/

comment on column TS_SITE.ALIPAY_PAYMENT_STORE_ID is '알리페이 상점 아이디'
/

comment on column TS_SITE.ALIPAY_PAYMENT_PW is '알리페이 결제 비밀번호'
/

comment on column TS_SITE.TENPAY_PAYMENT_YN is '텐페이 사용 여부'
/

comment on column TS_SITE.TENPAY_PAYMENT_STORE_ID is '텐페이 상점 아이디'
/

comment on column TS_SITE.TENPAY_PAYMENT_PW is '텐페이 결제 비밀번호'
/

comment on column TS_SITE.WECHPAY_PAYMENT_YN is '위챗페이 사용 여부'
/

comment on column TS_SITE.WECHPAY_PAYMENT_STORE_ID is '위챗페이 상점 아이디'
/

comment on column TS_SITE.WECHPAY_PAYMENT_PW is '위챗페이 결제 비밀번호'
/

comment on column TS_SITE.BUY_EPLG_WRITE_PM_POINT is '구매후기작성(프리미엄)포인트'
/

comment on column TS_SITE.APP_VERSION_IOS is '앱 버전 IOS'
/

comment on column TS_SITE.APP_VERSION_ANDROID is '앱 버전 ANDROID'
/

comment on column TS_SITE.FORCE_UPDATE_YN_ANDROID is '강제 업데이트 여부 ANDROID'
/

comment on column TS_SITE.FORCE_UPDATE_YN_IOS is '강제 업데이트 여부 IOS'
/

create table TG_ITEM
(
    ITEM_NO             VARCHAR2(18)  not null,
    SITE_NO             NUMBER(19)    not null
        constraint FK_ITEM_1
            references TS_SITE,
    GOODS_NO            VARCHAR2(16)  not null,
    ITEM_NM             VARCHAR2(100),
    USE_YN              VARCHAR2(1)   not null,
    ITEM_VER            NUMBER,
    SUPPLY_PRICE        NUMBER(20, 2),
    SEP_SUPPLY_PRICE_YN VARCHAR2(1),
    CUSTOMER_PRICE      NUMBER(20, 2),
    SALE_PRICE          NUMBER(20, 2) not null,
    STOCK_QTT           NUMBER        not null,
    SALE_QTT            NUMBER        not null,
    DEL_YN              VARCHAR2(1),
    DELR_NO             NUMBER,
    DEL_DTTM            DATE,
    REGR_NO             NUMBER,
    REG_DTTM            DATE,
    UPDR_NO             NUMBER,
    UPD_DTTM            DATE
)
/

comment on table TG_ITEM is '단품'
/

comment on column TG_ITEM.ITEM_NO is '단품 번호'
/

comment on column TG_ITEM.SITE_NO is '사이트 번호'
/

comment on column TG_ITEM.GOODS_NO is '상품 번호'
/

comment on column TG_ITEM.ITEM_NM is '단품 명'
/

comment on column TG_ITEM.USE_YN is '사용 여부'
/

comment on column TG_ITEM.ITEM_VER is '단품 VER'
/

comment on column TG_ITEM.SUPPLY_PRICE is '공급 가격'
/

comment on column TG_ITEM.SEP_SUPPLY_PRICE_YN is '개별 공급 가격 여부'
/

comment on column TG_ITEM.CUSTOMER_PRICE is '소비자 가격'
/

comment on column TG_ITEM.SALE_PRICE is '판매 가격'
/

comment on column TG_ITEM.STOCK_QTT is '재고 수량'
/

comment on column TG_ITEM.SALE_QTT is '판매 수량'
/

comment on column TG_ITEM.DEL_YN is '삭제 여부'
/

comment on column TG_ITEM.DELR_NO is '삭제자 번호'
/

comment on column TG_ITEM.DEL_DTTM is '삭제 일시'
/

comment on column TG_ITEM.REGR_NO is '등록자 번호'
/

comment on column TG_ITEM.REG_DTTM is '등록 일시'
/

comment on column TG_ITEM.UPDR_NO is '수정자 번호'
/

comment on column TG_ITEM.UPD_DTTM is '수정 일시'
/

create index IDX_TG_ITEM_005
    on TG_ITEM (SITE_NO)
/

create unique index IDX_TG_ITEM_PK
    on TG_ITEM (ITEM_NO)
/

create index IDX_TG_ITEM_001
    on TG_ITEM (ITEM_NO, GOODS_NO)
/

create index IDX_TG_ITEM_002
    on TG_ITEM (DEL_YN)
/

create index IDX_TG_ITEM_003
    on TG_ITEM (GOODS_NO, ITEM_NO)
/

create index IDX_TG_ITEM_004
    on TG_ITEM (GOODS_NO)
/

create index IDX_TG_ITEM_006
    on TG_ITEM (ITEM_NO, DEL_YN)
/

create index IDX_TG_ITEM_007
    on TG_ITEM (GOODS_NO, ITEM_NO, DEL_YN)
/

create index IDX_TG_ITEM_008
    on TG_ITEM (ITEM_NM, DEL_YN)
/

create trigger TG_ITEM_HIST_TRG01
    after insert or update
    on TG_ITEM
    for each row
BEGIN
    IF(INSERTING OR UPDATING)
    THEN
        MERGE INTO DAVICH_MALL.TG_ITEM_HIST
		USING DUAL
		ON (ITEM_NO = :NEW.ITEM_NO AND HIST_START_DTTM = TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISSFF4'))
		WHEN MATCHED THEN
			UPDATE SET
		    ITEM_NM  					= :NEW.ITEM_NM,
            USE_YN                     = :NEW.USE_YN,
            ITEM_VER                   = :NEW.ITEM_VER,
            SUPPLY_PRICE               = :NEW.SUPPLY_PRICE,
            SEP_SUPPLY_PRICE_YN        = :NEW.SEP_SUPPLY_PRICE_YN,
            CUSTOMER_PRICE             = :NEW.CUSTOMER_PRICE,
            SALE_PRICE                 = :NEW.SALE_PRICE,
            STOCK_QTT                  = :NEW.STOCK_QTT,
            SALE_QTT                   = :NEW.SALE_QTT,
            DEL_YN                     = :NEW.DEL_YN,
            DELR_NO                    = :NEW.DELR_NO,
            DEL_DTTM                   = :NEW.DEL_DTTM,
            REGR_NO                    = :NEW.REGR_NO,
            REG_DTTM                   = :NEW.REG_DTTM,
            UPDR_NO                    = :NEW.UPDR_NO,
            UPD_DTTM                   = :NEW.UPD_DTTM
		WHEN NOT MATCHED THEN
       INSERT (
			  ITEM_NO
            ,HIST_START_DTTM
            ,SITE_NO
            ,GOODS_NO
            ,ITEM_NM
            ,USE_YN
            ,ITEM_VER
            ,SUPPLY_PRICE
            ,SEP_SUPPLY_PRICE_YN
            ,CUSTOMER_PRICE
            ,SALE_PRICE
            ,STOCK_QTT
            ,SALE_QTT
            ,DEL_YN
            ,DELR_NO
            ,DEL_DTTM
            ,REGR_NO
            ,REG_DTTM
            ,UPDR_NO
            ,UPD_DTTM
	   )VALUES ( 
			:NEW.ITEM_NO,
            TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISSFF4'),
            :NEW.SITE_NO,
            :NEW.GOODS_NO,
            :NEW.ITEM_NM,
            :NEW.USE_YN,
            :NEW.ITEM_VER,
            :NEW.SUPPLY_PRICE,
            :NEW.SEP_SUPPLY_PRICE_YN,
            :NEW.CUSTOMER_PRICE,
            :NEW.SALE_PRICE,
            :NEW.STOCK_QTT,
            :NEW.SALE_QTT,
            :NEW.DEL_YN,
            :NEW.DELR_NO,
            :NEW.DEL_DTTM,
            :NEW.REGR_NO,
            :NEW.REG_DTTM,
            :NEW.UPDR_NO,
            :NEW.UPD_DTTM
        );
    
    END IF;
END;
/

create table TS_SITE_DISP_SET
(
    SITE_DISP_SEQ         NUMBER(19) not null,
    SITE_NO               NUMBER(19) not null
        constraint FK_SITE_DISP_SET_1
            references TS_SITE,
    DISP_TITLE            VARCHAR2(20),
    DISP_NM               VARCHAR2(50),
    USE_YN                VARCHAR2(1),
    DISP_TYPE_CD          VARCHAR2(2),
    DISP_SEQ              NUMBER,
    DISP_IMG_PATH         VARCHAR2(300),
    DISP_IMG_NM           VARCHAR2(300),
    DISP_EXHBTION_TYPE_CD VARCHAR2(1),
    REGR_NO               NUMBER,
    REG_DTTM              DATE,
    UPDR_NO               NUMBER,
    UPD_DTTM              DATE,
    MAIN_AREA_GB_CD       VARCHAR2(2),
    constraint IDX_TS_SITE_DISP_SET_PK
        primary key (SITE_DISP_SEQ, SITE_NO)
)
/

comment on table TS_SITE_DISP_SET is '사이트 전시 설정'
/

comment on column TS_SITE_DISP_SET.SITE_DISP_SEQ is '사이트 전시 순번'
/

comment on column TS_SITE_DISP_SET.SITE_NO is '사이트 번호'
/

comment on column TS_SITE_DISP_SET.DISP_TITLE is '전시 타이틀'
/

comment on column TS_SITE_DISP_SET.DISP_NM is '전시 명'
/

comment on column TS_SITE_DISP_SET.USE_YN is '사용 여부'
/

comment on column TS_SITE_DISP_SET.DISP_TYPE_CD is '전시 타입 코드'
/

comment on column TS_SITE_DISP_SET.DISP_SEQ is '전시 순번'
/

comment on column TS_SITE_DISP_SET.DISP_IMG_PATH is '전시 이미지 경로'
/

comment on column TS_SITE_DISP_SET.DISP_IMG_NM is '전시 이미지 명'
/

comment on column TS_SITE_DISP_SET.DISP_EXHBTION_TYPE_CD is '전시 진열 유형 코드'
/

comment on column TS_SITE_DISP_SET.REGR_NO is '등록자 번호'
/

comment on column TS_SITE_DISP_SET.REG_DTTM is '등록 일시'
/

comment on column TS_SITE_DISP_SET.UPDR_NO is '수정자 번호'
/

comment on column TS_SITE_DISP_SET.UPD_DTTM is '수정 일시'
/

comment on column TS_SITE_DISP_SET.MAIN_AREA_GB_CD is '메인 영역 구분 코드'
/

create table TS_SITE_DISP_GOODS
(
    SITE_DISP_SEQ NUMBER(19)   not null,
    GOODS_NO      VARCHAR2(16) not null,
    SITE_NO       NUMBER(19)   not null,
    PRIOR_RANK    NUMBER,
    REGR_NO       NUMBER,
    REG_DTTM      DATE,
    UPDR_NO       NUMBER,
    UPD_DTTM      DATE,
    constraint IDX_TS_SITE_DISP_GOODS_PK
        primary key (SITE_DISP_SEQ, GOODS_NO, SITE_NO),
    constraint FK_SITE_DISP_GOODS_1
        foreign key (SITE_DISP_SEQ, SITE_NO) references TS_SITE_DISP_SET
)
/

comment on table TS_SITE_DISP_GOODS is '사이트 전시 상품'
/

comment on column TS_SITE_DISP_GOODS.SITE_DISP_SEQ is '사이트 전시 순번'
/

comment on column TS_SITE_DISP_GOODS.GOODS_NO is '상품 번호'
/

comment on column TS_SITE_DISP_GOODS.SITE_NO is '사이트 번호'
/

comment on column TS_SITE_DISP_GOODS.PRIOR_RANK is '우선 순위'
/

comment on column TS_SITE_DISP_GOODS.REGR_NO is '등록자 번호'
/

comment on column TS_SITE_DISP_GOODS.REG_DTTM is '등록 일시'
/

comment on column TS_SITE_DISP_GOODS.UPDR_NO is '수정자 번호'
/

comment on column TS_SITE_DISP_GOODS.UPD_DTTM is '수정 일시'
/

create table TS_SITE_DTL
(
    SITE_NO                      NUMBER(19) not null
        constraint IDX_TS_SITE_DTL_PK
            primary key
        constraint FK_SITE_DTL_1
            references TS_SITE,
    SITE_NM                      VARCHAR2(50),
    SITE_TYPE_CD                 VARCHAR2(1),
    MANAGER_EMAIL                VARCHAR2(100),
    PRIVACY_DIRECTOR_NAME        VARCHAR2(50),
    PRIVACY_DIRECTOR_CONTACT     VARCHAR2(20),
    PRIVACY_DIRECTOR_EMAIL       VARCHAR2(100),
    CUST_CT_TEL_NO               VARCHAR2(20),
    CUST_CT_FAX_NO               VARCHAR2(20),
    CUST_CT_EMAIL                VARCHAR2(100),
    CUST_CT_OPER_TIME            VARCHAR2(300),
    CUST_CT_LUNCH_TIME           VARCHAR2(50),
    CUST_CT_CLOSED_INFO          VARCHAR2(300),
    TITLE                        VARCHAR2(50),
    FVC_PATH                     VARCHAR2(300),
    LOGO_PATH                    VARCHAR2(300),
    BOTTOM_LOGO_PATH             VARCHAR2(300),
    AUTO_LOGOUT_TIME             NUMBER,
    DSCRT                        VARCHAR2(300),
    SAFENO_SVC_APPLY_YN          VARCHAR2(1),
    SAFENO_SVC_APPLY_DTTM        DATE,
    XMLSITE_MAP_PATH             VARCHAR2(300),
    GOODS_DEFAULT_IMG_WIDTH      NUMBER,
    GOODS_DEFAULT_IMG_HEIGHT     NUMBER,
    GOODS_LIST_IMG_WIDTH         NUMBER,
    GOODS_LIST_IMG_HEIGHT        NUMBER,
    GOODS_DISP_IMG_TYPE_A_WIDTH  NUMBER,
    GOODS_DISP_IMG_TYPE_A_HEIGHT NUMBER,
    GOODS_DISP_IMG_TYPE_B_WIDTH  NUMBER,
    GOODS_DISP_IMG_TYPE_B_HEIGHT NUMBER,
    GOODS_DISP_IMG_TYPE_C_WIDTH  NUMBER,
    GOODS_DISP_IMG_TYPE_C_HEIGHT NUMBER,
    GOODS_DISP_IMG_TYPE_D_WIDTH  NUMBER,
    GOODS_DISP_IMG_TYPE_D_HEIGHT NUMBER,
    GOODS_DISP_IMG_TYPE_E_WIDTH  NUMBER,
    GOODS_DISP_IMG_TYPE_E_HEIGHT NUMBER,
    RECV_RJT_SVC_STARTDT         VARCHAR2(8),
    RECV_RJT_SVC_ENDDT           VARCHAR2(8),
    REGR_NO                      NUMBER,
    REG_DTTM                     DATE,
    UPDR_NO                      NUMBER,
    UPD_DTTM                     DATE,
    GOODS_DISP_IMG_TYPE_F_WIDTH  NUMBER,
    GOODS_DISP_IMG_TYPE_F_HEIGHT NUMBER,
    GOODS_DISP_IMG_TYPE_G_WIDTH  NUMBER,
    GOODS_DISP_IMG_TYPE_G_HEIGHT NUMBER,
    GOODS_DISP_IMG_TYPE_S_WIDTH  NUMBER,
    GOODS_DISP_IMG_TYPE_S_HEIGHT NUMBER,
    GOODS_DISP_IMG_TYPE_M_WIDTH  NUMBER,
    GOODS_DISP_IMG_TYPE_M_HEIGHT NUMBER,
    GOODS_DISP_IMG_TYPE_O_WIDTH  NUMBER,
    GOODS_DISP_IMG_TYPE_O_HEIGHT NUMBER,
    GOODS_WEAR_IMG_WIDTH         NUMBER,
    GOODS_WEAR_IMG_HEIGHT        NUMBER,
    GOODS_LENS_IMG_WIDTH         NUMBER,
    GOODS_LENS_IMG_HEIGHT        NUMBER,
    GOODS_DISP_IMG_TYPE_P_WIDTH  NUMBER,
    GOODS_DISP_IMG_TYPE_P_HEIGHT NUMBER,
    DEFAULT_SRCH_WORD            VARCHAR2(100)
)
/

comment on table TS_SITE_DTL is '사이트 상세'
/

comment on column TS_SITE_DTL.SITE_NO is '사이트 번호'
/

comment on column TS_SITE_DTL.SITE_NM is '사이트 명'
/

comment on column TS_SITE_DTL.SITE_TYPE_CD is '사이트 유형 코드'
/

comment on column TS_SITE_DTL.MANAGER_EMAIL is '관리자 이메일'
/

comment on column TS_SITE_DTL.PRIVACY_DIRECTOR_NAME is '개인정보 보호책임자 성명'
/

comment on column TS_SITE_DTL.PRIVACY_DIRECTOR_CONTACT is '개인정보 보호책임자 연락처'
/

comment on column TS_SITE_DTL.PRIVACY_DIRECTOR_EMAIL is '개인정보 보호책임자 이메일'
/

comment on column TS_SITE_DTL.CUST_CT_TEL_NO is '고객 센터 전화 번호'
/

comment on column TS_SITE_DTL.CUST_CT_FAX_NO is '고객 센터 팩스 번호'
/

comment on column TS_SITE_DTL.CUST_CT_EMAIL is '고객 센터 이메일'
/

comment on column TS_SITE_DTL.CUST_CT_OPER_TIME is '고객 센터 운영 시간'
/

comment on column TS_SITE_DTL.CUST_CT_LUNCH_TIME is '고객 센터 점심 시간'
/

comment on column TS_SITE_DTL.CUST_CT_CLOSED_INFO is '고객 센터 휴무 정보'
/

comment on column TS_SITE_DTL.TITLE is '타이틀'
/

comment on column TS_SITE_DTL.FVC_PATH is '파비콘 경로'
/

comment on column TS_SITE_DTL.LOGO_PATH is '로고 경로'
/

comment on column TS_SITE_DTL.BOTTOM_LOGO_PATH is '하단 로고 경로'
/

comment on column TS_SITE_DTL.AUTO_LOGOUT_TIME is '자동 LOGOUT 시간'
/

comment on column TS_SITE_DTL.DSCRT is '설명'
/

comment on column TS_SITE_DTL.SAFENO_SVC_APPLY_YN is '안심번호 서비스 신청 여부'
/

comment on column TS_SITE_DTL.SAFENO_SVC_APPLY_DTTM is '안심번호 서비스 신청 일시'
/

comment on column TS_SITE_DTL.XMLSITE_MAP_PATH is 'XML사이트 맵 경로'
/

comment on column TS_SITE_DTL.GOODS_DEFAULT_IMG_WIDTH is '상품 기본 이미지 가로'
/

comment on column TS_SITE_DTL.GOODS_DEFAULT_IMG_HEIGHT is '상품 기본 이미지 세로'
/

comment on column TS_SITE_DTL.GOODS_LIST_IMG_WIDTH is '상품 리스트 이미지 가로'
/

comment on column TS_SITE_DTL.GOODS_LIST_IMG_HEIGHT is '상품 리스트 이미지 세로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_A_WIDTH is '상품 전시 이미지 타입 A 가로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_A_HEIGHT is '상품 전시 이미지 타입 A 세로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_B_WIDTH is '상품 전시 이미지 타입 B 가로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_B_HEIGHT is '상품 전시 이미지 타입 B 세로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_C_WIDTH is '상품 전시 이미지 타입 C 가로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_C_HEIGHT is '상품 전시 이미지 타입 C 세로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_D_WIDTH is '상품 전시 이미지 타입 D 가로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_D_HEIGHT is '상품 전시 이미지 타입 D 세로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_E_WIDTH is '상품 전시 이미지 타입 E 가로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_E_HEIGHT is '상품 전시 이미지 타입 E 세로'
/

comment on column TS_SITE_DTL.RECV_RJT_SVC_STARTDT is '수신 거부 서비스 시작일자'
/

comment on column TS_SITE_DTL.RECV_RJT_SVC_ENDDT is '수신 거부 서비스 종료일자'
/

comment on column TS_SITE_DTL.REGR_NO is '등록자 번호'
/

comment on column TS_SITE_DTL.REG_DTTM is '등록 일시'
/

comment on column TS_SITE_DTL.UPDR_NO is '수정자 번호'
/

comment on column TS_SITE_DTL.UPD_DTTM is '수정 일시'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_F_WIDTH is '상품 전시 이미지 타입 F 가로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_F_HEIGHT is '상품 전시 이미지 타입 F 세로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_G_WIDTH is '상품 전시 이미지 타입 G 가로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_G_HEIGHT is '상품 전시 이미지 타입 G 세로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_S_WIDTH is '상품 전시 이미지 타입 S 가로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_S_HEIGHT is '상품 전시 이미지 타입 S 세로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_M_WIDTH is '상품 전시 이미지 타입 M 가로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_M_HEIGHT is '상품 전시 이미지 타입 M 세로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_O_WIDTH is '상품 전시 이미지 타입 O 가로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_O_HEIGHT is '상품 전시 이미지 타입 O 세로'
/

comment on column TS_SITE_DTL.GOODS_WEAR_IMG_WIDTH is '상품 착용샷 이미지 가로'
/

comment on column TS_SITE_DTL.GOODS_WEAR_IMG_HEIGHT is '상품 착용샷 이미지 세로'
/

comment on column TS_SITE_DTL.GOODS_LENS_IMG_WIDTH is '상품 렌즈 이미지 가로'
/

comment on column TS_SITE_DTL.GOODS_LENS_IMG_HEIGHT is '상품 렌즈 이미지 세로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_P_WIDTH is '상품 전시 이미지 타입 P 가로'
/

comment on column TS_SITE_DTL.GOODS_DISP_IMG_TYPE_P_HEIGHT is '상품 전시 이미지 타입 P 세로'
/

comment on column TS_SITE_DTL.DEFAULT_SRCH_WORD is '기본 검색어'
/

create table TS_SITE_HIST
(
    SITE_NO                      NUMBER(19) not null,
    HIST_START_DTTM              DATE       not null,
    COMPANY_NO                   NUMBER(19),
    SITE_STATUS_CD               VARCHAR2(2),
    DLGT_DOMAIN                  VARCHAR2(50),
    TEMP_DOMAIN                  VARCHAR2(50),
    ADD_DOMAIN1                  VARCHAR2(50),
    ADD_DOMAIN2                  VARCHAR2(50),
    ADD_DOMAIN3                  VARCHAR2(50),
    ADD_DOMAIN4                  VARCHAR2(50),
    SITE_ID                      VARCHAR2(50),
    CERTIFY_SEND_NO              VARCHAR2(20),
    SVMN_PVD_YN                  VARCHAR2(1),
    SVMN_PVD_STNDRD_CD           VARCHAR2(1),
    SVMN_PVD_RATE                NUMBER(10, 4),
    SVMN_TRUNC_STNDRD_CD         VARCHAR2(1),
    SVMN_USE_PSB_POSS_AMT        NUMBER(20, 2),
    SVMN_MIN_USE_AMT             NUMBER(20, 2),
    SVMN_MAX_USE_AMT             NUMBER(20, 2),
    SVMN_USE_UNIT_CD             VARCHAR2(1),
    SVMN_CP_DUPLT_APPLY_YN       VARCHAR2(1),
    SVMN_AUTO_EXTINCTION_YN      VARCHAR2(1),
    SVMN_USE_LIMITDAY            NUMBER,
    POINT_PVD_YN                 VARCHAR2(1),
    POINT_TRUNC_STNDRD_CD        VARCHAR2(1),
    BUY_EPLG_WRITE_POINT         NUMBER(20, 2),
    POINT_ACCU_VALID_PERIOD      NUMBER,
    TAXBILL_TYPE_CD              VARCHAR2(1),
    TAXBILL_NOPB_USE_YN          VARCHAR2(1),
    TAXBILL_ACTTRANS_USE_YN      VARCHAR2(1),
    TAXBILL_VIRTACT_USE_YN       VARCHAR2(1),
    DLVRC_INCLUSION_YN           VARCHAR2(1),
    SVMN_INCLUSION_YN            VARCHAR2(1),
    ORD_AMT_YN                   VARCHAR2(1),
    USE_GUIDE_WORDS              VARCHAR2(1000),
    SEAL_IMG_PATH                VARCHAR2(300),
    PW_FIND_USE_YN               VARCHAR2(1),
    PW_CHG_GUIDE_YN              VARCHAR2(1),
    PW_CHG_GUIDE_CYCLE           NUMBER,
    PW_CHG_NEXT_CHG_DCNT         NUMBER,
    PW_CERTIFY_IPIN_YN           VARCHAR2(1),
    PW_CERTIFY_EMAIL_YN          VARCHAR2(1),
    PW_CERTIFY_MOBILE_YN         VARCHAR2(1),
    SIMPLEPAY_USE_YN             VARCHAR2(1),
    SITE_SIMP_PAYMENT_WAY_CD     VARCHAR2(2),
    SITE_PAYMENT_WAY_CD          VARCHAR2(2),
    FRG_PAYMENT_YN               VARCHAR2(1),
    FRG_PAYMENT_STORE_ID         VARCHAR2(200),
    FRG_PAYMENT_PW               VARCHAR2(200),
    NOPBPAYMENT_USE_YN           VARCHAR2(1),
    GOODS_AUTO_DEL_USE_YN        VARCHAR2(1),
    GOODS_KEEP_DCNT              NUMBER,
    SOLDOUT_GOODS_AUTO_DEL_YN    VARCHAR2(1),
    GOODS_KEEP_QTT_LIMIT_YN      VARCHAR2(1),
    GOODS_KEEP_QTT               NUMBER,
    BASKET_PAGE_MOV_YN           VARCHAR2(1),
    STOCK_SET_YN                 VARCHAR2(1),
    AVAIL_STOCK_SALE_YN          VARCHAR2(1),
    AVAIL_STOCK_QTT              NUMBER,
    COURI_USE_YN                 VARCHAR2(1),
    DIRECT_VISIT_RECPT_YN        VARCHAR2(1),
    DEFAULT_DLVRC_TYPE_CD        VARCHAR2(1),
    DEFAULT_DLVRC                NUMBER(20, 2),
    DEFAULT_DLVR_MIN_AMT         NUMBER(20, 2),
    DEFAULT_DLVR_MIN_DLVRC       NUMBER(20, 2),
    DLVR_PAYMENT_KIND_CD         VARCHAR2(1),
    CONTS_USE_YN                 VARCHAR2(1),
    IP_CONNECT_LIMIT_USE_YN      VARCHAR2(1),
    MOUSE_RCLICK_USE_YN          VARCHAR2(1),
    DRAG_COPY_USE_YN             VARCHAR2(1),
    SVC_START_DT                 VARCHAR2(8),
    SVC_END_DT                   VARCHAR2(8),
    RETADRSS_POST                VARCHAR2(6),
    RETADRSS_ADDR_NUM            VARCHAR2(255),
    RETADRSS_ADDR_ROADNM         VARCHAR2(255),
    RETADRSS_ADDR_DTL            VARCHAR2(255),
    GA_ID                        VARCHAR2(500),
    REG_DTTM                     DATE,
    CERT_KEY                     VARCHAR2(200),
    REGR_NO                      NUMBER,
    UPD_DTTM                     DATE,
    UPDR_NO                      NUMBER,
    DORMANT_MEMBER_CANCEL_METHOD VARCHAR2(1),
    constraint IDX_TS_SITE_HIST_PK
        primary key (SITE_NO, HIST_START_DTTM)
)
/

comment on table TS_SITE_HIST is '사이트 이력'
/

comment on column TS_SITE_HIST.SITE_NO is '사이트 번호'
/

comment on column TS_SITE_HIST.HIST_START_DTTM is '이력 시작 일시'
/

comment on column TS_SITE_HIST.COMPANY_NO is '업체 번호'
/

comment on column TS_SITE_HIST.SITE_STATUS_CD is '사이트 상태 코드'
/

comment on column TS_SITE_HIST.DLGT_DOMAIN is '대표 도메인'
/

comment on column TS_SITE_HIST.TEMP_DOMAIN is '임시 도메인'
/

comment on column TS_SITE_HIST.ADD_DOMAIN1 is '추가 도메인1'
/

comment on column TS_SITE_HIST.ADD_DOMAIN2 is '추가 도메인2'
/

comment on column TS_SITE_HIST.ADD_DOMAIN3 is '추가 도메인3'
/

comment on column TS_SITE_HIST.ADD_DOMAIN4 is '추가 도메인4'
/

comment on column TS_SITE_HIST.SITE_ID is '사이트 ID'
/

comment on column TS_SITE_HIST.CERTIFY_SEND_NO is '인증 발송 번호'
/

comment on column TS_SITE_HIST.SVMN_PVD_YN is '적립금 지급 여부'
/

comment on column TS_SITE_HIST.SVMN_PVD_STNDRD_CD is '적립금 지급 기준 코드'
/

comment on column TS_SITE_HIST.SVMN_PVD_RATE is '적립금 지급 율'
/

comment on column TS_SITE_HIST.SVMN_TRUNC_STNDRD_CD is '적립금 절사 기준 코드'
/

comment on column TS_SITE_HIST.SVMN_USE_PSB_POSS_AMT is '적립금 사용 가능 보유 금액'
/

comment on column TS_SITE_HIST.SVMN_MIN_USE_AMT is '적립금 최소 사용 금액'
/

comment on column TS_SITE_HIST.SVMN_MAX_USE_AMT is '적립금 최대 사용 금액'
/

comment on column TS_SITE_HIST.SVMN_USE_UNIT_CD is '적립금 사용 단위 코드'
/

comment on column TS_SITE_HIST.SVMN_CP_DUPLT_APPLY_YN is '적립금 쿠폰 중복 적용 여부'
/

comment on column TS_SITE_HIST.SVMN_AUTO_EXTINCTION_YN is '적립금 자동 소멸 여부'
/

comment on column TS_SITE_HIST.SVMN_USE_LIMITDAY is '적립금 사용 기한'
/

comment on column TS_SITE_HIST.POINT_PVD_YN is '포인트 지급 여부'
/

comment on column TS_SITE_HIST.POINT_TRUNC_STNDRD_CD is '포인트 절사 기준 코드'
/

comment on column TS_SITE_HIST.BUY_EPLG_WRITE_POINT is '구매 후기 작성 포인트'
/

comment on column TS_SITE_HIST.POINT_ACCU_VALID_PERIOD is '포인트 적립 유효 기간'
/

comment on column TS_SITE_HIST.TAXBILL_TYPE_CD is '세금계산서 유형 코드'
/

comment on column TS_SITE_HIST.TAXBILL_NOPB_USE_YN is '세금계산서 무통장 사용 여부'
/

comment on column TS_SITE_HIST.TAXBILL_ACTTRANS_USE_YN is '세금계산서 계좌이체 사용 여부'
/

comment on column TS_SITE_HIST.TAXBILL_VIRTACT_USE_YN is '세금계산서 가상계좌 사용 여부'
/

comment on column TS_SITE_HIST.DLVRC_INCLUSION_YN is '배송비 포함 여부'
/

comment on column TS_SITE_HIST.SVMN_INCLUSION_YN is '적립금 포함 여부'
/

comment on column TS_SITE_HIST.ORD_AMT_YN is '주문 금액 여부'
/

comment on column TS_SITE_HIST.USE_GUIDE_WORDS is '이용 안내 문구'
/

comment on column TS_SITE_HIST.SEAL_IMG_PATH is '인감 이미지 경로'
/

comment on column TS_SITE_HIST.PW_FIND_USE_YN is '비밀번호 찾기 사용 여부'
/

comment on column TS_SITE_HIST.PW_CHG_GUIDE_YN is '비밀번호 변경 안내 여부'
/

comment on column TS_SITE_HIST.PW_CHG_GUIDE_CYCLE is '비밀번호 변경 안내 주기'
/

comment on column TS_SITE_HIST.PW_CHG_NEXT_CHG_DCNT is '비밀번호 변경 다음 변경 일수'
/

comment on column TS_SITE_HIST.PW_CERTIFY_IPIN_YN is '비밀번호 인증 아이핀 여부'
/

comment on column TS_SITE_HIST.PW_CERTIFY_EMAIL_YN is '비밀번호 인증 이메일 여부'
/

comment on column TS_SITE_HIST.PW_CERTIFY_MOBILE_YN is '비밀번호 인증 휴대폰 여부'
/

comment on column TS_SITE_HIST.SIMPLEPAY_USE_YN is '간편결제 사용 여부'
/

comment on column TS_SITE_HIST.SITE_SIMP_PAYMENT_WAY_CD is '사이트 간편 결제 수단 코드'
/

comment on column TS_SITE_HIST.SITE_PAYMENT_WAY_CD is '사이트 결제 수단 코드'
/

comment on column TS_SITE_HIST.FRG_PAYMENT_YN is '해외 결제 여부'
/

comment on column TS_SITE_HIST.FRG_PAYMENT_STORE_ID is '해외 결제 상점 아이디'
/

comment on column TS_SITE_HIST.FRG_PAYMENT_PW is '해외 결제 비밀번호'
/

comment on column TS_SITE_HIST.NOPBPAYMENT_USE_YN is '무통장결제 사용 여부'
/

comment on column TS_SITE_HIST.GOODS_AUTO_DEL_USE_YN is '상품 자동 삭제 사용 여부'
/

comment on column TS_SITE_HIST.GOODS_KEEP_DCNT is '상품 보관 일수'
/

comment on column TS_SITE_HIST.SOLDOUT_GOODS_AUTO_DEL_YN is '품절 상품 자동 삭제 여부'
/

comment on column TS_SITE_HIST.GOODS_KEEP_QTT_LIMIT_YN is '상품 보관 수량 제한 여부'
/

comment on column TS_SITE_HIST.GOODS_KEEP_QTT is '상품 보관 수량'
/

comment on column TS_SITE_HIST.BASKET_PAGE_MOV_YN is '장바구니 페이지 이동 여부'
/

comment on column TS_SITE_HIST.STOCK_SET_YN is '재고 설정 여부'
/

comment on column TS_SITE_HIST.AVAIL_STOCK_SALE_YN is '가용 재고 판매 여부'
/

comment on column TS_SITE_HIST.AVAIL_STOCK_QTT is '가용 재고 수량'
/

comment on column TS_SITE_HIST.COURI_USE_YN is '택배 사용 여부'
/

comment on column TS_SITE_HIST.DIRECT_VISIT_RECPT_YN is '직접 방문 수령 여부'
/

comment on column TS_SITE_HIST.DEFAULT_DLVRC_TYPE_CD is '기본 배송비 유형 코드'
/

comment on column TS_SITE_HIST.DEFAULT_DLVRC is '기본 배송비'
/

comment on column TS_SITE_HIST.DEFAULT_DLVR_MIN_AMT is '기본 배송 최소 금액'
/

comment on column TS_SITE_HIST.DEFAULT_DLVR_MIN_DLVRC is '기본 배송 최소 배송비'
/

comment on column TS_SITE_HIST.DLVR_PAYMENT_KIND_CD is '배송 결제 방식 코드'
/

comment on column TS_SITE_HIST.CONTS_USE_YN is '컨텐츠 사용 여부'
/

comment on column TS_SITE_HIST.IP_CONNECT_LIMIT_USE_YN is 'IP 접속 제한 사용 여부'
/

comment on column TS_SITE_HIST.MOUSE_RCLICK_USE_YN is '마우스 우클릭 사용 여부'
/

comment on column TS_SITE_HIST.DRAG_COPY_USE_YN is 'DRAG COPY 사용 여부'
/

comment on column TS_SITE_HIST.SVC_START_DT is '서비스 시작 일자'
/

comment on column TS_SITE_HIST.SVC_END_DT is '서비스 종료 일자'
/

comment on column TS_SITE_HIST.RETADRSS_POST is '반품지 우편번호'
/

comment on column TS_SITE_HIST.RETADRSS_ADDR_NUM is '반품지 주소 지번'
/

comment on column TS_SITE_HIST.RETADRSS_ADDR_ROADNM is '반품지 주소 도로명'
/

comment on column TS_SITE_HIST.RETADRSS_ADDR_DTL is '반품지 주소 상세'
/

comment on column TS_SITE_HIST.GA_ID is 'GA_ID'
/

comment on column TS_SITE_HIST.REG_DTTM is '등록 일시'
/

comment on column TS_SITE_HIST.CERT_KEY is '인증키'
/

comment on column TS_SITE_HIST.REGR_NO is '등록자 번호'
/

comment on column TS_SITE_HIST.UPD_DTTM is '수정 일시'
/

comment on column TS_SITE_HIST.UPDR_NO is '수정자 번호'
/

comment on column TS_SITE_HIST.DORMANT_MEMBER_CANCEL_METHOD is '휴면 회원 취소 방법'
/

create table TS_SNS_OUTSIDE_LINK
(
    SITE_NO         NUMBER(19)  not null
        constraint FK_SNS_OUT_SIDE_LINK_1
            references TS_SITE_DTL,
    OUTSIDE_LINK_CD VARCHAR2(2) not null,
    LINK_USE_YN     VARCHAR2(1),
    APP_ID          VARCHAR2(100),
    APP_SECRET      VARCHAR2(100),
    APP_NAMESPACE   VARCHAR2(100),
    SPMALL_NM       VARCHAR2(50),
    DOMAIN_REG      VARCHAR2(50),
    SPMALL_LOGO_IMG VARCHAR2(300),
    JAVASCRIPT_KEY  VARCHAR2(100),
    KOREAN_DOMAIN   VARCHAR2(50),
    CHG_RESULT      VARCHAR2(50),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    LINK_OPER_YN    VARCHAR2(1),
    constraint IDX_TS_SNS_OUTSIDE_LINK_PK
        primary key (SITE_NO, OUTSIDE_LINK_CD)
)
/

comment on table TS_SNS_OUTSIDE_LINK is 'SNS 외부 연동'
/

comment on column TS_SNS_OUTSIDE_LINK.SITE_NO is '사이트 번호'
/

comment on column TS_SNS_OUTSIDE_LINK.OUTSIDE_LINK_CD is '외부 연동 코드'
/

comment on column TS_SNS_OUTSIDE_LINK.LINK_USE_YN is '연동 사용 여부'
/

comment on column TS_SNS_OUTSIDE_LINK.APP_ID is 'APP_ID'
/

comment on column TS_SNS_OUTSIDE_LINK.APP_SECRET is 'APP_SECRET'
/

comment on column TS_SNS_OUTSIDE_LINK.APP_NAMESPACE is 'APP_NAMESPACE'
/

comment on column TS_SNS_OUTSIDE_LINK.SPMALL_NM is '쇼핑몰 명'
/

comment on column TS_SNS_OUTSIDE_LINK.DOMAIN_REG is '도메인 등록'
/

comment on column TS_SNS_OUTSIDE_LINK.SPMALL_LOGO_IMG is '쇼핑몰 로고 이미지'
/

comment on column TS_SNS_OUTSIDE_LINK.JAVASCRIPT_KEY is 'Javascript Key'
/

comment on column TS_SNS_OUTSIDE_LINK.KOREAN_DOMAIN is '한글 도메인'
/

comment on column TS_SNS_OUTSIDE_LINK.CHG_RESULT is '변경 결과'
/

comment on column TS_SNS_OUTSIDE_LINK.REGR_NO is '등록자 번호'
/

comment on column TS_SNS_OUTSIDE_LINK.REG_DTTM is '등록 일시'
/

comment on column TS_SNS_OUTSIDE_LINK.UPDR_NO is '수정자 번호'
/

comment on column TS_SNS_OUTSIDE_LINK.UPD_DTTM is '수정 일시'
/

comment on column TS_SNS_OUTSIDE_LINK.LINK_OPER_YN is '연동 운영 여부'
/

create table TT_CTG_GOODS_ANLS
(
    SITE_NO         NUMBER(19)  not null,
    YR              VARCHAR2(4) not null,
    MM              VARCHAR2(2) not null,
    DT              VARCHAR2(2) not null,
    LARGE_CLSF      NUMBER(19)  not null,
    MEDIUM_CLSF     NUMBER(19)  not null,
    PC_SALE_QTT     NUMBER,
    PC_SALE_AMT     NUMBER(20, 2),
    MOBILE_SALE_QTT NUMBER,
    MOBILE_SALE_AMT NUMBER(20, 2),
    REVIEW_CNT      NUMBER,
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    constraint IDX_TT_CTG_GOODS_ANLS_PK
        primary key (SITE_NO, YR, MM, DT, LARGE_CLSF, MEDIUM_CLSF)
)
/

comment on table TT_CTG_GOODS_ANLS is '카테고리 상품 분석'
/

comment on column TT_CTG_GOODS_ANLS.SITE_NO is '사이트 번호'
/

comment on column TT_CTG_GOODS_ANLS.YR is '년도'
/

comment on column TT_CTG_GOODS_ANLS.MM is '월'
/

comment on column TT_CTG_GOODS_ANLS.DT is '일자'
/

comment on column TT_CTG_GOODS_ANLS.LARGE_CLSF is '대 분류'
/

comment on column TT_CTG_GOODS_ANLS.MEDIUM_CLSF is '중 분류'
/

comment on column TT_CTG_GOODS_ANLS.PC_SALE_QTT is 'PC 판매 수량'
/

comment on column TT_CTG_GOODS_ANLS.PC_SALE_AMT is 'PC 판매 금액'
/

comment on column TT_CTG_GOODS_ANLS.MOBILE_SALE_QTT is '모바일 판매 수량'
/

comment on column TT_CTG_GOODS_ANLS.MOBILE_SALE_AMT is '모바일 판매 금액'
/

comment on column TT_CTG_GOODS_ANLS.REVIEW_CNT is '리뷰 건수'
/

comment on column TT_CTG_GOODS_ANLS.REGR_NO is '등록자 번호'
/

comment on column TT_CTG_GOODS_ANLS.REG_DTTM is '등록 일시'
/

comment on column TT_CTG_GOODS_ANLS.UPDR_NO is '수정자 번호'
/

comment on column TT_CTG_GOODS_ANLS.UPD_DTTM is '수정 일시'
/

create table TT_GOODS_ANLS
(
    SITE_NO           NUMBER(19)   not null,
    YR                VARCHAR2(4)  not null,
    MM                VARCHAR2(2)  not null,
    DT                VARCHAR2(2)  not null,
    ANLS_GB_CD        VARCHAR2(1)  not null,
    EQPM_GB_CD        VARCHAR2(2)  not null,
    GOODS_NO          VARCHAR2(16) not null,
    SALE_QTT          NUMBER,
    SALE_AMT          NUMBER(20, 2),
    STOCK_QTT         NUMBER,
    AVAIL_QTT         NUMBER,
    BASKET_QTT        NUMBER,
    BASKET_CNT        NUMBER,
    BASKET_MEMBER_CNT NUMBER,
    FAV_GOODS_QTT     NUMBER,
    REVIEW_CNT        NUMBER,
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE,
    constraint IDX_TT_GOODS_ANLS_PK
        primary key (SITE_NO, YR, MM, DT, ANLS_GB_CD, EQPM_GB_CD, GOODS_NO)
)
/

comment on table TT_GOODS_ANLS is '상품 분석'
/

comment on column TT_GOODS_ANLS.SITE_NO is '사이트 번호'
/

comment on column TT_GOODS_ANLS.YR is '년도'
/

comment on column TT_GOODS_ANLS.MM is '월'
/

comment on column TT_GOODS_ANLS.DT is '일자'
/

comment on column TT_GOODS_ANLS.ANLS_GB_CD is '분석 구분 코드'
/

comment on column TT_GOODS_ANLS.EQPM_GB_CD is '기기 구분 코드'
/

comment on column TT_GOODS_ANLS.GOODS_NO is '상품 번호'
/

comment on column TT_GOODS_ANLS.SALE_QTT is '판매 수량'
/

comment on column TT_GOODS_ANLS.SALE_AMT is '판매 금액'
/

comment on column TT_GOODS_ANLS.STOCK_QTT is '재고 수량'
/

comment on column TT_GOODS_ANLS.AVAIL_QTT is '가용 수량'
/

comment on column TT_GOODS_ANLS.BASKET_QTT is '장바구니 수량'
/

comment on column TT_GOODS_ANLS.BASKET_CNT is '장바구니 수'
/

comment on column TT_GOODS_ANLS.BASKET_MEMBER_CNT is '장바구니 회원 수'
/

comment on column TT_GOODS_ANLS.FAV_GOODS_QTT is '관심 상품 수량'
/

comment on column TT_GOODS_ANLS.REVIEW_CNT is '리뷰 건수'
/

comment on column TT_GOODS_ANLS.REGR_NO is '등록자 번호'
/

comment on column TT_GOODS_ANLS.REG_DTTM is '등록 일시'
/

comment on column TT_GOODS_ANLS.UPDR_NO is '수정자 번호'
/

comment on column TT_GOODS_ANLS.UPD_DTTM is '수정 일시'
/

create table TT_MEMBER_SVMN_ANLS
(
    SITE_NO         NUMBER(19)                not null,
    YR              VARCHAR2(4)               not null,
    MM              VARCHAR2(2)               not null,
    DT              VARCHAR2(2)               not null,
    MEMBER_ID       VARCHAR2(50) default NULL not null,
    PVD_SVMN_CNT    NUMBER,
    PVD_SVMN        NUMBER(20, 2),
    USE_SVMN_CNT    NUMBER,
    USE_SVMN        NUMBER(20, 2),
    CANCEL_SVMN_CNT NUMBER,
    CANCEL_SVMN     NUMBER(20, 2),
    REMAIN_SVMN     NUMBER(20, 2),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    constraint IDX_TT_MEMBER_SVMN_ANLS_PK
        primary key (SITE_NO, YR, MM, DT, MEMBER_ID)
)
/

comment on table TT_MEMBER_SVMN_ANLS is '회원 적립금 분석'
/

comment on column TT_MEMBER_SVMN_ANLS.SITE_NO is '사이트 번호'
/

comment on column TT_MEMBER_SVMN_ANLS.YR is '년도'
/

comment on column TT_MEMBER_SVMN_ANLS.MM is '월'
/

comment on column TT_MEMBER_SVMN_ANLS.DT is '일자'
/

comment on column TT_MEMBER_SVMN_ANLS.MEMBER_ID is '회원 ID'
/

comment on column TT_MEMBER_SVMN_ANLS.PVD_SVMN_CNT is '지급 적립금 건수'
/

comment on column TT_MEMBER_SVMN_ANLS.PVD_SVMN is '지급 적립금'
/

comment on column TT_MEMBER_SVMN_ANLS.USE_SVMN_CNT is '사용 적립금 건수'
/

comment on column TT_MEMBER_SVMN_ANLS.USE_SVMN is '사용 적립금'
/

comment on column TT_MEMBER_SVMN_ANLS.CANCEL_SVMN_CNT is '취소 적립금 건수'
/

comment on column TT_MEMBER_SVMN_ANLS.CANCEL_SVMN is '취소 적립금'
/

comment on column TT_MEMBER_SVMN_ANLS.REMAIN_SVMN is '잔여 적립금'
/

comment on column TT_MEMBER_SVMN_ANLS.REGR_NO is '등록자 번호'
/

comment on column TT_MEMBER_SVMN_ANLS.REG_DTTM is '등록 일시'
/

comment on column TT_MEMBER_SVMN_ANLS.UPDR_NO is '수정자 번호'
/

comment on column TT_MEMBER_SVMN_ANLS.UPD_DTTM is '수정 일시'
/

create table TT_NW_MEMBER_ANLS
(
    SITE_NO         NUMBER(19)  not null,
    YR              VARCHAR2(4) not null,
    MM              VARCHAR2(2) not null,
    DT              VARCHAR2(2) not null,
    HR              VARCHAR2(2) not null,
    NW_JONR_CNT     NUMBER,
    PC_JONR_CNT     NUMBER,
    MOBILE_JONR_CNT NUMBER,
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    constraint IDX_TT_NW_MEMBER_ANLS_PK
        primary key (SITE_NO, YR, MM, DT, HR)
)
/

comment on table TT_NW_MEMBER_ANLS is '신규 회원 분석'
/

comment on column TT_NW_MEMBER_ANLS.SITE_NO is '사이트 번호'
/

comment on column TT_NW_MEMBER_ANLS.YR is '년도'
/

comment on column TT_NW_MEMBER_ANLS.MM is '월'
/

comment on column TT_NW_MEMBER_ANLS.DT is '일자'
/

comment on column TT_NW_MEMBER_ANLS.HR is '시'
/

comment on column TT_NW_MEMBER_ANLS.NW_JONR_CNT is '신규 가입자 수'
/

comment on column TT_NW_MEMBER_ANLS.PC_JONR_CNT is 'PC 가입자 수'
/

comment on column TT_NW_MEMBER_ANLS.MOBILE_JONR_CNT is '모바일 가입자 수'
/

comment on column TT_NW_MEMBER_ANLS.REGR_NO is '등록자 번호'
/

comment on column TT_NW_MEMBER_ANLS.REG_DTTM is '등록 일시'
/

comment on column TT_NW_MEMBER_ANLS.UPDR_NO is '수정자 번호'
/

comment on column TT_NW_MEMBER_ANLS.UPD_DTTM is '수정 일시'
/

create table TT_ORD_STTCS
(
    SITE_NO         NUMBER(19)  not null,
    YR              VARCHAR2(4) not null,
    MM              VARCHAR2(2) not null,
    DT              VARCHAR2(2) not null,
    HR              VARCHAR2(2) not null,
    PC_BUYR_CNT     NUMBER,
    PC_BUY_CNT      NUMBER,
    PC_SALE_AMT     NUMBER(20, 2),
    MOBILE_BUYR_CNT NUMBER,
    MOBILE_BUY_CNT  NUMBER,
    MOBILE_SALE_AMT NUMBER(20, 2),
    MANUAL_BUYR_CNT NUMBER,
    MANUAL_BUY_CNT  NUMBER,
    MANUAL_SALE_AMT NUMBER(20, 2),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    constraint IDX_TT_ORD_STTCS_PK
        primary key (SITE_NO, YR, MM, DT, HR)
)
/

comment on table TT_ORD_STTCS is '주문 통계'
/

comment on column TT_ORD_STTCS.SITE_NO is '사이트 번호'
/

comment on column TT_ORD_STTCS.YR is '년도'
/

comment on column TT_ORD_STTCS.MM is '월'
/

comment on column TT_ORD_STTCS.DT is '일자'
/

comment on column TT_ORD_STTCS.HR is '시'
/

comment on column TT_ORD_STTCS.PC_BUYR_CNT is 'PC 구매자 수'
/

comment on column TT_ORD_STTCS.PC_BUY_CNT is 'PC 구매 건수'
/

comment on column TT_ORD_STTCS.PC_SALE_AMT is 'PC 판매 금액'
/

comment on column TT_ORD_STTCS.MOBILE_BUYR_CNT is '모바일 구매자 수'
/

comment on column TT_ORD_STTCS.MOBILE_BUY_CNT is '모바일 구매 건수'
/

comment on column TT_ORD_STTCS.MOBILE_SALE_AMT is '모바일 판매 금액'
/

comment on column TT_ORD_STTCS.MANUAL_BUYR_CNT is '수기 구매자 수'
/

comment on column TT_ORD_STTCS.MANUAL_BUY_CNT is '수기 구매 건수'
/

comment on column TT_ORD_STTCS.MANUAL_SALE_AMT is '수기 판매 금액'
/

comment on column TT_ORD_STTCS.REGR_NO is '등록자 번호'
/

comment on column TT_ORD_STTCS.REG_DTTM is '등록 일시'
/

comment on column TT_ORD_STTCS.UPDR_NO is '수정자 번호'
/

comment on column TT_ORD_STTCS.UPD_DTTM is '수정 일시'
/

create table TT_SALES_STTCS
(
    SITE_NO            NUMBER(19)  not null,
    YR                 VARCHAR2(4) not null,
    MM                 VARCHAR2(2) not null,
    DT                 VARCHAR2(2) not null,
    EQPM_GB_CD         VARCHAR2(2) not null,
    HR                 VARCHAR2(2) not null,
    PAYMENT_CNT        NUMBER,
    PAYMENT_AMT        NUMBER(20, 2),
    CP_DC_AMT          NUMBER(20, 2),
    ETC_DC_AMT         NUMBER(20, 2),
    REAL_PAYMENT_AMT   NUMBER(20, 2),
    RETURN_REFUND_AMT  NUMBER(20, 2),
    CANCEL_REFUND_AMT  NUMBER(20, 2),
    REFUND_AMT         NUMBER(20, 2),
    SALES_AMT          NUMBER(20, 2),
    SVMN_PAYMENT_CNT   NUMBER,
    SVMN_PAYMENT_AMT   NUMBER(20, 2),
    NOPB_DPST_CNT      NUMBER,
    NOPB_DPST_AMT      NUMBER(20, 2),
    VIRT_ACT_DPST_CNT  NUMBER,
    VIRT_ACT_DPST_AMT  NUMBER(20, 2),
    CRED_PAYMENT_CNT   NUMBER,
    CRED_PAYMENT_AMT   NUMBER(20, 2),
    ACT_TRANS_CNT      NUMBER,
    ACT_TRANS_AMT      NUMBER(20, 2),
    MOBILE_PAYMENT_CNT NUMBER,
    MOBILE_PAYMENT_AMT NUMBER(20, 2),
    SIMP_PAYMENT_CNT   NUMBER,
    SIMP_PAYMENT_AMT   NUMBER(20, 2),
    PAYPAL_CNT         NUMBER,
    PAYPAL_AMT         NUMBER(20, 2),
    SBN_PAYMENT_CNT    NUMBER,
    SBN_PAYMENT_AMT    NUMBER(20, 2),
    REGR_NO            NUMBER,
    REG_DTTM           DATE,
    UPDR_NO            NUMBER,
    UPD_DTTM           DATE,
    constraint IDX_TT_SALES_STTCS_PK
        primary key (SITE_NO, YR, MM, DT, EQPM_GB_CD, HR)
)
/

comment on table TT_SALES_STTCS is '매출 통계'
/

comment on column TT_SALES_STTCS.SITE_NO is '사이트 번호'
/

comment on column TT_SALES_STTCS.YR is '년도'
/

comment on column TT_SALES_STTCS.MM is '월'
/

comment on column TT_SALES_STTCS.DT is '일자'
/

comment on column TT_SALES_STTCS.EQPM_GB_CD is '기기 구분 코드'
/

comment on column TT_SALES_STTCS.HR is '시'
/

comment on column TT_SALES_STTCS.PAYMENT_CNT is '결제 건수'
/

comment on column TT_SALES_STTCS.PAYMENT_AMT is '결제 금액'
/

comment on column TT_SALES_STTCS.CP_DC_AMT is '쿠폰 할인 금액'
/

comment on column TT_SALES_STTCS.ETC_DC_AMT is '기타 할인 금액'
/

comment on column TT_SALES_STTCS.REAL_PAYMENT_AMT is '실 결제 금액'
/

comment on column TT_SALES_STTCS.RETURN_REFUND_AMT is '반품 환불 금액'
/

comment on column TT_SALES_STTCS.CANCEL_REFUND_AMT is '취소 환불 금액'
/

comment on column TT_SALES_STTCS.REFUND_AMT is '환불 금액'
/

comment on column TT_SALES_STTCS.SALES_AMT is '매출 금액'
/

comment on column TT_SALES_STTCS.SVMN_PAYMENT_CNT is '적립금 결제 건수'
/

comment on column TT_SALES_STTCS.SVMN_PAYMENT_AMT is '적립금 결제 금액'
/

comment on column TT_SALES_STTCS.NOPB_DPST_CNT is '무통장 입금 건수'
/

comment on column TT_SALES_STTCS.NOPB_DPST_AMT is '무통장 입금 금액'
/

comment on column TT_SALES_STTCS.VIRT_ACT_DPST_CNT is '가상 계좌 입금 건수'
/

comment on column TT_SALES_STTCS.VIRT_ACT_DPST_AMT is '가상 계좌 입금 금액'
/

comment on column TT_SALES_STTCS.CRED_PAYMENT_CNT is '신용카드 결제 건수'
/

comment on column TT_SALES_STTCS.CRED_PAYMENT_AMT is '신용카드 결제 금액'
/

comment on column TT_SALES_STTCS.ACT_TRANS_CNT is '계좌 이체 건수'
/

comment on column TT_SALES_STTCS.ACT_TRANS_AMT is '계좌 이체 금액'
/

comment on column TT_SALES_STTCS.MOBILE_PAYMENT_CNT is '휴대폰 결제 건수'
/

comment on column TT_SALES_STTCS.MOBILE_PAYMENT_AMT is '휴대폰 결제 금액'
/

comment on column TT_SALES_STTCS.SIMP_PAYMENT_CNT is '간편 결제 건수'
/

comment on column TT_SALES_STTCS.SIMP_PAYMENT_AMT is '간편 결제 금액'
/

comment on column TT_SALES_STTCS.PAYPAL_CNT is 'PAYPAL 건수'
/

comment on column TT_SALES_STTCS.PAYPAL_AMT is 'PAYPAL 금액'
/

comment on column TT_SALES_STTCS.SBN_PAYMENT_CNT is '사방넷 결제 건수'
/

comment on column TT_SALES_STTCS.SBN_PAYMENT_AMT is '사방넷 결제 금액'
/

comment on column TT_SALES_STTCS.REGR_NO is '등록자 번호'
/

comment on column TT_SALES_STTCS.REG_DTTM is '등록 일시'
/

comment on column TT_SALES_STTCS.UPDR_NO is '수정자 번호'
/

comment on column TT_SALES_STTCS.UPD_DTTM is '수정 일시'
/

create table TT_VISIT_PATH_ANLS
(
    SITE_NO       NUMBER(19)  not null,
    YR            VARCHAR2(4) not null,
    MM            VARCHAR2(2) not null,
    DT            VARCHAR2(2) not null,
    EQPM_GB_CD    VARCHAR2(2) not null,
    VISIT_PATH_CD VARCHAR2(2) not null,
    VSTR_CNT      NUMBER,
    REGR_NO       NUMBER,
    REG_DTTM      DATE,
    UPDR_NO       NUMBER,
    UPD_DTTM      DATE,
    constraint IDX_TT_VISIT_PATH_ANLS_PK
        primary key (SITE_NO, YR, MM, DT, EQPM_GB_CD, VISIT_PATH_CD)
)
/

comment on table TT_VISIT_PATH_ANLS is '방문 경로 분석'
/

comment on column TT_VISIT_PATH_ANLS.SITE_NO is '사이트 번호'
/

comment on column TT_VISIT_PATH_ANLS.YR is '년도'
/

comment on column TT_VISIT_PATH_ANLS.MM is '월'
/

comment on column TT_VISIT_PATH_ANLS.DT is '일자'
/

comment on column TT_VISIT_PATH_ANLS.EQPM_GB_CD is '기기 구분 코드'
/

comment on column TT_VISIT_PATH_ANLS.VISIT_PATH_CD is '방문 경로 코드'
/

comment on column TT_VISIT_PATH_ANLS.VSTR_CNT is '방문자 수'
/

comment on column TT_VISIT_PATH_ANLS.REGR_NO is '등록자 번호'
/

comment on column TT_VISIT_PATH_ANLS.REG_DTTM is '등록 일시'
/

comment on column TT_VISIT_PATH_ANLS.UPDR_NO is '수정자 번호'
/

comment on column TT_VISIT_PATH_ANLS.UPD_DTTM is '수정 일시'
/

create index IDX_TT_VISIT_PATH_ANLS
    on TT_VISIT_PATH_ANLS (SITE_NO, YR, MM, DT)
/

create index IDX_TT_VISTI_PATH_ANLS_001
    on TT_VISIT_PATH_ANLS (REG_DTTM)
/

create index IDX_TT_VISTI_PATH_ANLS_002
    on TT_VISIT_PATH_ANLS (UPD_DTTM)
/

create index IDX_TT_VISTI_PATH_ANLS_003
    on TT_VISIT_PATH_ANLS (SITE_NO, YR, MM, DT, EQPM_GB_CD, VISIT_PATH_CD, UPD_DTTM)
/

create table TT_VSTR_ANLS
(
    SITE_NO    NUMBER(19)  not null,
    YR         VARCHAR2(4) not null,
    MM         VARCHAR2(2) not null,
    DT         VARCHAR2(2) not null,
    EQPM_GB_CD VARCHAR2(2) not null,
    HR         VARCHAR2(2) not null,
    VSTR_CNT   NUMBER,
    PAGE_VW    NUMBER,
    REGR_NO    NUMBER,
    REG_DTTM   DATE,
    UPDR_NO    NUMBER,
    UPD_DTTM   DATE
)
/

comment on table TT_VSTR_ANLS is '방문자 분석'
/

comment on column TT_VSTR_ANLS.SITE_NO is '사이트 번호'
/

comment on column TT_VSTR_ANLS.YR is '년도'
/

comment on column TT_VSTR_ANLS.MM is '월'
/

comment on column TT_VSTR_ANLS.DT is '일자'
/

comment on column TT_VSTR_ANLS.EQPM_GB_CD is '기기 구분 코드'
/

comment on column TT_VSTR_ANLS.HR is '시'
/

comment on column TT_VSTR_ANLS.VSTR_CNT is '방문자 수'
/

comment on column TT_VSTR_ANLS.PAGE_VW is '페이지 뷰'
/

comment on column TT_VSTR_ANLS.REGR_NO is '등록자 번호'
/

comment on column TT_VSTR_ANLS.REG_DTTM is '등록 일시'
/

comment on column TT_VSTR_ANLS.UPDR_NO is '수정자 번호'
/

comment on column TT_VSTR_ANLS.UPD_DTTM is '수정 일시'
/

create index IDX_TT_VSTR_ANLS
    on TT_VSTR_ANLS (SITE_NO, YR, MM, DT, HR)
/

create table TT_VSTR_IP_ANLS
(
    SITE_NO       NUMBER(19)    not null,
    YR            VARCHAR2(4)   not null,
    MM            VARCHAR2(2)   not null,
    DT            VARCHAR2(2)   not null,
    EQPM_GB_CD    VARCHAR2(2)   not null,
    VISIT_IP      VARCHAR2(100) not null,
    VISIT_PATH_CD VARCHAR2(2),
    VISIT_CNT     NUMBER,
    PAGE_VW       NUMBER,
    CONNECT_TIME  VARCHAR2(20),
    REGR_NO       NUMBER,
    REG_DTTM      DATE,
    UPDR_NO       NUMBER,
    UPD_DTTM      DATE
)
/

comment on table TT_VSTR_IP_ANLS is '방문자 IP 분석'
/

comment on column TT_VSTR_IP_ANLS.SITE_NO is '사이트 번호'
/

comment on column TT_VSTR_IP_ANLS.YR is '년도'
/

comment on column TT_VSTR_IP_ANLS.MM is '월'
/

comment on column TT_VSTR_IP_ANLS.DT is '일자'
/

comment on column TT_VSTR_IP_ANLS.EQPM_GB_CD is '기기 구분 코드'
/

comment on column TT_VSTR_IP_ANLS.VISIT_IP is '방문 IP'
/

comment on column TT_VSTR_IP_ANLS.VISIT_PATH_CD is '방문 경로 코드'
/

comment on column TT_VSTR_IP_ANLS.VISIT_CNT is '방문 건수'
/

comment on column TT_VSTR_IP_ANLS.PAGE_VW is '페이지 뷰'
/

comment on column TT_VSTR_IP_ANLS.CONNECT_TIME is '접속 시간'
/

comment on column TT_VSTR_IP_ANLS.REGR_NO is '등록자 번호'
/

comment on column TT_VSTR_IP_ANLS.REG_DTTM is '등록 일시'
/

comment on column TT_VSTR_IP_ANLS.UPDR_NO is '수정자 번호'
/

comment on column TT_VSTR_IP_ANLS.UPD_DTTM is '수정 일시'
/

create index IDX_VSTR_IP_ANLS_001
    on TT_VSTR_IP_ANLS (SITE_NO, YR, MM, DT, EQPM_GB_CD, VISIT_IP)
/

create index IDX_VSTR_IP_ANLS_002
    on TT_VSTR_IP_ANLS (REG_DTTM)
/

create index IDX_VSTR_IP_ANLS_003
    on TT_VSTR_IP_ANLS (UPD_DTTM)
/

create index IDX_VSTR_IP_ANLS_004
    on TT_VSTR_IP_ANLS (SITE_NO, YR, MM, DT, EQPM_GB_CD, VISIT_IP, UPD_DTTM)
/

create table BATCH_JOB_EXECUTION
(
    JOB_EXECUTION_ID           NUMBER(19)   not null,
    VERSION                    NUMBER(19),
    JOB_INSTANCE_ID            NUMBER(19)   not null,
    CREATE_TIME                TIMESTAMP(6) not null,
    START_TIME                 TIMESTAMP(6) default NULL,
    END_TIME                   TIMESTAMP(6) default NULL,
    STATUS                     VARCHAR2(10),
    EXIT_CODE                  VARCHAR2(2500),
    EXIT_MESSAGE               VARCHAR2(2500),
    LAST_UPDATED               TIMESTAMP(6),
    JOB_CONFIGURATION_LOCATION VARCHAR2(2500)
)
/

create table BATCH_JOB_EXECUTION_PARAMS
(
    JOB_EXECUTION_ID NUMBER(19)    not null,
    TYPE_CD          VARCHAR2(6)   not null,
    KEY_NAME         VARCHAR2(100) not null,
    STRING_VAL       VARCHAR2(250),
    DATE_VAL         TIMESTAMP(6) default NULL,
    LONG_VAL         NUMBER(19),
    DOUBLE_VAL       NUMBER,
    IDENTIFYING      CHAR          not null
)
/

create table BATCH_STEP_EXECUTION
(
    STEP_EXECUTION_ID  NUMBER(19)    not null,
    VERSION            NUMBER(19)    not null,
    STEP_NAME          VARCHAR2(100) not null,
    JOB_EXECUTION_ID   NUMBER(19)    not null,
    START_TIME         TIMESTAMP(6)  not null,
    END_TIME           TIMESTAMP(6)   default NULL,
    STATUS             VARCHAR2(10),
    COMMIT_COUNT       NUMBER(19),
    READ_COUNT         NUMBER(19),
    FILTER_COUNT       NUMBER(19),
    WRITE_COUNT        NUMBER(19),
    READ_SKIP_COUNT    NUMBER(19),
    WRITE_SKIP_COUNT   NUMBER(19),
    PROCESS_SKIP_COUNT NUMBER(19),
    ROLLBACK_COUNT     NUMBER(19),
    EXIT_CODE          VARCHAR2(2500),
    EXIT_MESSAGE       VARCHAR2(4000) default NULL,
    LAST_UPDATED       TIMESTAMP(6)
)
/

create table TA_CMN_CD_DTL
(
    GRP_CD       VARCHAR2(50) not null
        constraint FK_CMN_CD_DTL
            references TA_CMN_CD_GRP,
    CD           VARCHAR2(10) not null,
    CD_NM        VARCHAR2(50),
    CD_SHORT_NM  VARCHAR2(50),
    CD_DSCRT     VARCHAR2(500),
    SORT_SEQ     NUMBER(3),
    USE_YN       CHAR,
    USER_DEFINE1 VARCHAR2(50),
    USER_DEFINE2 VARCHAR2(50),
    USER_DEFINE3 VARCHAR2(50),
    USER_DEFINE4 VARCHAR2(50),
    USER_DEFINE5 VARCHAR2(50),
    REG_DTTM     DATE,
    REGR_NO      NUMBER,
    UPD_DTTM     DATE,
    UPDR_NO      NUMBER,
    DEL_YN       CHAR,
    DEL_DTTM     DATE,
    DELR_NO      NUMBER,
    constraint IDX_TA_CMN_CD_DTL_PK
        primary key (GRP_CD, CD)
)
/

comment on table TA_CMN_CD_DTL is '공통 코드 상세'
/

comment on column TA_CMN_CD_DTL.GRP_CD is '그룹 코드'
/

comment on column TA_CMN_CD_DTL.CD is '코드'
/

comment on column TA_CMN_CD_DTL.CD_NM is '코드 명'
/

comment on column TA_CMN_CD_DTL.CD_SHORT_NM is '코드 약어 명'
/

comment on column TA_CMN_CD_DTL.CD_DSCRT is '코드 설명'
/

comment on column TA_CMN_CD_DTL.SORT_SEQ is '정렬 순서'
/

comment on column TA_CMN_CD_DTL.USE_YN is '사용 여부'
/

comment on column TA_CMN_CD_DTL.USER_DEFINE1 is '사용자 정의1'
/

comment on column TA_CMN_CD_DTL.USER_DEFINE2 is '사용자 정의2'
/

comment on column TA_CMN_CD_DTL.USER_DEFINE3 is '사용자 정의3'
/

comment on column TA_CMN_CD_DTL.USER_DEFINE4 is '사용자 정의4'
/

comment on column TA_CMN_CD_DTL.USER_DEFINE5 is '사용자 정의5'
/

comment on column TA_CMN_CD_DTL.REG_DTTM is '등록 일시'
/

comment on column TA_CMN_CD_DTL.REGR_NO is '등록자 번호'
/

comment on column TA_CMN_CD_DTL.UPD_DTTM is '수정 일시'
/

comment on column TA_CMN_CD_DTL.UPDR_NO is '수정자 번호'
/

comment on column TA_CMN_CD_DTL.DEL_YN is '삭제 여부'
/

comment on column TA_CMN_CD_DTL.DEL_DTTM is '삭제 일시'
/

comment on column TA_CMN_CD_DTL.DELR_NO is '삭제자 번호'
/

create index IDX_TA_CMN_CD_DTL_001
    on TA_CMN_CD_DTL (GRP_CD, CD, DEL_YN)
/

create table TA_MANAGER_AUTH_GRP
(
    AUTH_GRP_NO NUMBER not null
        constraint IDX_TA_MANAGER_AUTH_GRP_PK
            primary key,
    SITE_NO     NUMBER(19)
        constraint FK_MANAGER_AUTH_GRP_1
            references TS_SITE
                on delete set null,
    AUTH_GB_CD  VARCHAR2(2),
    AUTH_NM     VARCHAR2(20),
    REG_DTTM    DATE,
    REGR_NO     NUMBER,
    UPD_DTTM    DATE,
    UPDR_NO     NUMBER
)
/

comment on table TA_MANAGER_AUTH_GRP is '관리자 권한 그룹'
/

comment on column TA_MANAGER_AUTH_GRP.AUTH_GRP_NO is '권한 그룹 번호'
/

comment on column TA_MANAGER_AUTH_GRP.SITE_NO is '사이트 번호'
/

comment on column TA_MANAGER_AUTH_GRP.AUTH_GB_CD is '권한 구분 코드'
/

comment on column TA_MANAGER_AUTH_GRP.AUTH_NM is '권한 명'
/

comment on column TA_MANAGER_AUTH_GRP.REG_DTTM is '등록 일시'
/

comment on column TA_MANAGER_AUTH_GRP.REGR_NO is '등록자 번호'
/

comment on column TA_MANAGER_AUTH_GRP.UPD_DTTM is '수정 일시'
/

comment on column TA_MANAGER_AUTH_GRP.UPDR_NO is '수정자 번호'
/

create table TA_MANAGER_AUTH_MENU
(
    AUTH_GRP_NO NUMBER       not null
        constraint FK_MANAGER_AUTH_MENU_1
            references TA_MANAGER_AUTH_GRP,
    MENU_ID     VARCHAR2(20) not null
        constraint FK_MANAGER_AUTH_MENU_2
            references TA_MENU,
    SITE_NO     NUMBER(19)
        constraint R_1401
            references TS_SITE
                on delete set null,
    REG_DTTM    DATE,
    REGR_NO     NUMBER,
    UPD_DTTM    DATE,
    UPDR_NO     NUMBER,
    constraint IDX_TA_MANAGER_AUTH_MENU_PK
        primary key (AUTH_GRP_NO, MENU_ID)
)
/

comment on table TA_MANAGER_AUTH_MENU is '관리자 권한 메뉴'
/

comment on column TA_MANAGER_AUTH_MENU.AUTH_GRP_NO is '권한 그룹 번호'
/

comment on column TA_MANAGER_AUTH_MENU.MENU_ID is '메뉴 아이디'
/

comment on column TA_MANAGER_AUTH_MENU.SITE_NO is '사이트 번호'
/

comment on column TA_MANAGER_AUTH_MENU.REG_DTTM is '등록 일시'
/

comment on column TA_MANAGER_AUTH_MENU.REGR_NO is '등록자 번호'
/

comment on column TA_MANAGER_AUTH_MENU.UPD_DTTM is '수정 일시'
/

comment on column TA_MANAGER_AUTH_MENU.UPDR_NO is '수정자 번호'
/

create table TA_SITE_QUOTA
(
    SITE_NO         NUMBER(19) not null
        constraint IDX_TA_SITE_QUOTA_PK
            primary key
        constraint FK_SITE_QUOTA_1
            references TS_SITE,
    MANAGER_ACT_CNT NUMBER,
    NOPB_ACT_CNT    NUMBER,
    ICON_CNT        NUMBER,
    BBS_CNT         NUMBER,
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE
)
/

comment on table TA_SITE_QUOTA is '사이트 할당량'
/

comment on column TA_SITE_QUOTA.SITE_NO is '사이트 번호'
/

comment on column TA_SITE_QUOTA.MANAGER_ACT_CNT is '관리자 계정 수'
/

comment on column TA_SITE_QUOTA.NOPB_ACT_CNT is '무통장 계정 수'
/

comment on column TA_SITE_QUOTA.ICON_CNT is '아이콘 수'
/

comment on column TA_SITE_QUOTA.BBS_CNT is '게시판 수'
/

comment on column TA_SITE_QUOTA.REGR_NO is '등록자 번호'
/

comment on column TA_SITE_QUOTA.REG_DTTM is '등록 일시'
/

comment on column TA_SITE_QUOTA.UPDR_NO is '수정자 번호'
/

comment on column TA_SITE_QUOTA.UPD_DTTM is '수정 일시'
/

create table TB_BANNED_WORD
(
    SEQ         NUMBER     not null
        constraint IDX_TB_BANNED_WORD_PK
            primary key,
    SITE_NO     NUMBER(19) not null
        constraint FK_BANNED_WORD_1
            references TS_SITE,
    BANNED_WORD VARCHAR2(1000),
    REG_DTTM    DATE,
    REGR_NO     NUMBER,
    UPD_DTTM    DATE,
    UPDR_NO     NUMBER,
    DEL_YN      CHAR,
    DEL_DTTM    DATE,
    DELR_NO     NUMBER,
    INIT_YN     VARCHAR2(1)
)
/

comment on table TB_BANNED_WORD is '금칙어'
/

comment on column TB_BANNED_WORD.SEQ is '순번'
/

comment on column TB_BANNED_WORD.SITE_NO is '사이트 번호'
/

comment on column TB_BANNED_WORD.BANNED_WORD is '금칙어'
/

comment on column TB_BANNED_WORD.REG_DTTM is '등록 일시'
/

comment on column TB_BANNED_WORD.REGR_NO is '등록자 번호'
/

comment on column TB_BANNED_WORD.UPD_DTTM is '수정 일시'
/

comment on column TB_BANNED_WORD.UPDR_NO is '수정자 번호'
/

comment on column TB_BANNED_WORD.DEL_YN is '삭제 여부'
/

comment on column TB_BANNED_WORD.DEL_DTTM is '삭제 일시'
/

comment on column TB_BANNED_WORD.DELR_NO is '삭제자 번호'
/

comment on column TB_BANNED_WORD.INIT_YN is '초기화 여부'
/

create table TB_CMN_ATCH_FILE
(
    FILE_NO     NUMBER(19) not null
        constraint IDX_TB_CMN_ATCH_FILE_PK
            primary key,
    SITE_NO     NUMBER(19) not null
        constraint FK_CMN_ATCH_FILE_1
            references TS_SITE,
    REF_NO      VARCHAR2(20),
    FILE_GB     VARCHAR2(50),
    FILE_PATH   VARCHAR2(300),
    ORG_FILE_NM VARCHAR2(300),
    FILE_NM     VARCHAR2(300),
    FILE_SIZE   NUMBER,
    REG_DTTM    DATE,
    REGR_NO     NUMBER
)
/

comment on table TB_CMN_ATCH_FILE is '공통 첨부 파일'
/

comment on column TB_CMN_ATCH_FILE.FILE_NO is '파일 번호'
/

comment on column TB_CMN_ATCH_FILE.SITE_NO is '사이트 번호'
/

comment on column TB_CMN_ATCH_FILE.REF_NO is '참조 번호'
/

comment on column TB_CMN_ATCH_FILE.FILE_GB is '파일 구분'
/

comment on column TB_CMN_ATCH_FILE.FILE_PATH is '파일 경로'
/

comment on column TB_CMN_ATCH_FILE.ORG_FILE_NM is '원본 파일 명'
/

comment on column TB_CMN_ATCH_FILE.FILE_NM is '파일 명'
/

comment on column TB_CMN_ATCH_FILE.FILE_SIZE is '파일 사이즈'
/

comment on column TB_CMN_ATCH_FILE.REG_DTTM is '등록 일시'
/

comment on column TB_CMN_ATCH_FILE.REGR_NO is '등록자 번호'
/

create table TB_MAIL_INFO_MANAGE
(
    SITE_NO       NUMBER(19) not null
        constraint IDX_TB_MAIL_INFO_MANAGE_PK
            primary key
        constraint FK_MAIL_INFO_1
            references TS_SITE,
    MAIL_POSS_CNT NUMBER,
    REG_DTTM      DATE,
    REGR_NO       NUMBER,
    UPD_DTTM      DATE,
    UPDR_NO       NUMBER
)
/

comment on table TB_MAIL_INFO_MANAGE is '메일 정보 관리'
/

comment on column TB_MAIL_INFO_MANAGE.SITE_NO is '사이트 번호'
/

comment on column TB_MAIL_INFO_MANAGE.MAIL_POSS_CNT is '메일 보유 건수'
/

comment on column TB_MAIL_INFO_MANAGE.REG_DTTM is '등록 일시'
/

comment on column TB_MAIL_INFO_MANAGE.REGR_NO is '등록자 번호'
/

comment on column TB_MAIL_INFO_MANAGE.UPD_DTTM is '수정 일시'
/

comment on column TB_MAIL_INFO_MANAGE.UPDR_NO is '수정자 번호'
/

create table TB_SMS_INFO_MANAGE
(
    SITE_NO    NUMBER(19) not null
        constraint IDX_TB_SMS_INFO_MANAGE_PK
            primary key
        constraint FK_SMS_INFO_1
            references TS_SITE,
    POSS_CNT   NUMBER,
    SEND_TELNO VARCHAR2(20),
    REG_DTTM   DATE,
    REGR_NO    NUMBER,
    UPD_DTTM   DATE,
    UPDR_NO    NUMBER
)
/

comment on table TB_SMS_INFO_MANAGE is 'SMS 정보 관리'
/

comment on column TB_SMS_INFO_MANAGE.SITE_NO is '사이트 번호'
/

comment on column TB_SMS_INFO_MANAGE.POSS_CNT is '보유 건수'
/

comment on column TB_SMS_INFO_MANAGE.SEND_TELNO is '발신 전화번호'
/

comment on column TB_SMS_INFO_MANAGE.REG_DTTM is '등록 일시'
/

comment on column TB_SMS_INFO_MANAGE.REGR_NO is '등록자 번호'
/

comment on column TB_SMS_INFO_MANAGE.UPD_DTTM is '수정 일시'
/

comment on column TB_SMS_INFO_MANAGE.UPDR_NO is '수정자 번호'
/

create table TB_SMS_SEND_NO_MANAGE
(
    SEQ         NUMBER     not null,
    SITE_NO     NUMBER(19) not null
        constraint FK_SMS_SEND_NO_1
            references TB_SMS_INFO_MANAGE,
    RECV_MOBILE VARCHAR2(50),
    REG_DTTM    DATE,
    REGR_NO     NUMBER,
    UPD_DTTM    DATE,
    UPDR_NO     NUMBER,
    constraint IDX_TB_SMS_SEND_NO_MANAGE_PK
        primary key (SEQ, SITE_NO)
)
/

comment on table TB_SMS_SEND_NO_MANAGE is 'SMS 발신 번호 관리'
/

comment on column TB_SMS_SEND_NO_MANAGE.SEQ is '순번'
/

comment on column TB_SMS_SEND_NO_MANAGE.SITE_NO is '사이트 번호'
/

comment on column TB_SMS_SEND_NO_MANAGE.RECV_MOBILE is '수신 휴대폰'
/

comment on column TB_SMS_SEND_NO_MANAGE.REG_DTTM is '등록 일시'
/

comment on column TB_SMS_SEND_NO_MANAGE.REGR_NO is '등록자 번호'
/

comment on column TB_SMS_SEND_NO_MANAGE.UPD_DTTM is '수정 일시'
/

comment on column TB_SMS_SEND_NO_MANAGE.UPDR_NO is '수정자 번호'
/

create table TC_MEMBER
(
    MEMBER_NO                NUMBER     not null
        constraint IDX_TC_MEMBER_PK
            primary key,
    SITE_NO                  NUMBER(19) not null
        constraint FK_MEMBER_1
            references TS_SITE,
    MEMBER_NM                VARCHAR2(100),
    BIRTH                    VARCHAR2(100),
    BORN_YEAR                VARCHAR2(10),
    BORN_MONTH               VARCHAR2(5),
    GENDER_GB_CD             VARCHAR2(30),
    NTN_GB_CD                VARCHAR2(10),
    JOIN_DTTM                DATE,
    CERTIFY_METHOD_CD        VARCHAR2(10),
    EMAIL_RECV_YN            VARCHAR2(1),
    SMS_RECV_YN              VARCHAR2(1),
    MEMBER_STATUS_CD         VARCHAR2(10),
    LOGIN_ID                 VARCHAR2(300) default NULL,
    PW                       VARCHAR2(300),
    TEL                      VARCHAR2(50),
    MOBILE                   VARCHAR2(50),
    EMAIL                    VARCHAR2(100),
    JOIN_PATH_CD             VARCHAR2(10),
    PW_CHG_DTTM              DATE,
    LOGIN_FAIL_CNT           NUMBER,
    STRTNB_ADDR              VARCHAR2(500),
    ROAD_ADDR                VARCHAR2(500),
    DTL_ADDR                 VARCHAR2(500),
    NEW_POST_NO              VARCHAR2(50),
    MANAGER_MEMO             VARCHAR2(1000),
    REALNM_CERTIFY_YN        VARCHAR2(1),
    MEMBER_GRADE_NO          NUMBER,
    GRADE_AUTO_REARRANGE_YN  VARCHAR2(1),
    MEMBER_CI                VARCHAR2(300),
    MEMBER_DI                VARCHAR2(300),
    MEMBER_GB_CD             VARCHAR2(10),
    ADULT_CERTIFY_YN         VARCHAR2(1),
    NEXT_PW_CHG_SCD_DTTM     DATE,
    FRG_ADDR_COUNTRY         VARCHAR2(300),
    FRG_ADDR_CITY            VARCHAR2(300),
    FRG_ADDR_STATE           VARCHAR2(300),
    FRG_ADDR_ZIP_CODE        VARCHAR2(100),
    FRG_ADDR_DTL1            VARCHAR2(300),
    FRG_ADDR_DTL2            VARCHAR2(300),
    JOIN_DEVICE_TYPE         VARCHAR2(2),
    RECV_RJT_YN              VARCHAR2(1)   default 'N',
    REGR_NO                  NUMBER,
    REG_DTTM                 DATE,
    UPDR_NO                  NUMBER,
    UPD_DTTM                 DATE,
    MEMBER_TYPE_CD           CHAR(2)       default 01,
    BIZ_REG_NO               VARCHAR2(10)  default NULL,
    MANAGER_NM               VARCHAR2(100),
    BIZ_FILE_PATH            VARCHAR2(300),
    BIZ_FILE_NM              VARCHAR2(300),
    BIZ_FILE_SIZE            NUMBER,
    BIZ_ORG_FILE_NM          VARCHAR2(300),
    EMAIL_CERTIFY_VALUE      VARCHAR2(300),
    MEMBER_CARD_NO           VARCHAR2(20),
    CUSTOM_STORE_NO          VARCHAR2(10),
    CUSTOM_STORE_NM          VARCHAR2(200),
    INTEGRATION_MEMBER_GB_CD VARCHAR2(2),
    MOBILE_SMR               VARCHAR2(4),
    APP_TOKEN                VARCHAR2(300),
    RECOM_MEMBER_NO          NUMBER,
    APP_LAST_LOGIN_DTTM      DATE,
    AUTO_LOGIN_GB            VARCHAR2(1),
    LOCA_GB                  VARCHAR2(1),
    NOTI_GB                  VARCHAR2(1),
    EVENT_GB                 VARCHAR2(1),
    NEWS_GB                  VARCHAR2(1),
    MEMBER_INTEGRATION_DTTM  DATE,
    STORE_JOIN_YN            VARCHAR2(1),
    OS_TYPE                  VARCHAR2(10),
    CEO_NM                   VARCHAR2(50),
    ID_CHG_YN                VARCHAR2(1)   default 'N',
    ID_CHG_DTTM              DATE,
    APP_FIRST_LOGIN_DTTM     DATE,
    PRIVACY_POLICY_YN        VARCHAR2(1)   default 'N',
    LOC_INFO_TERMS_YN        VARCHAR2(1)   default 'N',
    YOUTH_PROT_POLICY_YN     VARCHAR2(1)   default 'N',
    MEMBERSHIP_TERMS_YN      VARCHAR2(1)   default 'N',
    ONLINE_TERMS_YN          VARCHAR2(1)   default 'N',
    FORCE_PUSH_AGREE_YN      VARCHAR2(1)
)
/

comment on table TC_MEMBER is '회원'
/

comment on column TC_MEMBER.MEMBER_NO is '회원 번호'
/

comment on column TC_MEMBER.SITE_NO is '사이트 번호'
/

comment on column TC_MEMBER.MEMBER_NM is '회원 명'
/

comment on column TC_MEMBER.BIRTH is '생일'
/

comment on column TC_MEMBER.BORN_YEAR is '생년'
/

comment on column TC_MEMBER.BORN_MONTH is '생월'
/

comment on column TC_MEMBER.GENDER_GB_CD is '성별 구분 코드'
/

comment on column TC_MEMBER.NTN_GB_CD is '국적 구분 코드'
/

comment on column TC_MEMBER.JOIN_DTTM is '가입 일시'
/

comment on column TC_MEMBER.CERTIFY_METHOD_CD is '인증 방법 코드'
/

comment on column TC_MEMBER.EMAIL_RECV_YN is '이메일 수신 여부'
/

comment on column TC_MEMBER.SMS_RECV_YN is 'SMS 수신 여부'
/

comment on column TC_MEMBER.MEMBER_STATUS_CD is '회원 상태 코드'
/

comment on column TC_MEMBER.LOGIN_ID is '로그인 아이디'
/

comment on column TC_MEMBER.PW is '비밀번호'
/

comment on column TC_MEMBER.TEL is '전화'
/

comment on column TC_MEMBER.MOBILE is '휴대폰'
/

comment on column TC_MEMBER.EMAIL is '이메일'
/

comment on column TC_MEMBER.JOIN_PATH_CD is '가입 경로 코드'
/

comment on column TC_MEMBER.PW_CHG_DTTM is '비밀번호 변경 일시'
/

comment on column TC_MEMBER.LOGIN_FAIL_CNT is '로그인 실패 수'
/

comment on column TC_MEMBER.STRTNB_ADDR is '번지 주소'
/

comment on column TC_MEMBER.ROAD_ADDR is '도로 주소'
/

comment on column TC_MEMBER.DTL_ADDR is '상세 주소'
/

comment on column TC_MEMBER.NEW_POST_NO is '신 우편 번호'
/

comment on column TC_MEMBER.MANAGER_MEMO is '관리자 메모'
/

comment on column TC_MEMBER.REALNM_CERTIFY_YN is '실명 인증 여부'
/

comment on column TC_MEMBER.MEMBER_GRADE_NO is '회원 등급 번호'
/

comment on column TC_MEMBER.GRADE_AUTO_REARRANGE_YN is '등급 자동 산정 여부'
/

comment on column TC_MEMBER.MEMBER_CI is '회원 CI'
/

comment on column TC_MEMBER.MEMBER_DI is '회원 DI'
/

comment on column TC_MEMBER.MEMBER_GB_CD is '회원 구분 코드'
/

comment on column TC_MEMBER.ADULT_CERTIFY_YN is '성인 인증 여부'
/

comment on column TC_MEMBER.NEXT_PW_CHG_SCD_DTTM is '다음 비밀번호 변경 예정 일시'
/

comment on column TC_MEMBER.FRG_ADDR_COUNTRY is '해외 주소 COUNTRY'
/

comment on column TC_MEMBER.FRG_ADDR_CITY is '해외 주소 CITY'
/

comment on column TC_MEMBER.FRG_ADDR_STATE is '해외 주소 STATE'
/

comment on column TC_MEMBER.FRG_ADDR_ZIP_CODE is '해외 주소 ZIP CODE'
/

comment on column TC_MEMBER.FRG_ADDR_DTL1 is '해외 주소 상세1'
/

comment on column TC_MEMBER.FRG_ADDR_DTL2 is '해외 주소 상세2'
/

comment on column TC_MEMBER.JOIN_DEVICE_TYPE is '가입 장치 유형'
/

comment on column TC_MEMBER.RECV_RJT_YN is '수신 거부 여부'
/

comment on column TC_MEMBER.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER.UPD_DTTM is '수정 일시'
/

comment on column TC_MEMBER.MEMBER_TYPE_CD is '회원 유형 코드'
/

comment on column TC_MEMBER.BIZ_REG_NO is '사업자 등록 번호'
/

comment on column TC_MEMBER.MANAGER_NM is '담당자 명'
/

comment on column TC_MEMBER.MEMBER_CARD_NO is '회원카드번호'
/

comment on column TC_MEMBER.INTEGRATION_MEMBER_GB_CD is '통합 회원 구분 코드'
/

comment on column TC_MEMBER.MOBILE_SMR is '휴대폰 요약'
/

comment on column TC_MEMBER.RECOM_MEMBER_NO is '추천 회원 번호'
/

comment on column TC_MEMBER.NOTI_GB is '공지 안내 : 1 허용'
/

comment on column TC_MEMBER.EVENT_GB is '이벤트 : 1 허용'
/

comment on column TC_MEMBER.NEWS_GB is '뉴스 1 허용'
/

comment on column TC_MEMBER.MEMBER_INTEGRATION_DTTM is '회원 통합 일시'
/

comment on column TC_MEMBER.STORE_JOIN_YN is '매장 가입 여부'
/

comment on column TC_MEMBER.CEO_NM is '대표자 명'
/

comment on column TC_MEMBER.ID_CHG_YN is '아이디 변경 여부'
/

comment on column TC_MEMBER.ID_CHG_DTTM is '아이디 변경 일시'
/

comment on column TC_MEMBER.APP_FIRST_LOGIN_DTTM is '앱 최초 로그인 일시'
/

comment on column TC_MEMBER.PRIVACY_POLICY_YN is '개인 정보 처리방침 동의 여부'
/

comment on column TC_MEMBER.LOC_INFO_TERMS_YN is '위치 정보 이용약관 동의 여부'
/

comment on column TC_MEMBER.YOUTH_PROT_POLICY_YN is '청소년 보호정책 동의 여부'
/

comment on column TC_MEMBER.MEMBERSHIP_TERMS_YN is '멤버쉽 회원 이용약관 동의 여부'
/

comment on column TC_MEMBER.ONLINE_TERMS_YN is '온라인 몰 이용약관 동의 여부'
/

comment on column TC_MEMBER.FORCE_PUSH_AGREE_YN is '푸쉬 강제 동의 여부'
/

create table TG_GOODS_REINWARE_ALARM
(
    REINWARE_ALARM_NO NUMBER(19)   not null
        constraint IDX_TG_GOODS_REINWARE_ALARM_PK
            primary key,
    GOODS_NO          VARCHAR2(16) not null,
    MOBILE            VARCHAR2(50) not null,
    ALARM_STATUS_CD   VARCHAR2(1)  not null,
    MEMBER_NO         NUMBER
        constraint FK_GOODS_REINWARE_ALARM_2
            references TC_MEMBER
                on delete set null,
    ALARM_DTTM        DATE,
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE
)
/

comment on table TG_GOODS_REINWARE_ALARM is '상품 재입고 알림'
/

comment on column TG_GOODS_REINWARE_ALARM.REINWARE_ALARM_NO is '재입고 알림 번호'
/

comment on column TG_GOODS_REINWARE_ALARM.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_REINWARE_ALARM.MOBILE is '휴대폰'
/

comment on column TG_GOODS_REINWARE_ALARM.ALARM_STATUS_CD is '알림 상태 코드'
/

comment on column TG_GOODS_REINWARE_ALARM.MEMBER_NO is '회원 번호'
/

comment on column TG_GOODS_REINWARE_ALARM.ALARM_DTTM is '알림 일시'
/

comment on column TG_GOODS_REINWARE_ALARM.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_REINWARE_ALARM.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_REINWARE_ALARM.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_REINWARE_ALARM.UPD_DTTM is '수정 일시'
/

create table TO_BASKET
(
    BASKET_NO        NUMBER(16) not null,
    SITE_NO          NUMBER(19) not null
        constraint FK_BASKET_1
            references TS_SITE,
    MEMBER_NO        NUMBER     not null
        constraint FK_BASKET_2
            references TC_MEMBER,
    ITEM_VER         NUMBER,
    ATTR_VER         NUMBER,
    GOODS_NO         VARCHAR2(16),
    ITEM_NO          VARCHAR2(18),
    BUY_QTT          NUMBER,
    DLVRC_PAYMENT_CD VARCHAR2(2),
    SESSION_ID       VARCHAR2(255),
    ORD_MEDIA_CD     VARCHAR2(2),
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE,
    CTG_NO           NUMBER(19),
    constraint IDX_TO_BASKET_PK
        primary key (BASKET_NO, SITE_NO)
)
/

comment on table TO_BASKET is '장바구니'
/

comment on column TO_BASKET.BASKET_NO is '장바구니 번호'
/

comment on column TO_BASKET.SITE_NO is '사이트 번호'
/

comment on column TO_BASKET.MEMBER_NO is '회원 번호'
/

comment on column TO_BASKET.ITEM_VER is '단품 버전'
/

comment on column TO_BASKET.ATTR_VER is '속성 버전'
/

comment on column TO_BASKET.GOODS_NO is '상품 번호'
/

comment on column TO_BASKET.ITEM_NO is '단품 번호'
/

comment on column TO_BASKET.BUY_QTT is '구매 수량'
/

comment on column TO_BASKET.DLVRC_PAYMENT_CD is '배송비 결제 코드'
/

comment on column TO_BASKET.SESSION_ID is '세션 아이디'
/

comment on column TO_BASKET.ORD_MEDIA_CD is '주문 매체 코드'
/

comment on column TO_BASKET.REGR_NO is '등록자 번호'
/

comment on column TO_BASKET.REG_DTTM is '등록 일시'
/

comment on column TO_BASKET.UPDR_NO is '수정자 번호'
/

comment on column TO_BASKET.UPD_DTTM is '수정 일시'
/

comment on column TO_BASKET.CTG_NO is '카테고리 번호'
/

create table TO_BASKET_ADD_OPT
(
    BASKET_ADD_OPT_NO NUMBER(16) not null
        constraint IDX_TO_BASKET_ADD_OPT_PK
            primary key,
    BASKET_NO         NUMBER(16) not null,
    OPT_NO            NUMBER(19),
    OPT_DTL_SEQ       NUMBER(19),
    OPT_VER           NUMBER,
    OPT_BUY_QTT       NUMBER,
    SITE_NO           NUMBER(19) not null,
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE,
    constraint FK_BASKET_ADD_OPT_1
        foreign key (BASKET_NO, SITE_NO) references TO_BASKET
)
/

comment on table TO_BASKET_ADD_OPT is '장바구니 추가 옵션'
/

comment on column TO_BASKET_ADD_OPT.BASKET_ADD_OPT_NO is '장바구니 추가 옵션 번호'
/

comment on column TO_BASKET_ADD_OPT.BASKET_NO is '장바구니 번호'
/

comment on column TO_BASKET_ADD_OPT.OPT_NO is '옵션 번호'
/

comment on column TO_BASKET_ADD_OPT.OPT_DTL_SEQ is '옵션 상세 순번'
/

comment on column TO_BASKET_ADD_OPT.OPT_VER is '옵션 버전'
/

comment on column TO_BASKET_ADD_OPT.OPT_BUY_QTT is '옵션 구매 수량'
/

comment on column TO_BASKET_ADD_OPT.SITE_NO is '사이트 번호'
/

comment on column TO_BASKET_ADD_OPT.REGR_NO is '등록자 번호'
/

comment on column TO_BASKET_ADD_OPT.REG_DTTM is '등록 일시'
/

comment on column TO_BASKET_ADD_OPT.UPDR_NO is '수정자 번호'
/

comment on column TO_BASKET_ADD_OPT.UPD_DTTM is '수정 일시'
/

create table TC_MEMBER_FAV_GOODS
(
    MEMBER_NO NUMBER       not null
        constraint FK_MEMBER_FAV_GOODS_2
            references TC_MEMBER,
    GOODS_NO  VARCHAR2(18) not null,
    SITE_NO   NUMBER(19)   not null
        constraint FK_MEMBER_FAV_GOODS_1
            references TS_SITE,
    CTG_NO    NUMBER(19),
    ITEM_NO   VARCHAR2(18),
    REGR_NO   NUMBER,
    REG_DTTM  DATE,
    UPDR_NO   NUMBER,
    UPD_DTTM  DATE,
    constraint IDX_TC_MEMBER_FAV_GOODS_PK
        primary key (MEMBER_NO, GOODS_NO, SITE_NO)
)
/

comment on table TC_MEMBER_FAV_GOODS is '회원 관심 상품'
/

comment on column TC_MEMBER_FAV_GOODS.MEMBER_NO is '회원 번호'
/

comment on column TC_MEMBER_FAV_GOODS.GOODS_NO is '상품 번호'
/

comment on column TC_MEMBER_FAV_GOODS.SITE_NO is '사이트 번호'
/

comment on column TC_MEMBER_FAV_GOODS.CTG_NO is '카테고리 번호'
/

comment on column TC_MEMBER_FAV_GOODS.ITEM_NO is '단품번호'
/

comment on column TC_MEMBER_FAV_GOODS.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_FAV_GOODS.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_FAV_GOODS.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_FAV_GOODS.UPD_DTTM is '수정 일시'
/

create index IDX_TC_MEMBER_FAV_GOODS_001
    on TC_MEMBER_FAV_GOODS (GOODS_NO, SITE_NO)
/

create index IDX_TC_MEMBER_FAV_GOODS_002
    on TC_MEMBER_FAV_GOODS (REG_DTTM)
/

create index IDX_TC_MEMBER_FAV_GOODS_003
    on TC_MEMBER_FAV_GOODS (SITE_NO)
/

create index IDX_TC_MEMBER_FAV_GOODS_004
    on TC_MEMBER_FAV_GOODS (GOODS_NO)
/

create materialized view log on TC_MEMBER
    with primary key (MEMBER_NO)
/

create index IDX_TC_MEMBER_001
    on TC_MEMBER (SITE_NO, LOGIN_ID, MEMBER_NM)
/

create index IDX_TC_MEMBER_002
    on TC_MEMBER (JOIN_DTTM)
/

create index IDX_TC_MEMBER_004
    on TC_MEMBER (SITE_NO, MEMBER_STATUS_CD, MEMBER_NO, JOIN_DTTM)
/

create index IDX_TC_MEMBER_003
    on TC_MEMBER (REG_DTTM)
/

create index IDX_TC_MEMBER_005
    on TC_MEMBER (MEMBER_CARD_NO)
/

create index IDX_TC_MEMBER_006
    on TC_MEMBER (MEMBER_NM, MOBILE_SMR)
/

create index IDX_TC_MEMBER_007
    on TC_MEMBER (MEMBER_NO, MEMBER_STATUS_CD, MEMBER_NM, MOBILE_SMR)
/

create index IDX_TC_MEMBER_008
    on TC_MEMBER (SITE_NO, MEMBER_STATUS_CD)
/

create index IDX_TC_MEMBER_009
    on TC_MEMBER (APP_TOKEN, SITE_NO, MEMBER_STATUS_CD, MEMBER_NO)
/

create index IDX_TC_MEMBER_010
    on TC_MEMBER (MEMBER_STATUS_CD, MEMBER_NO, JOIN_DTTM)
/

create index IDX_TC_MEMBER_011
    on TC_MEMBER (SITE_NO, MOBILE, INTEGRATION_MEMBER_GB_CD)
/

create index IDX_TC_MEMBER_012
    on TC_MEMBER (APP_TOKEN)
/

create table TC_MEMBER_CHG_HIST
(
    MEMBER_NO               NUMBER not null
        constraint FK_MEMBER_CHG_HIST_1
            references TC_MEMBER,
    CHG_DTTM                DATE   not null,
    SITE_NO                 NUMBER(19),
    MEMBER_NM               VARCHAR2(100),
    BIRTH                   VARCHAR2(100),
    BORN_YEAR               VARCHAR2(10),
    BORN_MONTH              VARCHAR2(5),
    GENDER_GB_CD            VARCHAR2(30),
    NTN_GB_CD               VARCHAR2(10),
    JOIN_DTTM               DATE,
    CERTIFY_METHOD_CD       VARCHAR2(10),
    EMAIL_RECV_YN           VARCHAR2(1),
    SMS_RECV_YN             VARCHAR2(1),
    MEMBER_STATUS_CD        VARCHAR2(10),
    LOGIN_ID                VARCHAR2(300) default NULL,
    PW                      VARCHAR2(300),
    TEL                     VARCHAR2(50),
    MOBILE                  VARCHAR2(50),
    EMAIL                   VARCHAR2(100),
    JOIN_PATH_CD            VARCHAR2(10),
    PW_CHG_DTTM             DATE,
    LOGIN_FAIL_CNT          NUMBER,
    STRTNB_ADDR             VARCHAR2(500),
    ROAD_ADDR               VARCHAR2(500),
    DTL_ADDR                VARCHAR2(500),
    NEW_POST_NO             VARCHAR2(50),
    MANAGER_MEMO            VARCHAR2(1000),
    REALNM_CERTIFY_YN       VARCHAR2(1),
    MEMBER_GRADE_NO         NUMBER,
    GRADE_AUTO_REARRANGE_YN VARCHAR2(1),
    MEMBER_CI               VARCHAR2(300),
    MEMBER_DI               VARCHAR2(300),
    MEMBER_GB_CD            VARCHAR2(10),
    ADULT_CERTIFY_YN        VARCHAR2(1),
    NEXT_PW_CHG_SCD_DTTM    DATE,
    FRG_ADDR_COUNTRY        VARCHAR2(300),
    FRG_ADDR_CITY           VARCHAR2(300),
    FRG_ADDR_STATE          VARCHAR2(300),
    FRG_ADDR_ZIP_CODE       VARCHAR2(100),
    FRG_ADDR_DTL1           VARCHAR2(300),
    FRG_ADDR_DTL2           VARCHAR2(300),
    JOIN_DEVICE_TYPE        VARCHAR2(2),
    REGR_NO                 NUMBER,
    REG_DTTM                DATE,
    UPDR_NO                 NUMBER,
    UPD_DTTM                DATE,
    constraint IDX_TC_MEMBER_CHG_HIST_PK
        primary key (MEMBER_NO, CHG_DTTM)
)
/

comment on table TC_MEMBER_CHG_HIST is '회원 변경 이력'
/

comment on column TC_MEMBER_CHG_HIST.MEMBER_NO is '회원 번호'
/

comment on column TC_MEMBER_CHG_HIST.CHG_DTTM is '변경 일시'
/

comment on column TC_MEMBER_CHG_HIST.SITE_NO is '사이트 번호'
/

comment on column TC_MEMBER_CHG_HIST.MEMBER_NM is '회원 명'
/

comment on column TC_MEMBER_CHG_HIST.BIRTH is '생일'
/

comment on column TC_MEMBER_CHG_HIST.BORN_YEAR is '생년'
/

comment on column TC_MEMBER_CHG_HIST.BORN_MONTH is '생월'
/

comment on column TC_MEMBER_CHG_HIST.GENDER_GB_CD is '성별 구분 코드'
/

comment on column TC_MEMBER_CHG_HIST.NTN_GB_CD is '국적 구분 코드'
/

comment on column TC_MEMBER_CHG_HIST.JOIN_DTTM is '가입 일시'
/

comment on column TC_MEMBER_CHG_HIST.CERTIFY_METHOD_CD is '인증 방법 코드'
/

comment on column TC_MEMBER_CHG_HIST.EMAIL_RECV_YN is '이메일 수신 여부'
/

comment on column TC_MEMBER_CHG_HIST.SMS_RECV_YN is 'SMS 수신 여부'
/

comment on column TC_MEMBER_CHG_HIST.MEMBER_STATUS_CD is '회원 상태 코드'
/

comment on column TC_MEMBER_CHG_HIST.LOGIN_ID is '로그인 아이디'
/

comment on column TC_MEMBER_CHG_HIST.PW is '비밀번호'
/

comment on column TC_MEMBER_CHG_HIST.TEL is '전화'
/

comment on column TC_MEMBER_CHG_HIST.MOBILE is '휴대폰'
/

comment on column TC_MEMBER_CHG_HIST.EMAIL is '이메일'
/

comment on column TC_MEMBER_CHG_HIST.JOIN_PATH_CD is '가입 경로 코드'
/

comment on column TC_MEMBER_CHG_HIST.PW_CHG_DTTM is '비밀번호 변경 일시'
/

comment on column TC_MEMBER_CHG_HIST.LOGIN_FAIL_CNT is '로그인 실패 수'
/

comment on column TC_MEMBER_CHG_HIST.STRTNB_ADDR is '번지 주소'
/

comment on column TC_MEMBER_CHG_HIST.ROAD_ADDR is '도로 주소'
/

comment on column TC_MEMBER_CHG_HIST.DTL_ADDR is '상세 주소'
/

comment on column TC_MEMBER_CHG_HIST.NEW_POST_NO is '신 우편 번호'
/

comment on column TC_MEMBER_CHG_HIST.MANAGER_MEMO is '관리자 메모'
/

comment on column TC_MEMBER_CHG_HIST.REALNM_CERTIFY_YN is '실명 인증 여부'
/

comment on column TC_MEMBER_CHG_HIST.MEMBER_GRADE_NO is '회원 등급 번호'
/

comment on column TC_MEMBER_CHG_HIST.GRADE_AUTO_REARRANGE_YN is '등급 자동 산정 여부'
/

comment on column TC_MEMBER_CHG_HIST.MEMBER_CI is '회원 CI'
/

comment on column TC_MEMBER_CHG_HIST.MEMBER_DI is '회원 DI'
/

comment on column TC_MEMBER_CHG_HIST.MEMBER_GB_CD is '회원 구분 코드'
/

comment on column TC_MEMBER_CHG_HIST.ADULT_CERTIFY_YN is '성인 인증 여부'
/

comment on column TC_MEMBER_CHG_HIST.NEXT_PW_CHG_SCD_DTTM is '다음 비밀번호 변경 예정 일시'
/

comment on column TC_MEMBER_CHG_HIST.FRG_ADDR_COUNTRY is '해외 주소 COUNTRY'
/

comment on column TC_MEMBER_CHG_HIST.FRG_ADDR_CITY is '해외 주소 CITY'
/

comment on column TC_MEMBER_CHG_HIST.FRG_ADDR_STATE is '해외 주소 STATE'
/

comment on column TC_MEMBER_CHG_HIST.FRG_ADDR_ZIP_CODE is '해외 주소 ZIP CODE'
/

comment on column TC_MEMBER_CHG_HIST.FRG_ADDR_DTL1 is '해외 주소 상세1'
/

comment on column TC_MEMBER_CHG_HIST.FRG_ADDR_DTL2 is '해외 주소 상세2'
/

comment on column TC_MEMBER_CHG_HIST.JOIN_DEVICE_TYPE is '가입 장치 유형'
/

comment on column TC_MEMBER_CHG_HIST.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_CHG_HIST.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_CHG_HIST.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_CHG_HIST.UPD_DTTM is '수정 일시'
/

create table TC_MEMBER_DELIVERY
(
    MEMBER_DELIVERY_NO NUMBER not null,
    MEMBER_NO          NUMBER not null
        constraint FK_MEMBER_DELIVERY_1
            references TC_MEMBER,
    GB_NM              VARCHAR2(30),
    ADRS_NM            VARCHAR2(100),
    TEL                VARCHAR2(50),
    MOBILE             VARCHAR2(50),
    INTERPHONE         VARCHAR2(4),
    NEW_POST_NO        VARCHAR2(50),
    STRTNB_ADDR        VARCHAR2(500),
    ROAD_ADDR          VARCHAR2(500),
    DTL_ADDR           VARCHAR2(500),
    DEFAULT_YN         VARCHAR2(1),
    MEMBER_GB_CD       VARCHAR2(10),
    FRG_ADDR_COUNTRY   VARCHAR2(300),
    FRG_ADDR_CITY      VARCHAR2(300),
    FRG_ADDR_STATE     VARCHAR2(300),
    FRG_ADDR_ZIP_CODE  VARCHAR2(100),
    FRG_ADDR_DTL1      VARCHAR2(300),
    FRG_ADDR_DTL2      VARCHAR2(300),
    REGR_NO            NUMBER,
    REG_DTTM           DATE,
    UPDR_NO            NUMBER,
    UPD_DTTM           DATE,
    constraint IDX_TC_MEMBER_DELIVERY_PK
        primary key (MEMBER_DELIVERY_NO, MEMBER_NO)
)
/

comment on table TC_MEMBER_DELIVERY is '회원 배송지'
/

comment on column TC_MEMBER_DELIVERY.MEMBER_DELIVERY_NO is '회원 배송지 번호'
/

comment on column TC_MEMBER_DELIVERY.MEMBER_NO is '회원 번호'
/

comment on column TC_MEMBER_DELIVERY.GB_NM is '구분 명'
/

comment on column TC_MEMBER_DELIVERY.ADRS_NM is '수취인 명'
/

comment on column TC_MEMBER_DELIVERY.TEL is '전화'
/

comment on column TC_MEMBER_DELIVERY.MOBILE is '휴대폰'
/

comment on column TC_MEMBER_DELIVERY.INTERPHONE is '내선'
/

comment on column TC_MEMBER_DELIVERY.NEW_POST_NO is '신 우편 번호'
/

comment on column TC_MEMBER_DELIVERY.STRTNB_ADDR is '번지 주소'
/

comment on column TC_MEMBER_DELIVERY.ROAD_ADDR is '도로 주소'
/

comment on column TC_MEMBER_DELIVERY.DTL_ADDR is '상세 주소'
/

comment on column TC_MEMBER_DELIVERY.DEFAULT_YN is '기본 여부'
/

comment on column TC_MEMBER_DELIVERY.MEMBER_GB_CD is '회원 구분 코드'
/

comment on column TC_MEMBER_DELIVERY.FRG_ADDR_COUNTRY is '해외 주소 COUNTRY'
/

comment on column TC_MEMBER_DELIVERY.FRG_ADDR_CITY is '해외 주소 CITY'
/

comment on column TC_MEMBER_DELIVERY.FRG_ADDR_STATE is '해외 주소 STATE'
/

comment on column TC_MEMBER_DELIVERY.FRG_ADDR_ZIP_CODE is '해외 주소 ZIP CODE'
/

comment on column TC_MEMBER_DELIVERY.FRG_ADDR_DTL1 is '해외 주소 상세1'
/

comment on column TC_MEMBER_DELIVERY.FRG_ADDR_DTL2 is '해외 주소 상세2'
/

comment on column TC_MEMBER_DELIVERY.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_DELIVERY.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_DELIVERY.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_DELIVERY.UPD_DTTM is '수정 일시'
/

create table TC_MEMBER_GRADE
(
    MEMBER_GRADE_NO         NUMBER     not null,
    SITE_NO                 NUMBER(19) not null
        constraint FK_MEMBER_GRADE_1
            references TS_SITE,
    MEMBER_GRADE_NM         VARCHAR2(20),
    GRADE_DISP_METHOD       VARCHAR2(20),
    SELECT_ICON             NUMBER,
    TOT_BUY_AMT             NUMBER(20, 2),
    TOT_POINT               NUMBER,
    TOT_BUY_CNT             NUMBER,
    DC_USE_YN               VARCHAR2(1),
    MEMBER_GRADE_MANAGE_CD  VARCHAR2(10),
    DEL_YN                  VARCHAR2(1),
    MEMBER_GRADE_LVL        NUMBER,
    GRADE_AUTO_REARRANGE_YN VARCHAR2(1),
    REGR_NO                 NUMBER,
    REG_DTTM                DATE,
    UPDR_NO                 NUMBER,
    UPD_DTTM                DATE,
    constraint IDX_TC_MEMBER_GRADE_PK
        primary key (MEMBER_GRADE_NO, SITE_NO)
)
/

comment on table TC_MEMBER_GRADE is '회원 등급'
/

comment on column TC_MEMBER_GRADE.MEMBER_GRADE_NO is '회원 등급 번호'
/

comment on column TC_MEMBER_GRADE.SITE_NO is '사이트 번호'
/

comment on column TC_MEMBER_GRADE.MEMBER_GRADE_NM is '회원 등급 명'
/

comment on column TC_MEMBER_GRADE.GRADE_DISP_METHOD is '등급 표시 방법'
/

comment on column TC_MEMBER_GRADE.SELECT_ICON is '선택 아이콘'
/

comment on column TC_MEMBER_GRADE.TOT_BUY_AMT is '총 구매 금액'
/

comment on column TC_MEMBER_GRADE.TOT_POINT is '총 포인트'
/

comment on column TC_MEMBER_GRADE.TOT_BUY_CNT is '총 구매 건수'
/

comment on column TC_MEMBER_GRADE.DC_USE_YN is '할인 사용 여부'
/

comment on column TC_MEMBER_GRADE.MEMBER_GRADE_MANAGE_CD is '회원 등급 관리 코드'
/

comment on column TC_MEMBER_GRADE.DEL_YN is '삭제 여부'
/

comment on column TC_MEMBER_GRADE.MEMBER_GRADE_LVL is '회원 등급 레벨'
/

comment on column TC_MEMBER_GRADE.GRADE_AUTO_REARRANGE_YN is '등급 자동 산정 여부'
/

comment on column TC_MEMBER_GRADE.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_GRADE.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_GRADE.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_GRADE.UPD_DTTM is '수정 일시'
/

create table TC_MEMBER_GRADE_AUTO_REARRANGE
(
    SITE_NO            NUMBER(19) not null
        constraint IDX_TC_MEMBER_GRADE_AUTO_REARR
            primary key
        constraint FK_MEMBER_GRADE_AUTO_REARRANGE
            references TS_SITE,
    GRADE_STNDRD_CYCLE NUMBER,
    GRADE_STNDRD_DATE  NUMBER,
    GRADE_CCLT_PERIOD  NUMBER,
    LAT_REARRANGE_DTTM DATE,
    REGR_NO            NUMBER,
    REG_DTTM           DATE,
    UPDR_NO            NUMBER,
    UPD_DTTM           DATE
)
/

comment on table TC_MEMBER_GRADE_AUTO_REARRANGE is '회원 등급 자동 조정'
/

comment on column TC_MEMBER_GRADE_AUTO_REARRANGE.SITE_NO is '사이트 번호'
/

comment on column TC_MEMBER_GRADE_AUTO_REARRANGE.GRADE_STNDRD_CYCLE is '등급 기준 주기'
/

comment on column TC_MEMBER_GRADE_AUTO_REARRANGE.GRADE_STNDRD_DATE is '등급 산정 날짜'
/

comment on column TC_MEMBER_GRADE_AUTO_REARRANGE.GRADE_CCLT_PERIOD is '등급 산출 기간'
/

comment on column TC_MEMBER_GRADE_AUTO_REARRANGE.LAT_REARRANGE_DTTM is '최근 조정 일시'
/

comment on column TC_MEMBER_GRADE_AUTO_REARRANGE.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_GRADE_AUTO_REARRANGE.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_GRADE_AUTO_REARRANGE.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_GRADE_AUTO_REARRANGE.UPD_DTTM is '수정 일시'
/

create table TC_MEMBER_GRADE_BNF
(
    MEMBER_GRADE_NO     NUMBER     not null,
    MEMBER_GRADE_BNF_NO NUMBER(19) not null,
    DC_UNIT_CD          VARCHAR2(2),
    DC_VALUE            NUMBER,
    SVMN_UNIT_CD        VARCHAR2(2),
    SVMN_VALUE          NUMBER,
    SITE_NO             NUMBER(19) not null,
    USE_YN              VARCHAR2(1) default 'N',
    REGR_NO             NUMBER,
    REG_DTTM            DATE,
    UPDR_NO             NUMBER,
    DEL_DTTM            DATE,
    DELR_NO             NUMBER,
    DEL_YN              CHAR        default 'N',
    UPD_DTTM            DATE,
    constraint IDX_TC_MEMBER_GRADE_BNF_PK
        primary key (MEMBER_GRADE_NO, MEMBER_GRADE_BNF_NO),
    constraint FK_MEMBER_GRADE_BNF_1
        foreign key (MEMBER_GRADE_NO, SITE_NO) references TC_MEMBER_GRADE
)
/

comment on table TC_MEMBER_GRADE_BNF is '회원 등급 혜택'
/

comment on column TC_MEMBER_GRADE_BNF.MEMBER_GRADE_NO is '회원 등급 번호'
/

comment on column TC_MEMBER_GRADE_BNF.MEMBER_GRADE_BNF_NO is '회원 등급 혜택 번호'
/

comment on column TC_MEMBER_GRADE_BNF.DC_UNIT_CD is '할인 단위 코드'
/

comment on column TC_MEMBER_GRADE_BNF.DC_VALUE is '할인 값'
/

comment on column TC_MEMBER_GRADE_BNF.SVMN_UNIT_CD is '적립금 단위 코드'
/

comment on column TC_MEMBER_GRADE_BNF.SVMN_VALUE is '적립금 값'
/

comment on column TC_MEMBER_GRADE_BNF.SITE_NO is '사이트 번호'
/

comment on column TC_MEMBER_GRADE_BNF.USE_YN is '사용 여부'
/

comment on column TC_MEMBER_GRADE_BNF.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_GRADE_BNF.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_GRADE_BNF.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_GRADE_BNF.DEL_DTTM is '삭제 일시'
/

comment on column TC_MEMBER_GRADE_BNF.DELR_NO is '삭제자 번호'
/

comment on column TC_MEMBER_GRADE_BNF.DEL_YN is '삭제 여부'
/

comment on column TC_MEMBER_GRADE_BNF.UPD_DTTM is '수정 일시'
/

create table TC_MEMBER_LOGIN_HIST
(
    MEMBER_NO  NUMBER not null
        constraint FK_MEMBER_LOGIN_HIST_1
            references TC_MEMBER,
    LOGIN_NO   NUMBER not null,
    LOGIN_DTTM DATE,
    LOGIN_IP   VARCHAR2(15),
    REGR_NO    NUMBER,
    REG_DTTM   DATE,
    UPDR_NO    NUMBER,
    UPD_DTTM   DATE,
    constraint IDX_TC_MEMBER_LOGIN_HIST_PK
        primary key (MEMBER_NO, LOGIN_NO)
)
/

comment on table TC_MEMBER_LOGIN_HIST is '회원 로그인 이력'
/

comment on column TC_MEMBER_LOGIN_HIST.MEMBER_NO is '회원 번호'
/

comment on column TC_MEMBER_LOGIN_HIST.LOGIN_NO is '로그인 번호'
/

comment on column TC_MEMBER_LOGIN_HIST.LOGIN_DTTM is '로그인 일시'
/

comment on column TC_MEMBER_LOGIN_HIST.LOGIN_IP is '로그인 IP'
/

comment on column TC_MEMBER_LOGIN_HIST.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_LOGIN_HIST.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_LOGIN_HIST.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_LOGIN_HIST.UPD_DTTM is '수정 일시'
/

create table TC_MEMBER_POINT
(
    MEMBER_NO        NUMBER not null
        constraint FK_MEMBER_POINT_1
            references TC_MEMBER,
    POINT_SEQ        NUMBER not null,
    POINT_GB_CD      VARCHAR2(10),
    POINT_TYPE_CD    VARCHAR2(10),
    POINT_REASON_CD  VARCHAR2(10),
    ETC_REASON       VARCHAR2(500),
    PRC_POINT        NUMBER(20, 2),
    VALID_PERIOD     VARCHAR2(8),
    POINT_USE_PSB_YN VARCHAR2(1),
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE,
    constraint IDX_TC_MEMBER_POINT_PK
        primary key (MEMBER_NO, POINT_SEQ)
)
/

comment on table TC_MEMBER_POINT is '회원 포인트'
/

comment on column TC_MEMBER_POINT.MEMBER_NO is '회원 번호'
/

comment on column TC_MEMBER_POINT.POINT_SEQ is '포인트 순번'
/

comment on column TC_MEMBER_POINT.POINT_GB_CD is '포인트 구분 코드'
/

comment on column TC_MEMBER_POINT.POINT_TYPE_CD is '포인트 유형 코드'
/

comment on column TC_MEMBER_POINT.POINT_REASON_CD is '포인트 사유 코드'
/

comment on column TC_MEMBER_POINT.ETC_REASON is '기타 사유'
/

comment on column TC_MEMBER_POINT.PRC_POINT is '처리 포인트'
/

comment on column TC_MEMBER_POINT.VALID_PERIOD is '유효 기간'
/

comment on column TC_MEMBER_POINT.POINT_USE_PSB_YN is '포인트 사용 가능 여부'
/

comment on column TC_MEMBER_POINT.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_POINT.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_POINT.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_POINT.UPD_DTTM is '수정 일시'
/

create table TC_MEMBER_REFUND_ACT
(
    MEMBER_NO      NUMBER not null
        constraint FK_MEMBER_REFUND_ACT_1
            references TC_MEMBER,
    REFUND_ACT_SEQ NUMBER not null,
    BANK_CD        VARCHAR2(2),
    ACT_NO         VARCHAR2(50),
    HOLDER_NM      VARCHAR2(50),
    REGR_NO        NUMBER,
    REG_DTTM       DATE,
    UPDR_NO        NUMBER,
    UPD_DTTM       DATE,
    constraint IDX_TC_MEMBER_REFUND_ACT_PK
        primary key (MEMBER_NO, REFUND_ACT_SEQ)
)
/

comment on table TC_MEMBER_REFUND_ACT is '회원 환불 계좌'
/

comment on column TC_MEMBER_REFUND_ACT.MEMBER_NO is '회원 번호'
/

comment on column TC_MEMBER_REFUND_ACT.REFUND_ACT_SEQ is '환불 계좌 순번'
/

comment on column TC_MEMBER_REFUND_ACT.BANK_CD is '은행 코드'
/

comment on column TC_MEMBER_REFUND_ACT.ACT_NO is '계좌 번호'
/

comment on column TC_MEMBER_REFUND_ACT.HOLDER_NM is '예금주 명'
/

comment on column TC_MEMBER_REFUND_ACT.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_REFUND_ACT.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_REFUND_ACT.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_REFUND_ACT.UPD_DTTM is '수정 일시'
/

create table TC_MEMBER_SVMN_PVD
(
    MEMBER_NO       NUMBER not null
        constraint FK_MEMBER_SVMN_PVD_1
            references TC_MEMBER,
    SVMN_SEQ        NUMBER not null,
    SVMN_TYPE_CD    VARCHAR2(10),
    SVMN_REASON_CD  VARCHAR2(10),
    ETC_REASON      VARCHAR2(500),
    PRC_AMT         NUMBER,
    VALID_PERIOD    VARCHAR2(8),
    ORD_NO          NUMBER(16),
    USE_PSB_AMT     NUMBER,
    SVMN_USE_PSB_YN VARCHAR2(1),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    constraint IDX_TC_MEMBER_SVMN_PVD_PK
        primary key (MEMBER_NO, SVMN_SEQ)
)
/

comment on table TC_MEMBER_SVMN_PVD is '회원 적립금 지급'
/

comment on column TC_MEMBER_SVMN_PVD.MEMBER_NO is '회원 번호'
/

comment on column TC_MEMBER_SVMN_PVD.SVMN_SEQ is '적립금 순번'
/

comment on column TC_MEMBER_SVMN_PVD.SVMN_TYPE_CD is '적립금 유형 코드'
/

comment on column TC_MEMBER_SVMN_PVD.SVMN_REASON_CD is '적립금 사유 코드'
/

comment on column TC_MEMBER_SVMN_PVD.ETC_REASON is '기타 사유'
/

comment on column TC_MEMBER_SVMN_PVD.PRC_AMT is '처리 금액'
/

comment on column TC_MEMBER_SVMN_PVD.VALID_PERIOD is '유효 기간'
/

comment on column TC_MEMBER_SVMN_PVD.ORD_NO is '주문 번호'
/

comment on column TC_MEMBER_SVMN_PVD.USE_PSB_AMT is '사용 가능 금액'
/

comment on column TC_MEMBER_SVMN_PVD.SVMN_USE_PSB_YN is '적립금 사용 가능 여부'
/

comment on column TC_MEMBER_SVMN_PVD.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_SVMN_PVD.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_SVMN_PVD.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_SVMN_PVD.UPD_DTTM is '수정 일시'
/

create index IDX_TC_MEMBER_SVMN_PVD_001
    on TC_MEMBER_SVMN_PVD (MEMBER_NO)
/

create index IDX_TC_MEMBER_SVMN_PVD_002
    on TC_MEMBER_SVMN_PVD (SVMN_USE_PSB_YN)
/

create table TC_MEMBER_SVMN_USE
(
    USE_NO         NUMBER not null,
    MEMBER_NO      NUMBER not null,
    SVMN_SEQ       NUMBER not null,
    SVMN_TYPE_CD   VARCHAR2(10),
    SVMN_REASON_CD VARCHAR2(10),
    ETC_REASON     VARCHAR2(500),
    PRC_AMT        NUMBER,
    ORD_NO         NUMBER(16),
    DEDUCT_GB_CD   VARCHAR2(2),
    REGR_NO        NUMBER,
    REG_DTTM       DATE,
    UPDR_NO        NUMBER,
    UPD_DTTM       DATE,
    ERP_ORD_NO     VARCHAR2(50),
    constraint IDX_TC_MEMBER_SVMN_USE_PK
        primary key (USE_NO, MEMBER_NO),
    constraint FK_MEMBER_SVMN_USE_1
        foreign key (MEMBER_NO, SVMN_SEQ) references TC_MEMBER_SVMN_PVD
)
/

comment on table TC_MEMBER_SVMN_USE is '회원 적립금 사용'
/

comment on column TC_MEMBER_SVMN_USE.USE_NO is '사용 번호'
/

comment on column TC_MEMBER_SVMN_USE.MEMBER_NO is '회원 번호'
/

comment on column TC_MEMBER_SVMN_USE.SVMN_SEQ is '적립금 순번'
/

comment on column TC_MEMBER_SVMN_USE.SVMN_TYPE_CD is '적립금 유형 코드'
/

comment on column TC_MEMBER_SVMN_USE.SVMN_REASON_CD is '적립금 사유 코드'
/

comment on column TC_MEMBER_SVMN_USE.ETC_REASON is '기타 사유'
/

comment on column TC_MEMBER_SVMN_USE.PRC_AMT is '처리 금액'
/

comment on column TC_MEMBER_SVMN_USE.ORD_NO is '주문 번호'
/

comment on column TC_MEMBER_SVMN_USE.DEDUCT_GB_CD is '차감 구분 코드'
/

comment on column TC_MEMBER_SVMN_USE.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_SVMN_USE.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_SVMN_USE.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_SVMN_USE.UPD_DTTM is '수정 일시'
/

comment on column TC_MEMBER_SVMN_USE.ERP_ORD_NO is 'ERP 주문 번호'
/

create index IDX_TC_MEMBER_SVMN_USE_001
    on TC_MEMBER_SVMN_USE (MEMBER_NO)
/

create table TC_MEMBER_SVMN_USE_DTL
(
    USE_DTL_NO  NUMBER not null,
    USE_NO      NUMBER not null,
    MEMBER_NO   NUMBER not null,
    PRC_AMT     NUMBER,
    ORD_NO      NUMBER(16),
    ORD_DTL_SEQ NUMBER,
    REGR_NO     NUMBER,
    REG_DTTM    DATE,
    UPDR_NO     NUMBER,
    UPD_DTTM    DATE,
    constraint IDX_TC_MEMBER_SVMN_USE_DTL_PK
        primary key (USE_DTL_NO, USE_NO, MEMBER_NO),
    constraint R_1629
        foreign key (USE_NO, MEMBER_NO) references TC_MEMBER_SVMN_USE
)
/

comment on table TC_MEMBER_SVMN_USE_DTL is '회원 적립금 사용 상세'
/

comment on column TC_MEMBER_SVMN_USE_DTL.USE_DTL_NO is '사용 상세 번호'
/

comment on column TC_MEMBER_SVMN_USE_DTL.USE_NO is '사용 번호'
/

comment on column TC_MEMBER_SVMN_USE_DTL.MEMBER_NO is '회원 번호'
/

comment on column TC_MEMBER_SVMN_USE_DTL.PRC_AMT is '처리 금액'
/

comment on column TC_MEMBER_SVMN_USE_DTL.ORD_NO is '주문 번호'
/

comment on column TC_MEMBER_SVMN_USE_DTL.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TC_MEMBER_SVMN_USE_DTL.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_SVMN_USE_DTL.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_SVMN_USE_DTL.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_SVMN_USE_DTL.UPD_DTTM is '수정 일시'
/

create table TC_PRESCRIPTION_INFO
(
    MEMBER_NO                NUMBER                  not null
        constraint R_1617
            references TC_MEMBER,
    PRESCRIPTION_NO          NUMBER                  not null,
    CHECKUP_DT               DATE,
    CHECKUP_INSTITUTE_NM     VARCHAR2(50),
    PRESCRIPTION_FILE_PATH   VARCHAR2(300),
    PRESCRIPTION_FILE_NM     VARCHAR2(300),
    PRESCRIPTION_FILE_SIZE   NUMBER,
    PRESCRIPTION_ORG_FILE_NM VARCHAR2(300),
    DEL_YN                   VARCHAR2(1) default 'N' not null,
    REGR_NO                  NUMBER,
    REG_DTTM                 DATE,
    UPDR_NO                  NUMBER,
    UPD_DTTM                 DATE,
    constraint IDX_TC_PRESCRIPTION_INFO_PK
        primary key (PRESCRIPTION_NO, MEMBER_NO)
)
/

comment on table TC_PRESCRIPTION_INFO is '처방전 정보'
/

comment on column TC_PRESCRIPTION_INFO.MEMBER_NO is '회원 번호'
/

comment on column TC_PRESCRIPTION_INFO.PRESCRIPTION_NO is '처방전 번호'
/

comment on column TC_PRESCRIPTION_INFO.CHECKUP_DT is '검사 일자'
/

comment on column TC_PRESCRIPTION_INFO.CHECKUP_INSTITUTE_NM is '검사 기관 명'
/

comment on column TC_PRESCRIPTION_INFO.PRESCRIPTION_FILE_PATH is '처방전 파일 경로'
/

comment on column TC_PRESCRIPTION_INFO.PRESCRIPTION_FILE_NM is '처방전 파일 명'
/

comment on column TC_PRESCRIPTION_INFO.PRESCRIPTION_FILE_SIZE is '처방전 파일 사이즈'
/

comment on column TC_PRESCRIPTION_INFO.PRESCRIPTION_ORG_FILE_NM is '처방전 원본 파일 명'
/

comment on column TC_PRESCRIPTION_INFO.DEL_YN is '삭제 여부'
/

comment on column TC_PRESCRIPTION_INFO.REGR_NO is '등록자 번호'
/

comment on column TC_PRESCRIPTION_INFO.REG_DTTM is '등록 일시'
/

comment on column TC_PRESCRIPTION_INFO.UPDR_NO is '수정자 번호'
/

comment on column TC_PRESCRIPTION_INFO.UPD_DTTM is '수정 일시'
/

create table TC_SNS_INFO
(
    SNS_TYPE_CD VARCHAR2(10) not null,
    SITE_NO     NUMBER(19)   not null,
    USE_YN      VARCHAR2(1),
    APPLY_KIND  VARCHAR2(20),
    VALUE_1     VARCHAR2(50),
    VALUE_2     VARCHAR2(50),
    VALUE_3     VARCHAR2(50),
    REGR_NO     NUMBER,
    REG_DTTM    DATE,
    UPDR_NO     NUMBER,
    UPD_DTTM    DATE
)
/

comment on table TC_SNS_INFO is 'SNS ？뺣낫'
/

comment on column TC_SNS_INFO.SNS_TYPE_CD is 'SNS ？좏삎 肄붾뱶'
/

comment on column TC_SNS_INFO.SITE_NO is '？ъ씠？？踰덊샇'
/

comment on column TC_SNS_INFO.USE_YN is '？ъ슜 ？щ？'
/

comment on column TC_SNS_INFO.APPLY_KIND is '？곸슜 醫낅쪟'
/

comment on column TC_SNS_INFO.VALUE_1 is '媛？1'
/

comment on column TC_SNS_INFO.VALUE_2 is '媛？2'
/

comment on column TC_SNS_INFO.VALUE_3 is '媛？3'
/

comment on column TC_SNS_INFO.REGR_NO is '？깅줉？？踰덊샇'
/

comment on column TC_SNS_INFO.REG_DTTM is '？깅줉 ？쇱떆'
/

comment on column TC_SNS_INFO.UPDR_NO is '？섏젙？？踰덊샇'
/

comment on column TC_SNS_INFO.UPD_DTTM is '？섏젙 ？쇱떆'
/

create unique index IDX_TC_SNS_INFO_PK
    on TC_SNS_INFO (SNS_TYPE_CD, SITE_NO)
/

create table TD_BANNER
(
    BANNER_NO              NUMBER(16) not null,
    SITE_NO                NUMBER(19) not null
        constraint FK_BANNER_1
            references TS_SITE,
    SKIN_NO                NUMBER(16),
    PC_GB_CD               VARCHAR2(1),
    BANNER_MENU_CD         VARCHAR2(3) default NULL,
    BANNER_AREA_CD         VARCHAR2(6) default NULL,
    BANNER_NM              VARCHAR2(255),
    BANNER_DSCRT           VARCHAR2(255),
    DISP_START_DTTM        VARCHAR2(14),
    DISP_END_DTTM          VARCHAR2(14),
    LINK_URL               VARCHAR2(255),
    DISP_LINK_CD           VARCHAR2(1),
    FILE_PATH              VARCHAR2(300),
    ORG_FILE_NM            VARCHAR2(300),
    FILE_NM                VARCHAR2(300),
    FILE_SIZE              NUMBER,
    SORT_SEQ               NUMBER,
    DISP_YN                VARCHAR2(1),
    REG_DTTM               DATE,
    REGR_NO                NUMBER,
    UPD_DTTM               DATE,
    UPDR_NO                NUMBER,
    TOP_BANNER_COLOR_VALUE VARCHAR2(20),
    constraint IDX_TD_BANNER_PK
        primary key (BANNER_NO, SITE_NO)
)
/

comment on table TD_BANNER is '배너'
/

comment on column TD_BANNER.BANNER_NO is '배너 번호'
/

comment on column TD_BANNER.SITE_NO is '사이트 번호'
/

comment on column TD_BANNER.SKIN_NO is '스킨 번호'
/

comment on column TD_BANNER.PC_GB_CD is 'PC 구분 코드'
/

comment on column TD_BANNER.BANNER_MENU_CD is '배너 메뉴 코드'
/

comment on column TD_BANNER.BANNER_AREA_CD is '배너 영역 코드'
/

comment on column TD_BANNER.BANNER_NM is '배너 명'
/

comment on column TD_BANNER.BANNER_DSCRT is '배너 설명'
/

comment on column TD_BANNER.DISP_START_DTTM is '전시 시작 일시'
/

comment on column TD_BANNER.DISP_END_DTTM is '전시 종료 일시'
/

comment on column TD_BANNER.LINK_URL is '링크 URL'
/

comment on column TD_BANNER.DISP_LINK_CD is '전시 링크 코드'
/

comment on column TD_BANNER.FILE_PATH is '파일 경로'
/

comment on column TD_BANNER.ORG_FILE_NM is '원본 파일 명'
/

comment on column TD_BANNER.FILE_NM is '파일 명'
/

comment on column TD_BANNER.FILE_SIZE is '파일 사이즈'
/

comment on column TD_BANNER.SORT_SEQ is '정렬 순서'
/

comment on column TD_BANNER.DISP_YN is '전시 여부'
/

comment on column TD_BANNER.REG_DTTM is '등록 일시'
/

comment on column TD_BANNER.REGR_NO is '등록자 번호'
/

comment on column TD_BANNER.UPD_DTTM is '수정 일시'
/

comment on column TD_BANNER.UPDR_NO is '수정자 번호'
/

comment on column TD_BANNER.TOP_BANNER_COLOR_VALUE is '상단 배너 색상 값'
/

create table TD_DISP
(
    DISP_NO      NUMBER(16) not null,
    SITE_NO      NUMBER(19) not null
        constraint FK_DISP_1
            references TS_SITE,
    DISP_NM      VARCHAR2(255),
    DISP_CD      VARCHAR2(5),
    DISP_CD_NM   VARCHAR2(255),
    LINK_URL     VARCHAR2(255),
    DISP_LINK_CD VARCHAR2(1),
    FILE_PATH    VARCHAR2(300),
    ORG_FILE_NM  VARCHAR2(300),
    FILE_NM      VARCHAR2(300),
    FILE_SIZE    NUMBER,
    SORT_SEQ     NUMBER,
    DISP_YN      VARCHAR2(1),
    REG_DTTM     DATE,
    REGR_NO      NUMBER,
    UPD_DTTM     DATE,
    UPDR_NO      NUMBER,
    constraint IDX_TD_DISP_PK
        primary key (DISP_NO, SITE_NO)
)
/

comment on table TD_DISP is '전시'
/

comment on column TD_DISP.DISP_NO is '전시 번호'
/

comment on column TD_DISP.SITE_NO is '사이트 번호'
/

comment on column TD_DISP.DISP_NM is '전시 명'
/

comment on column TD_DISP.DISP_CD is '전시 코드'
/

comment on column TD_DISP.DISP_CD_NM is '전시 코드 명'
/

comment on column TD_DISP.LINK_URL is '링크 URL'
/

comment on column TD_DISP.DISP_LINK_CD is '전시 링크 코드'
/

comment on column TD_DISP.FILE_PATH is '파일 경로'
/

comment on column TD_DISP.ORG_FILE_NM is '원본 파일 명'
/

comment on column TD_DISP.FILE_NM is '파일 명'
/

comment on column TD_DISP.FILE_SIZE is '파일 사이즈'
/

comment on column TD_DISP.SORT_SEQ is '정렬 순서'
/

comment on column TD_DISP.DISP_YN is '전시 여부'
/

comment on column TD_DISP.REG_DTTM is '등록 일시'
/

comment on column TD_DISP.REGR_NO is '등록자 번호'
/

comment on column TD_DISP.UPD_DTTM is '수정 일시'
/

comment on column TD_DISP.UPDR_NO is '수정자 번호'
/

create table TD_SKIN
(
    SKIN_NO         NUMBER(16) not null,
    SITE_NO         NUMBER(19) not null
        constraint FK_SKIN_1
            references TS_SITE,
    SKIN_ID         VARCHAR2(100),
    PC_GB_CD        VARCHAR2(1),
    ORG_SKIN_NO     NUMBER(16),
    DEFAULT_SKIN_YN VARCHAR2(1),
    SKIN_NM         VARCHAR2(100),
    IMG_NM          VARCHAR2(255),
    IMG_PATH        VARCHAR2(255),
    FOLDER_PATH     VARCHAR2(255),
    ORG_FOLDER_PATH VARCHAR2(300),
    APPLY_SKIN_YN   VARCHAR2(1),
    WORK_SKIN_YN    VARCHAR2(1),
    DEL_YN          VARCHAR2(1),
    REG_DTTM        DATE,
    REGR_NO         NUMBER,
    UPD_DTTM        DATE,
    UPDR_NO         NUMBER,
    constraint IDX_TD_SKIN_PK
        primary key (SKIN_NO, SITE_NO)
)
/

comment on table TD_SKIN is '스킨'
/

comment on column TD_SKIN.SKIN_NO is '스킨 번호'
/

comment on column TD_SKIN.SITE_NO is '사이트 번호'
/

comment on column TD_SKIN.SKIN_ID is '스킨 아이디'
/

comment on column TD_SKIN.PC_GB_CD is 'PC 구분 코드'
/

comment on column TD_SKIN.ORG_SKIN_NO is '원본 스킨 번호'
/

comment on column TD_SKIN.DEFAULT_SKIN_YN is '기본 스킨 여부'
/

comment on column TD_SKIN.SKIN_NM is '스킨 명'
/

comment on column TD_SKIN.IMG_NM is '이미지 명'
/

comment on column TD_SKIN.IMG_PATH is '이미지 경로'
/

comment on column TD_SKIN.FOLDER_PATH is '폴더 경로'
/

comment on column TD_SKIN.ORG_FOLDER_PATH is '원본 폴더 경로'
/

comment on column TD_SKIN.APPLY_SKIN_YN is '적용 스킨 여부'
/

comment on column TD_SKIN.WORK_SKIN_YN is '작업 스킨 여부'
/

comment on column TD_SKIN.DEL_YN is '삭제 여부'
/

comment on column TD_SKIN.REG_DTTM is '등록 일시'
/

comment on column TD_SKIN.REGR_NO is '등록자 번호'
/

comment on column TD_SKIN.UPD_DTTM is '수정 일시'
/

comment on column TD_SKIN.UPDR_NO is '수정자 번호'
/

create table TG_BRAND
(
    BRAND_NO               NUMBER(19) not null
        constraint IDX_TG_BRAND_PK
            primary key,
    SITE_NO                NUMBER
        constraint FK_BRAND_1
            references TS_SITE
                on delete set null,
    BRAND_NM               VARCHAR2(50),
    BRAND_EXHBTION_TYPE_CD VARCHAR2(1),
    DISP_YN                VARCHAR2(1),
    MAIN_DISP_YN           VARCHAR2(1),
    BRAND_IMG_PATH         VARCHAR2(300),
    BRAND_IMG_NM           VARCHAR2(300),
    MOUSEOVER_IMG_PATH     VARCHAR2(300),
    MOUSEOVER_IMG_NM       VARCHAR2(300),
    BRAND_LIST_IMG_PATH    VARCHAR2(300),
    BRAND_LIST_IMG_NM      VARCHAR2(300),
    BRAND_DTL_IMG_PATH     VARCHAR2(300),
    BRAND_DTL_IMG_NM       VARCHAR2(300),
    BRAND_LOGO_IMG_PATH    VARCHAR2(300),
    BRAND_LOGO_IMG_NM      VARCHAR2(300),
    REGR_NO                NUMBER,
    REG_DTTM               DATE,
    UPDR_NO                NUMBER,
    UPD_DTTM               DATE,
    BRAND_ENNM             VARCHAR2(50),
    GOODS_TYPE_CD          VARCHAR2(300) default NULL
)
/

comment on table TG_BRAND is '브랜드'
/

comment on column TG_BRAND.BRAND_NO is '브랜드 번호'
/

comment on column TG_BRAND.SITE_NO is '사이트 번호'
/

comment on column TG_BRAND.BRAND_NM is '브랜드 명'
/

comment on column TG_BRAND.BRAND_EXHBTION_TYPE_CD is '브랜드 진열 유형 코드'
/

comment on column TG_BRAND.DISP_YN is '전시 여부'
/

comment on column TG_BRAND.MAIN_DISP_YN is '메인 전시 여부'
/

comment on column TG_BRAND.BRAND_IMG_PATH is '브랜드 이미지 경로'
/

comment on column TG_BRAND.BRAND_IMG_NM is '브랜드 이미지 명'
/

comment on column TG_BRAND.MOUSEOVER_IMG_PATH is '마우스오버 이미지 경로'
/

comment on column TG_BRAND.MOUSEOVER_IMG_NM is '마우스오버 이미지 명'
/

comment on column TG_BRAND.BRAND_LIST_IMG_PATH is '브랜드 목록 이미지 경로'
/

comment on column TG_BRAND.BRAND_LIST_IMG_NM is '브랜드 목록 이미지 명'
/

comment on column TG_BRAND.BRAND_DTL_IMG_PATH is '브랜드 상세 이미지 경로'
/

comment on column TG_BRAND.BRAND_DTL_IMG_NM is '브랜드 상세 이미지 명'
/

comment on column TG_BRAND.BRAND_LOGO_IMG_PATH is '브랜드 로고 이미지 경로'
/

comment on column TG_BRAND.BRAND_LOGO_IMG_NM is '브랜드 로고 이미지 명'
/

comment on column TG_BRAND.REGR_NO is '등록자 번호'
/

comment on column TG_BRAND.REG_DTTM is '등록 일시'
/

comment on column TG_BRAND.UPDR_NO is '수정자 번호'
/

comment on column TG_BRAND.UPD_DTTM is '수정 일시'
/

comment on column TG_BRAND.BRAND_ENNM is '브랜드 영문명'
/

comment on column TG_BRAND.GOODS_TYPE_CD is '상품 유형 코드'
/

create table TG_ICON
(
    ICON_NO      NUMBER(19) not null
        constraint IDX_TG_ICON_PK
            primary key,
    SITE_NO      NUMBER(19)
        constraint FK_ICON_1
            references TS_SITE
                on delete set null,
    ICON_TYPE_CD VARCHAR2(1),
    ICON_DISPNM  VARCHAR2(50),
    IMG_PATH     VARCHAR2(300),
    IMG_NM       VARCHAR2(50),
    PRIORRANK    NUMBER,
    REGR_NO      NUMBER,
    REG_DTTM     DATE,
    UPDR_NO      NUMBER,
    UPD_DTTM     DATE
)
/

comment on table TG_ICON is '아이콘'
/

comment on column TG_ICON.ICON_NO is '아이콘 번호'
/

comment on column TG_ICON.SITE_NO is '사이트 번호'
/

comment on column TG_ICON.ICON_TYPE_CD is '아이콘 유형 코드'
/

comment on column TG_ICON.ICON_DISPNM is '아이콘 표시명'
/

comment on column TG_ICON.IMG_PATH is '이미지 경로'
/

comment on column TG_ICON.IMG_NM is '이미지 명'
/

comment on column TG_ICON.PRIORRANK is '우선순위'
/

comment on column TG_ICON.REGR_NO is '등록자 번호'
/

comment on column TG_ICON.REG_DTTM is '등록 일시'
/

comment on column TG_ICON.UPDR_NO is '수정자 번호'
/

comment on column TG_ICON.UPD_DTTM is '수정 일시'
/

create table TG_GOODS_ICON
(
    ICON_NO  NUMBER(19)   not null
        constraint FK_GOODS_ICON_2
            references TG_ICON,
    GOODS_NO VARCHAR2(16) not null,
    REGR_NO  NUMBER,
    REG_DTTM DATE,
    UPDR_NO  NUMBER,
    UPD_DTTM DATE,
    constraint IDX_TG_GOODS_ICON_PK
        primary key (ICON_NO, GOODS_NO)
)
/

comment on table TG_GOODS_ICON is '상품 아이콘'
/

comment on column TG_GOODS_ICON.ICON_NO is '아이콘 번호'
/

comment on column TG_GOODS_ICON.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_ICON.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_ICON.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_ICON.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_ICON.UPD_DTTM is '수정 일시'
/

create table TG_OPT
(
    OPT_NO   NUMBER(19) not null
        constraint IDX_TG_OPT_PK
            primary key,
    SITE_NO  NUMBER(19)
        constraint FK_OPT_1
            references TS_SITE
                on delete set null,
    OPT_NM   VARCHAR2(50),
    REG_SEQ  NUMBER(19),
    OPT_SEQ  NUMBER,
    USE_YN   VARCHAR2(1),
    REGR_NO  NUMBER,
    REG_DTTM DATE,
    UPDR_NO  NUMBER,
    UPD_DTTM DATE
)
/

comment on table TG_OPT is '옵션'
/

comment on column TG_OPT.OPT_NO is '옵션 번호'
/

comment on column TG_OPT.SITE_NO is '사이트 번호'
/

comment on column TG_OPT.OPT_NM is '옵션 명'
/

comment on column TG_OPT.REG_SEQ is '등록 순번'
/

comment on column TG_OPT.OPT_SEQ is '옵션 순번'
/

comment on column TG_OPT.USE_YN is '사용 여부'
/

comment on column TG_OPT.REGR_NO is '등록자 번호'
/

comment on column TG_OPT.REG_DTTM is '등록 일시'
/

comment on column TG_OPT.UPDR_NO is '수정자 번호'
/

comment on column TG_OPT.UPD_DTTM is '수정 일시'
/

create table TG_GOODS_OPT
(
    OPT_NO   NUMBER(19)   not null
        constraint FK_GOODS_OPT_2
            references TG_OPT,
    GOODS_NO VARCHAR2(16) not null,
    REGR_NO  NUMBER,
    REG_DTTM DATE,
    UPDR_NO  NUMBER,
    UPD_DTTM DATE,
    constraint IDX_TG_GOODS_OPT_PK
        primary key (OPT_NO, GOODS_NO)
)
/

comment on table TG_GOODS_OPT is '상품 옵션'
/

comment on column TG_GOODS_OPT.OPT_NO is '옵션 번호'
/

comment on column TG_GOODS_OPT.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_OPT.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_OPT.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_OPT.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_OPT.UPD_DTTM is '수정 일시'
/

create table TP_COUPON
(
    COUPON_NO                      NUMBER     not null
        constraint IDX_TP_COUPON_PK
            primary key,
    SITE_NO                        NUMBER(19) not null
        constraint FK_COUPON_1
            references TS_SITE,
    COUPON_KIND_CD                 VARCHAR2(2),
    COUPON_QTT_LIMIT_CD            VARCHAR2(2),
    COUPON_QTT_LIMIT_CNT           NUMBER,
    COUPON_NM                      VARCHAR2(100),
    COUPON_DSCRT                   VARCHAR2(500),
    COUPON_SOLO_USE_YN             VARCHAR2(1),
    COUPON_BNF_CD                  VARCHAR2(2),
    COUPON_BNF_VALUE               NUMBER(20),
    COUPON_BNF_DC_AMT              NUMBER(20),
    COUPON_DUPLT_DWLD_PSB_YN       VARCHAR2(1),
    COUPON_APPLY_PERIOD_CD         VARCHAR2(2),
    APPLY_START_DTTM               DATE,
    APPLY_END_DTTM                 DATE,
    COUPON_APPLY_ISSUE_AF_PERIOD   NUMBER,
    COUPON_APPLY_SCOPE_CD          VARCHAR2(2),
    COUPON_APPLY_LIMIT_CD          VARCHAR2(2),
    COUPON_APPLY_TARGET_CD         VARCHAR2(2),
    COUPON_USE_LIMIT_AMT           NUMBER(20),
    COUPON_WEB_IMG_CD              VARCHAR2(2),
    COUPON_WEB_IMG_PATH            VARCHAR2(255),
    COUPON_WEB_IMG                 VARCHAR2(255),
    COUPON_MOBILE_IMG_CD           VARCHAR2(2),
    COUPON_MOBILE_IMG_PATH         VARCHAR2(255),
    COUPON_MOBILE_IMG              VARCHAR2(255),
    COUPON_USE_YN                  VARCHAR2(1),
    REGR_NO                        NUMBER,
    REG_DTTM                       DATE,
    UPDR_NO                        NUMBER,
    UPD_DTTM                       DATE,
    DEL_YN                         VARCHAR2(1),
    DELR_NO                        NUMBER,
    DEL_DTTM                       DATE,
    CP_LOADRATE                    NUMBER,
    RSV_ONLY_YN                    VARCHAR2(1),
    OFFLINE_ONLY_YN                VARCHAR2(1),
    GOODS_TYPE_CD                  VARCHAR2(2),
    AGE_CD                         VARCHAR2(100) default NULL,
    COUPON_APPLY_CONFIRM_AF_PERIOD NUMBER,
    COUPON_BNF_TXT                 VARCHAR2(100)
)
/

comment on table TP_COUPON is '쿠폰'
/

comment on column TP_COUPON.COUPON_NO is '쿠폰 번호'
/

comment on column TP_COUPON.SITE_NO is '사이트 번호'
/

comment on column TP_COUPON.COUPON_KIND_CD is '쿠폰 종류 코드'
/

comment on column TP_COUPON.COUPON_QTT_LIMIT_CD is '쿠폰 수량 제한 코드'
/

comment on column TP_COUPON.COUPON_QTT_LIMIT_CNT is '쿠폰 수량 제한 건수'
/

comment on column TP_COUPON.COUPON_NM is '쿠폰 명'
/

comment on column TP_COUPON.COUPON_DSCRT is '쿠폰 설명'
/

comment on column TP_COUPON.COUPON_SOLO_USE_YN is '쿠폰 단독 사용 여부'
/

comment on column TP_COUPON.COUPON_BNF_CD is '쿠폰 혜택 코드'
/

comment on column TP_COUPON.COUPON_BNF_VALUE is '쿠폰 혜택 값'
/

comment on column TP_COUPON.COUPON_BNF_DC_AMT is '쿠폰 최대 할인 금액'
/

comment on column TP_COUPON.COUPON_DUPLT_DWLD_PSB_YN is '쿠폰 중복 다운로드 가능 여부'
/

comment on column TP_COUPON.COUPON_APPLY_PERIOD_CD is '쿠폰 적용 기간 코드'
/

comment on column TP_COUPON.APPLY_START_DTTM is '적용 시작 일시'
/

comment on column TP_COUPON.APPLY_END_DTTM is '적용 종료 일시'
/

comment on column TP_COUPON.COUPON_APPLY_ISSUE_AF_PERIOD is '적용 발급 후 기간'
/

comment on column TP_COUPON.COUPON_APPLY_SCOPE_CD is '적용 범위 코드'
/

comment on column TP_COUPON.COUPON_APPLY_LIMIT_CD is '대상 예외 코드'
/

comment on column TP_COUPON.COUPON_APPLY_TARGET_CD is '적용 대상 코드'
/

comment on column TP_COUPON.COUPON_USE_LIMIT_AMT is '사용 제한 금액'
/

comment on column TP_COUPON.COUPON_WEB_IMG_CD is '쿠폰 웹 이미지 코드'
/

comment on column TP_COUPON.COUPON_WEB_IMG_PATH is '쿠폰 웹 이미지 경로'
/

comment on column TP_COUPON.COUPON_WEB_IMG is '쿠폰 웹 이미지'
/

comment on column TP_COUPON.COUPON_MOBILE_IMG_CD is '쿠폰 모바일 이미지 코드'
/

comment on column TP_COUPON.COUPON_MOBILE_IMG_PATH is '쿠폰 모바일 이미지 경로'
/

comment on column TP_COUPON.COUPON_MOBILE_IMG is '쿠폰 모바일 이미지'
/

comment on column TP_COUPON.COUPON_USE_YN is '쿠폰 사용 여부'
/

comment on column TP_COUPON.REGR_NO is '등록자 번호'
/

comment on column TP_COUPON.REG_DTTM is '등록 일시'
/

comment on column TP_COUPON.UPDR_NO is '수정자 번호'
/

comment on column TP_COUPON.UPD_DTTM is '수정 일시'
/

comment on column TP_COUPON.DEL_YN is '삭제 여부'
/

comment on column TP_COUPON.DELR_NO is '삭제자 번호'
/

comment on column TP_COUPON.DEL_DTTM is '삭제 일시'
/

comment on column TP_COUPON.CP_LOADRATE is '쿠폰 부담율'
/

comment on column TP_COUPON.RSV_ONLY_YN is '예약 전용 여부'
/

comment on column TP_COUPON.OFFLINE_ONLY_YN is '오프라인 전용 여부'
/

comment on column TP_COUPON.GOODS_TYPE_CD is '상품 유형 코드'
/

comment on column TP_COUPON.AGE_CD is '연령 코드'
/

comment on column TP_COUPON.COUPON_APPLY_CONFIRM_AF_PERIOD is '적용 구매확정 후 기간'
/

comment on column TP_COUPON.COUPON_BNF_TXT is '쿠폰 혜택 내용'
/

create table TP_COUPON_TARGET_GOODS
(
    APPLY_SEQ             NUMBER not null,
    COUPON_NO             NUMBER not null
        constraint FK_COUPON_TARGET_GOODS_1
            references TP_COUPON,
    COUPON_APPLY_LIMIT_CD VARCHAR2(2),
    USE_YN                VARCHAR2(1),
    GOODS_NO              VARCHAR2(16),
    REGR_NO               NUMBER,
    REG_DTTM              DATE,
    UPDR_NO               NUMBER,
    UPD_DTTM              DATE,
    constraint IDX_TP_COUPON_TARGET_GOODS_PK
        primary key (APPLY_SEQ, COUPON_NO)
)
/

comment on table TP_COUPON_TARGET_GOODS is '쿠폰 대상 상품'
/

comment on column TP_COUPON_TARGET_GOODS.APPLY_SEQ is '적용 순번'
/

comment on column TP_COUPON_TARGET_GOODS.COUPON_NO is '쿠폰 번호'
/

comment on column TP_COUPON_TARGET_GOODS.COUPON_APPLY_LIMIT_CD is '쿠폰 대상 예외 코드'
/

comment on column TP_COUPON_TARGET_GOODS.USE_YN is '사용 여부'
/

comment on column TP_COUPON_TARGET_GOODS.GOODS_NO is '상품 번호'
/

comment on column TP_COUPON_TARGET_GOODS.REGR_NO is '등록자 번호'
/

comment on column TP_COUPON_TARGET_GOODS.REG_DTTM is '등록 일시'
/

comment on column TP_COUPON_TARGET_GOODS.UPDR_NO is '수정자 번호'
/

comment on column TP_COUPON_TARGET_GOODS.UPD_DTTM is '수정 일시'
/

create index IDX_TP_COUPON_TARGET_GOODS_001
    on TP_COUPON_TARGET_GOODS (COUPON_NO, GOODS_NO)
/

create materialized view log on TP_COUPON
    with primary key (COUPON_NO)
/

create index IDX_TP_COUPON_001
    on TP_COUPON (COUPON_KIND_CD)
/

create index IDX_TP_COUPON_002
    on TP_COUPON (DEL_YN, SITE_NO, COUPON_KIND_CD)
/

create index IDX_TP_COUPON_003
    on TP_COUPON (DEL_YN, SITE_NO)
/

create index IDX_TP_COUPON_004
    on TP_COUPON (COUPON_NO, COUPON_APPLY_LIMIT_CD, COUPON_APPLY_SCOPE_CD, SITE_NO, DEL_YN)
/

create table TP_FREEBIE_EVENT
(
    FREEBIE_EVENT_NO        NUMBER not null
        constraint IDX_TP_FREEBIE_EVENT_PK
            primary key,
    SITE_NO                 NUMBER(19)
        constraint FK_FREEBIE_EVENT_1
            references TS_SITE
                on delete set null,
    FREEBIE_EVENT_NM        VARCHAR2(100),
    FREEBIE_EVENT_DSCRT     VARCHAR2(500),
    APPLY_START_DTTM        DATE,
    APPLY_END_DTTM          DATE,
    FREEBIE_EVENT_AMT       NUMBER(20, 2),
    FREEBIE_PRESENT_CNDT_CD VARCHAR2(2),
    USE_YN                  VARCHAR2(1),
    REGR_NO                 NUMBER,
    REG_DTTM                DATE,
    UPDR_NO                 NUMBER,
    UPD_DTTM                DATE,
    DEL_YN                  VARCHAR2(1),
    DELR_NO                 NUMBER,
    DEL_DTTM                DATE
)
/

comment on table TP_FREEBIE_EVENT is '사은품 이벤트'
/

comment on column TP_FREEBIE_EVENT.FREEBIE_EVENT_NO is '사은품 이벤트 번호'
/

comment on column TP_FREEBIE_EVENT.SITE_NO is '사이트 번호'
/

comment on column TP_FREEBIE_EVENT.FREEBIE_EVENT_NM is '사은품 이벤트 명'
/

comment on column TP_FREEBIE_EVENT.FREEBIE_EVENT_DSCRT is '사은품 이벤트 설명'
/

comment on column TP_FREEBIE_EVENT.APPLY_START_DTTM is '적용 시작 일시'
/

comment on column TP_FREEBIE_EVENT.APPLY_END_DTTM is '적용 종료 일시'
/

comment on column TP_FREEBIE_EVENT.FREEBIE_EVENT_AMT is '사은품 이벤트 금액'
/

comment on column TP_FREEBIE_EVENT.FREEBIE_PRESENT_CNDT_CD is '사은품 증정 조건 코드'
/

comment on column TP_FREEBIE_EVENT.USE_YN is '사용 여부'
/

comment on column TP_FREEBIE_EVENT.REGR_NO is '등록자 번호'
/

comment on column TP_FREEBIE_EVENT.REG_DTTM is '등록 일시'
/

comment on column TP_FREEBIE_EVENT.UPDR_NO is '수정자 번호'
/

comment on column TP_FREEBIE_EVENT.UPD_DTTM is '수정 일시'
/

comment on column TP_FREEBIE_EVENT.DEL_YN is '삭제 여부'
/

comment on column TP_FREEBIE_EVENT.DELR_NO is '삭제자 번호'
/

comment on column TP_FREEBIE_EVENT.DEL_DTTM is '삭제 일시'
/

create table TP_FREEBIE_EVENT_TARGET
(
    GOODS_NO         VARCHAR2(16) not null,
    FREEBIE_EVENT_NO NUMBER       not null
        constraint FK_FREEBIE_EVENT_TARGET_1
            references TP_FREEBIE_EVENT,
    USE_YN           VARCHAR2(1),
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE,
    constraint IDX_TP_FREEBIE_EVENT_TARGET_PK
        primary key (GOODS_NO, FREEBIE_EVENT_NO)
)
/

comment on table TP_FREEBIE_EVENT_TARGET is '사은품 이벤트 대상'
/

comment on column TP_FREEBIE_EVENT_TARGET.GOODS_NO is '상품 번호'
/

comment on column TP_FREEBIE_EVENT_TARGET.FREEBIE_EVENT_NO is '사은품 이벤트 번호'
/

comment on column TP_FREEBIE_EVENT_TARGET.USE_YN is '사용 여부'
/

comment on column TP_FREEBIE_EVENT_TARGET.REGR_NO is '등록자 번호'
/

comment on column TP_FREEBIE_EVENT_TARGET.REG_DTTM is '등록 일시'
/

comment on column TP_FREEBIE_EVENT_TARGET.UPDR_NO is '수정자 번호'
/

comment on column TP_FREEBIE_EVENT_TARGET.UPD_DTTM is '수정 일시'
/

create table TS_080_RECVRJT_SET
(
    SITE_NO              NUMBER(19) not null
        constraint IDX_TS_080_RECVRJT_SET_PK
            primary key
        constraint FK_080_RECVRJT_SET_1
            references TS_SITE,
    RECV_RJT_NO          VARCHAR2(100),
    SVC_USE_START_PERIOD DATE,
    SVC_USE_END_PERIOD   DATE,
    REGR_NO              NUMBER,
    REG_DTTM             DATE,
    UPDR_NO              NUMBER,
    UPD_DTTM             DATE
)
/

comment on table TS_080_RECVRJT_SET is '080 수신거부 설정'
/

comment on column TS_080_RECVRJT_SET.SITE_NO is '사이트 번호'
/

comment on column TS_080_RECVRJT_SET.RECV_RJT_NO is '수신 거부 번호'
/

comment on column TS_080_RECVRJT_SET.SVC_USE_START_PERIOD is '서비스 이용 시작 기간'
/

comment on column TS_080_RECVRJT_SET.SVC_USE_END_PERIOD is '서비스 이용 종료 기간'
/

comment on column TS_080_RECVRJT_SET.REGR_NO is '등록자 번호'
/

comment on column TS_080_RECVRJT_SET.REG_DTTM is '등록 일시'
/

comment on column TS_080_RECVRJT_SET.UPDR_NO is '수정자 번호'
/

comment on column TS_080_RECVRJT_SET.UPD_DTTM is '수정 일시'
/

create table TS_AREA_DLVR_SET
(
    SITE_NO          NUMBER(19) not null
        constraint FK_AREA_DLVR_SET_1
            references TS_SITE,
    AREA_DLVR_SET_NO NUMBER(19) not null,
    POST_NO          VARCHAR2(6),
    DLVRC            NUMBER(20, 2),
    NUM_ADDR         VARCHAR2(255),
    ROADNM_ADDR      VARCHAR2(255),
    AREA_NM          VARCHAR2(255),
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE,
    SELLER_NO        NUMBER(19),
    constraint IDX_TS_AREA_DLVR_SET_PK
        primary key (SITE_NO, AREA_DLVR_SET_NO)
)
/

comment on table TS_AREA_DLVR_SET is '지역 배송 설정'
/

comment on column TS_AREA_DLVR_SET.SITE_NO is '사이트 번호'
/

comment on column TS_AREA_DLVR_SET.AREA_DLVR_SET_NO is '지역 배송 설정 번호'
/

comment on column TS_AREA_DLVR_SET.POST_NO is '우편 번호'
/

comment on column TS_AREA_DLVR_SET.DLVRC is '배송비'
/

comment on column TS_AREA_DLVR_SET.NUM_ADDR is '지번 주소'
/

comment on column TS_AREA_DLVR_SET.ROADNM_ADDR is '도로명 주소'
/

comment on column TS_AREA_DLVR_SET.AREA_NM is '지역 명'
/

comment on column TS_AREA_DLVR_SET.REGR_NO is '등록자 번호'
/

comment on column TS_AREA_DLVR_SET.REG_DTTM is '등록 일시'
/

comment on column TS_AREA_DLVR_SET.UPDR_NO is '수정자 번호'
/

comment on column TS_AREA_DLVR_SET.UPD_DTTM is '수정 일시'
/

comment on column TS_AREA_DLVR_SET.SELLER_NO is '판매자 번호'
/

create table TS_CONNECT_LIMIT_IP
(
    SET_NO   NUMBER(19) not null
        constraint IDX_TS_CONNECT_LIMIT_IP_PK
            primary key,
    SITE_NO  NUMBER(19) not null
        constraint FK_CONNECT_LIMIT_IP_1
            references TS_SITE,
    IP_ADDR1 VARCHAR2(15),
    IP_ADDR2 VARCHAR2(15),
    IP_ADDR3 VARCHAR2(15),
    IP_ADDR4 VARCHAR2(15),
    REGR_NO  NUMBER,
    REG_DTTM DATE,
    UPDR_NO  NUMBER,
    UPD_DTTM DATE
)
/

comment on table TS_CONNECT_LIMIT_IP is '접속 제한 IP'
/

comment on column TS_CONNECT_LIMIT_IP.SET_NO is '설정 번호'
/

comment on column TS_CONNECT_LIMIT_IP.SITE_NO is '사이트 번호'
/

comment on column TS_CONNECT_LIMIT_IP.IP_ADDR1 is 'IP 주소1'
/

comment on column TS_CONNECT_LIMIT_IP.IP_ADDR2 is 'IP 주소2'
/

comment on column TS_CONNECT_LIMIT_IP.IP_ADDR3 is 'IP 주소3'
/

comment on column TS_CONNECT_LIMIT_IP.IP_ADDR4 is 'IP 주소4'
/

comment on column TS_CONNECT_LIMIT_IP.REGR_NO is '등록자 번호'
/

comment on column TS_CONNECT_LIMIT_IP.REG_DTTM is '등록 일시'
/

comment on column TS_CONNECT_LIMIT_IP.UPDR_NO is '수정자 번호'
/

comment on column TS_CONNECT_LIMIT_IP.UPD_DTTM is '수정 일시'
/

create table TS_COURIER
(
    SITE_NO               NUMBER(19)  not null
        constraint FK_COURIER_1
            references TS_SITE,
    COURIER_CD            VARCHAR2(2) not null,
    COURIER_NM            VARCHAR2(50),
    USE_YN                VARCHAR2(1),
    DLVRC                 NUMBER(20, 2),
    LINK_USE_YN           VARCHAR2(1),
    LINK_APPLY_STATUS     VARCHAR2(2),
    LINK_ID               VARCHAR2(200),
    LINK_PW               VARCHAR2(200),
    LINK_STORE_ID         VARCHAR2(50),
    LINK_CUSTNO           VARCHAR2(50),
    LINK_CONTRT_PT_NM     VARCHAR2(50),
    PRIVACY_CLCT_APPLY_YN VARCHAR2(1),
    PRIVACY_USE_APPLY_YN  VARCHAR2(1),
    REGR_NO               NUMBER,
    REG_DTTM              DATE,
    UPDR_NO               NUMBER,
    UPD_DTTM              DATE,
    constraint IDX_TS_COURIER_PK
        primary key (SITE_NO, COURIER_CD)
)
/

comment on table TS_COURIER is '택배사'
/

comment on column TS_COURIER.SITE_NO is '사이트 번호'
/

comment on column TS_COURIER.COURIER_CD is '택배사 코드'
/

comment on column TS_COURIER.COURIER_NM is '택배사 명'
/

comment on column TS_COURIER.USE_YN is '사용 여부'
/

comment on column TS_COURIER.DLVRC is '배송비'
/

comment on column TS_COURIER.LINK_USE_YN is '연동 사용 여부'
/

comment on column TS_COURIER.LINK_APPLY_STATUS is '연동 신청 상태'
/

comment on column TS_COURIER.LINK_ID is '연동 아이디'
/

comment on column TS_COURIER.LINK_PW is '연동 비밀번호'
/

comment on column TS_COURIER.LINK_STORE_ID is '연동 상점 ID'
/

comment on column TS_COURIER.LINK_CUSTNO is '연동 고객번호'
/

comment on column TS_COURIER.LINK_CONTRT_PT_NM is '연동 계약 지점 명'
/

comment on column TS_COURIER.PRIVACY_CLCT_APPLY_YN is '개인정보 수집 동의 여부'
/

comment on column TS_COURIER.PRIVACY_USE_APPLY_YN is '개인정보 이용 동의 여부'
/

comment on column TS_COURIER.REGR_NO is '등록자 번호'
/

comment on column TS_COURIER.REG_DTTM is '등록 일시'
/

comment on column TS_COURIER.UPDR_NO is '수정자 번호'
/

comment on column TS_COURIER.UPD_DTTM is '수정 일시'
/

create table TS_GA_SET
(
    SITE_NO  NUMBER(19) not null
        constraint IDX_TS_GA_SET_PK
            primary key
        constraint FK_GA_SET_1
            references TS_SITE,
    USE_YN   VARCHAR2(1),
    ANLS_ID  VARCHAR2(300),
    REGR_NO  NUMBER,
    REG_DTTM DATE,
    UPDR_NO  NUMBER,
    UPD_DTTM DATE
)
/

comment on table TS_GA_SET is 'GA 설정'
/

comment on column TS_GA_SET.SITE_NO is '사이트 번호'
/

comment on column TS_GA_SET.USE_YN is '사용 여부'
/

comment on column TS_GA_SET.ANLS_ID is '분석 ID'
/

comment on column TS_GA_SET.REGR_NO is '등록자 번호'
/

comment on column TS_GA_SET.REG_DTTM is '등록 일시'
/

comment on column TS_GA_SET.UPDR_NO is '수정자 번호'
/

comment on column TS_GA_SET.UPD_DTTM is '수정 일시'
/

create table TS_HSCD
(
    SITE_NO  NUMBER(19) not null
        constraint FK_HSCD_1
            references TS_SITE,
    HSCD_SEQ NUMBER(19) not null,
    HSCD     VARCHAR2(20),
    ITEM     VARCHAR2(100),
    REGR_NO  NUMBER,
    REG_DTTM DATE,
    UPDR_NO  NUMBER,
    UPD_DTTM DATE,
    constraint IDX_TS_HSCD_PK
        primary key (SITE_NO, HSCD_SEQ)
)
/

comment on table TS_HSCD is 'HS코드'
/

comment on column TS_HSCD.SITE_NO is '사이트 번호'
/

comment on column TS_HSCD.HSCD_SEQ is 'HS코드 순번'
/

comment on column TS_HSCD.HSCD is 'HS코드'
/

comment on column TS_HSCD.ITEM is '항목'
/

comment on column TS_HSCD.REGR_NO is '등록자 번호'
/

comment on column TS_HSCD.REG_DTTM is '등록 일시'
/

comment on column TS_HSCD.UPDR_NO is '수정자 번호'
/

comment on column TS_HSCD.UPD_DTTM is '수정 일시'
/

create table TS_NOPB_PAYMENT_SET
(
    NOPB_PAYMENT_SEQ NUMBER(19) not null
        constraint IDX_TS_NOPB_PAYMENT_SET_PK
            primary key,
    SITE_NO          NUMBER(19) not null
        constraint FK_NOPB_PAYMENT_SET_1
            references TS_SITE,
    DLGT_ACT_YN      VARCHAR2(1),
    BANK_NM          VARCHAR2(50),
    ACTNO            VARCHAR2(50),
    HOLDER           VARCHAR2(50),
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE,
    BANK_CD          VARCHAR2(2)
)
/

comment on table TS_NOPB_PAYMENT_SET is '무통장 결제 설정'
/

comment on column TS_NOPB_PAYMENT_SET.NOPB_PAYMENT_SEQ is '무통장 결제 순번'
/

comment on column TS_NOPB_PAYMENT_SET.SITE_NO is '사이트 번호'
/

comment on column TS_NOPB_PAYMENT_SET.DLGT_ACT_YN is '대표 계좌 여부'
/

comment on column TS_NOPB_PAYMENT_SET.BANK_NM is '은행 명'
/

comment on column TS_NOPB_PAYMENT_SET.ACTNO is '계좌번호'
/

comment on column TS_NOPB_PAYMENT_SET.HOLDER is '예금주'
/

comment on column TS_NOPB_PAYMENT_SET.REGR_NO is '등록자 번호'
/

comment on column TS_NOPB_PAYMENT_SET.REG_DTTM is '등록 일시'
/

comment on column TS_NOPB_PAYMENT_SET.UPDR_NO is '수정자 번호'
/

comment on column TS_NOPB_PAYMENT_SET.UPD_DTTM is '수정 일시'
/

comment on column TS_NOPB_PAYMENT_SET.BANK_CD is '은행 코드'
/

create table TS_NPAY_SET
(
    SITE_NO                       NUMBER(19) not null
        constraint IDX_TS_NPAY_SET_PK
            primary key
        constraint FK_NPAY_SET_1
            references TS_SITE,
    NAVER_CMN_CERT_KEY            VARCHAR2(300),
    WHITE_LIST                    VARCHAR2(300),
    CHECKOUT_USE_YN               VARCHAR2(1),
    CHECKOUT_TEST_USE_YN          VARCHAR2(1),
    DLVR_COMPANY_SELECT           VARCHAR2(2),
    RECVPAY_DLVRC                 NUMBER(20, 2),
    MNSHOP_USE_YN                 VARCHAR2(1),
    NAVER_FRC_ID                  VARCHAR2(50),
    LINK_CERT_KEY                 VARCHAR2(300),
    IMG_CERT_KEY                  VARCHAR2(300),
    PC_BTN_SELECT                 VARCHAR2(2),
    MOBILE_BTN_SELECT             VARCHAR2(2),
    BTN_LINK_TARGET               VARCHAR2(2),
    REPLACE_CD                    VARCHAR2(300),
    STOCK_LINK_USE_YN             VARCHAR2(1),
    ORD_INTEGRATION_MANAGE_USE_YN VARCHAR2(1),
    REGR_NO                       NUMBER,
    REG_DTTM                      DATE,
    UPDR_NO                       NUMBER,
    UPD_DTTM                      DATE
)
/

comment on table TS_NPAY_SET is 'NPAY 설정'
/

comment on column TS_NPAY_SET.SITE_NO is '사이트 번호'
/

comment on column TS_NPAY_SET.NAVER_CMN_CERT_KEY is '네이버 공통 인증키'
/

comment on column TS_NPAY_SET.WHITE_LIST is 'WHITE LIST'
/

comment on column TS_NPAY_SET.CHECKOUT_USE_YN is '체크아웃 사용 여부'
/

comment on column TS_NPAY_SET.CHECKOUT_TEST_USE_YN is '체크아웃 테스트 사용 여부'
/

comment on column TS_NPAY_SET.DLVR_COMPANY_SELECT is '배송 업체 선택'
/

comment on column TS_NPAY_SET.RECVPAY_DLVRC is '착불 배송비'
/

comment on column TS_NPAY_SET.MNSHOP_USE_YN is '미니샵 사용 여부'
/

comment on column TS_NPAY_SET.NAVER_FRC_ID is '네이버 가맹점 ID'
/

comment on column TS_NPAY_SET.LINK_CERT_KEY is '연동 인증키'
/

comment on column TS_NPAY_SET.IMG_CERT_KEY is '이미지 인증키'
/

comment on column TS_NPAY_SET.PC_BTN_SELECT is 'PC 버튼 선택'
/

comment on column TS_NPAY_SET.MOBILE_BTN_SELECT is '모바일 버튼 선택'
/

comment on column TS_NPAY_SET.BTN_LINK_TARGET is '버튼 링크 대상'
/

comment on column TS_NPAY_SET.REPLACE_CD is '치환 코드'
/

comment on column TS_NPAY_SET.STOCK_LINK_USE_YN is '재고 연동 사용 여부'
/

comment on column TS_NPAY_SET.ORD_INTEGRATION_MANAGE_USE_YN is '주문 통합 관리 사용 여부'
/

comment on column TS_NPAY_SET.REGR_NO is '등록자 번호'
/

comment on column TS_NPAY_SET.REG_DTTM is '등록 일시'
/

comment on column TS_NPAY_SET.UPDR_NO is '수정자 번호'
/

comment on column TS_NPAY_SET.UPD_DTTM is '수정 일시'
/

create table TS_PG_SET
(
    SITE_NO                     NUMBER(19)  not null
        constraint FK_PG_SET_1
            references TS_SITE,
    PG_CD                       VARCHAR2(2) not null,
    PG_NM                       VARCHAR2(50),
    USE_YN                      VARCHAR2(1),
    CRED_PAYMENT_YN             VARCHAR2(1),
    ACTTRANS_PAYMENT_YN         VARCHAR2(1),
    VIRTACT_PAYMENT_YN          VARCHAR2(1),
    MOBILE_PAYMENT_YN           VARCHAR2(1),
    DPST_CHECK_URL_USE_YN       VARCHAR2(1),
    PG_ID                       VARCHAR2(50),
    KEY_PASSWD                  VARCHAR2(300),
    PG_KEY                      VARCHAR2(300),
    PG_KEY2                     VARCHAR2(300),
    PG_KEY3                     VARCHAR2(300),
    PG_KEY4                     VARCHAR2(300),
    INST_PERIOD                 VARCHAR2(200),
    NOINT_TYPE_CD               VARCHAR2(1),
    NOINT_PERIOD_CD             VARCHAR2(50),
    CASH_RCT_USE_YN             VARCHAR2(1),
    ESCROW_USE_YN               VARCHAR2(1),
    ESCROW_CRED_PAYMENT_YN      VARCHAR2(1),
    ESCROW_ACTTRANS_PAYMENT_YN  VARCHAR2(1),
    ESCROW_VIRTACT_PAYMENT_YN   VARCHAR2(1),
    ESCROW_USE_AMT              NUMBER(20, 2),
    SAFEBUY_IMG_PATH            VARCHAR2(300),
    SAFEBUY_IMG_DISP_SET_CD     VARCHAR2(1),
    ESCROW_ID                   VARCHAR2(300),
    ESCROW_CERT_KEY_FILE_PATH1  VARCHAR2(300),
    ESCROW_CERT_KEY_FILE_PATH2  VARCHAR2(300),
    ESCROW_CERT_KEY_FILE_PATH3  VARCHAR2(300),
    ESCROW_CERTIFY_MARK_CONTENT VARCHAR2(300),
    REGR_NO                     NUMBER,
    REG_DTTM                    DATE,
    UPDR_NO                     NUMBER,
    UPD_DTTM                    DATE,
    SIGN_KEY                    VARCHAR2(300),
    BILL_ID                     VARCHAR2(100),
    BILL_IV                     VARCHAR2(100),
    BILL_KEY                    VARCHAR2(100),
    BILLING_PAYMENT_YN          VARCHAR2(2),
    constraint IDX_TS_PG_SET_PK
        primary key (SITE_NO, PG_CD)
)
/

comment on table TS_PG_SET is 'PG 설정'
/

comment on column TS_PG_SET.SITE_NO is '사이트 번호'
/

comment on column TS_PG_SET.PG_CD is 'PG 코드'
/

comment on column TS_PG_SET.PG_NM is 'PG 명'
/

comment on column TS_PG_SET.USE_YN is '사용 여부'
/

comment on column TS_PG_SET.CRED_PAYMENT_YN is '신용카드 결제 여부'
/

comment on column TS_PG_SET.ACTTRANS_PAYMENT_YN is '계좌이체 결제 여부'
/

comment on column TS_PG_SET.VIRTACT_PAYMENT_YN is '가상계좌 결제 여부'
/

comment on column TS_PG_SET.MOBILE_PAYMENT_YN is '휴대폰 결제 여부'
/

comment on column TS_PG_SET.DPST_CHECK_URL_USE_YN is '입금 확인 URL 사용 여부'
/

comment on column TS_PG_SET.PG_ID is 'PG ID'
/

comment on column TS_PG_SET.KEY_PASSWD is 'KEY_PASSWD'
/

comment on column TS_PG_SET.PG_KEY is 'PG KEY'
/

comment on column TS_PG_SET.PG_KEY2 is 'PG_KEY2'
/

comment on column TS_PG_SET.PG_KEY3 is 'PG_KEY3'
/

comment on column TS_PG_SET.PG_KEY4 is 'PG_KEY4'
/

comment on column TS_PG_SET.INST_PERIOD is '할부기간'
/

comment on column TS_PG_SET.NOINT_TYPE_CD is '무이자 유형 코드'
/

comment on column TS_PG_SET.NOINT_PERIOD_CD is '무이자 기간 코드'
/

comment on column TS_PG_SET.CASH_RCT_USE_YN is '현금 영수증 사용 여부'
/

comment on column TS_PG_SET.ESCROW_USE_YN is '에스크로 사용 여부'
/

comment on column TS_PG_SET.ESCROW_CRED_PAYMENT_YN is '에스크로 신용카드 결제 여부'
/

comment on column TS_PG_SET.ESCROW_ACTTRANS_PAYMENT_YN is '에스크로 계좌이체 결제 여부'
/

comment on column TS_PG_SET.ESCROW_VIRTACT_PAYMENT_YN is '에스크로 가상계좌 결제 여부'
/

comment on column TS_PG_SET.ESCROW_USE_AMT is '에스크로 사용 금액'
/

comment on column TS_PG_SET.SAFEBUY_IMG_PATH is '구매안전 이미지 경로'
/

comment on column TS_PG_SET.SAFEBUY_IMG_DISP_SET_CD is '구매안전 이미지 표시 설정 코드'
/

comment on column TS_PG_SET.ESCROW_ID is '에스크로 아이디'
/

comment on column TS_PG_SET.ESCROW_CERT_KEY_FILE_PATH1 is '에스크로 인증키 파일 경로1'
/

comment on column TS_PG_SET.ESCROW_CERT_KEY_FILE_PATH2 is '에스크로 인증키 파일 경로2'
/

comment on column TS_PG_SET.ESCROW_CERT_KEY_FILE_PATH3 is '에스크로 인증키 파일 경로3'
/

comment on column TS_PG_SET.ESCROW_CERTIFY_MARK_CONTENT is '에스크로 인증 마크 내용'
/

comment on column TS_PG_SET.REGR_NO is '등록자 번호'
/

comment on column TS_PG_SET.REG_DTTM is '등록 일시'
/

comment on column TS_PG_SET.UPDR_NO is '수정자 번호'
/

comment on column TS_PG_SET.UPD_DTTM is '수정 일시'
/

comment on column TS_PG_SET.SIGN_KEY is 'SIGN_KEY'
/

comment on column TS_PG_SET.BILL_ID is '빌링 MID'
/

comment on column TS_PG_SET.BILL_IV is '빌링 IV'
/

comment on column TS_PG_SET.BILL_KEY is '빌링 KEY'
/

comment on column TS_PG_SET.BILLING_PAYMENT_YN is '빌링 결제 여부'
/

create table TS_PRSN_CHECK_CERTIFY
(
    SITE_NO                      NUMBER(19)  not null
        constraint FK_PRSN_CHECK_CERTIFY_1
            references TS_SITE,
    CERTIFY_TYPE_CD              VARCHAR2(2) not null,
    USE_YN                       VARCHAR2(1),
    SITE_CD                      VARCHAR2(50),
    SITE_PW                      VARCHAR2(200),
    CERTIFY_FILE_PATH            VARCHAR2(300),
    MEMBER_JOIN_USE_YN           VARCHAR2(1),
    PW_FIND_USE_YN               VARCHAR2(1),
    DORMANTMEMBER_CERTIFY_USE_YN VARCHAR2(1),
    ADULT_CERTIFY_ACCESS_USE_YN  VARCHAR2(1),
    REGR_NO                      NUMBER,
    REG_DTTM                     DATE,
    UPDR_NO                      NUMBER,
    UPD_DTTM                     DATE,
    constraint IDX_TS_PRSN_CHECK_CERTIFY_PK
        primary key (SITE_NO, CERTIFY_TYPE_CD)
)
/

comment on table TS_PRSN_CHECK_CERTIFY is '본인 확인 인증'
/

comment on column TS_PRSN_CHECK_CERTIFY.SITE_NO is '사이트 번호'
/

comment on column TS_PRSN_CHECK_CERTIFY.CERTIFY_TYPE_CD is '인증 유형 코드'
/

comment on column TS_PRSN_CHECK_CERTIFY.USE_YN is '사용 여부'
/

comment on column TS_PRSN_CHECK_CERTIFY.SITE_CD is '사이트 코드'
/

comment on column TS_PRSN_CHECK_CERTIFY.SITE_PW is '사이트 패스워드'
/

comment on column TS_PRSN_CHECK_CERTIFY.CERTIFY_FILE_PATH is '인증 파일 경로'
/

comment on column TS_PRSN_CHECK_CERTIFY.MEMBER_JOIN_USE_YN is '회원 가입 사용 여부'
/

comment on column TS_PRSN_CHECK_CERTIFY.PW_FIND_USE_YN is '비밀번호 찾기 사용 여부'
/

comment on column TS_PRSN_CHECK_CERTIFY.DORMANTMEMBER_CERTIFY_USE_YN is '휴면회원 인증 사용 여부'
/

comment on column TS_PRSN_CHECK_CERTIFY.ADULT_CERTIFY_ACCESS_USE_YN is '성인 인증 접근 사용 여부'
/

comment on column TS_PRSN_CHECK_CERTIFY.REGR_NO is '등록자 번호'
/

comment on column TS_PRSN_CHECK_CERTIFY.REG_DTTM is '등록 일시'
/

comment on column TS_PRSN_CHECK_CERTIFY.UPDR_NO is '수정자 번호'
/

comment on column TS_PRSN_CHECK_CERTIFY.UPD_DTTM is '수정 일시'
/

create table TS_SECURITY_SERV_SET
(
    SITE_NO                   NUMBER(19) not null
        constraint IDX_TS_SECURITY_SERV_SET_PK
            primary key
        constraint FK_SECURITY_SERV_SET_1
            references TS_SITE,
    SECURITY_SERV_USE_TYPE_CD VARCHAR2(1),
    SECURITY_SERV_STATUS_CD   VARCHAR2(1),
    APPLY_START_DT            VARCHAR2(8),
    APPLY_END_DT              VARCHAR2(8),
    CERTIFY_MARK_DISP_YN      VARCHAR2(1),
    DOMAIN                    VARCHAR2(50),
    PORT                      NUMBER,
    REGR_NO                   NUMBER,
    REG_DTTM                  DATE,
    UPDR_NO                   NUMBER,
    UPD_DTTM                  DATE
)
/

comment on table TS_SECURITY_SERV_SET is '보안 서버 설정'
/

comment on column TS_SECURITY_SERV_SET.SITE_NO is '사이트 번호'
/

comment on column TS_SECURITY_SERV_SET.SECURITY_SERV_USE_TYPE_CD is '보안 서버 사용 유형 코드'
/

comment on column TS_SECURITY_SERV_SET.SECURITY_SERV_STATUS_CD is '보안 서버 상태 코드'
/

comment on column TS_SECURITY_SERV_SET.APPLY_START_DT is '적용 시작 일자'
/

comment on column TS_SECURITY_SERV_SET.APPLY_END_DT is '적용 종료 일자'
/

comment on column TS_SECURITY_SERV_SET.CERTIFY_MARK_DISP_YN is '인증 마크 표시 여부'
/

comment on column TS_SECURITY_SERV_SET.DOMAIN is '도메인'
/

comment on column TS_SECURITY_SERV_SET.PORT is '포트'
/

comment on column TS_SECURITY_SERV_SET.REGR_NO is '등록자 번호'
/

comment on column TS_SECURITY_SERV_SET.REG_DTTM is '등록 일시'
/

comment on column TS_SECURITY_SERV_SET.UPDR_NO is '수정자 번호'
/

comment on column TS_SECURITY_SERV_SET.UPD_DTTM is '수정 일시'
/

create table TS_SEO_SET
(
    SITE_NO        NUMBER(19) not null
        constraint IDX_TS_SEO_SET_PK
            primary key
        constraint FK_SEO_SET_1
            references TS_SITE,
    CMN_USE_YN     VARCHAR2(1),
    CMN_TITLE      VARCHAR2(300),
    CMN_MANAGER    VARCHAR2(300),
    CMN_DSCRT      VARCHAR2(500),
    CMN_KEYWORD    VARCHAR2(300),
    GOODS_USE_YN   VARCHAR2(1),
    GOODS_TITLE    VARCHAR2(300),
    GOODS_MANAGER  VARCHAR2(300),
    SRCH_FILE_PATH VARCHAR2(300),
    REGR_NO        NUMBER,
    REG_DTTM       DATE,
    UPDR_NO        NUMBER,
    UPD_DTTM       DATE
)
/

comment on table TS_SEO_SET is 'SEO 설정'
/

comment on column TS_SEO_SET.SITE_NO is '사이트 번호'
/

comment on column TS_SEO_SET.CMN_USE_YN is '공통 사용 여부'
/

comment on column TS_SEO_SET.CMN_TITLE is '공통 제목'
/

comment on column TS_SEO_SET.CMN_MANAGER is '공통 담당자'
/

comment on column TS_SEO_SET.CMN_DSCRT is '공통 설명'
/

comment on column TS_SEO_SET.CMN_KEYWORD is '공통 키워드'
/

comment on column TS_SEO_SET.GOODS_USE_YN is '상품 사용 여부'
/

comment on column TS_SEO_SET.GOODS_TITLE is '상품 제목'
/

comment on column TS_SEO_SET.GOODS_MANAGER is '상품 담당자'
/

comment on column TS_SEO_SET.SRCH_FILE_PATH is '검색 파일 경로'
/

comment on column TS_SEO_SET.REGR_NO is '등록자 번호'
/

comment on column TS_SEO_SET.REG_DTTM is '등록 일시'
/

comment on column TS_SEO_SET.UPDR_NO is '수정자 번호'
/

comment on column TS_SEO_SET.UPD_DTTM is '수정 일시'
/

create table TS_SIMP_PG_SET
(
    SITE_NO         NUMBER(19)  not null
        constraint FK_SIMP_PG_SET_1
            references TS_SITE,
    SIMP_PG_CD      VARCHAR2(2) not null,
    SIMP_PG_TYPE_CD VARCHAR2(4),
    USE_SET_CD      VARCHAR2(1),
    FRC_CD          VARCHAR2(50),
    STORE_ID        VARCHAR2(50),
    STORE_PW        VARCHAR2(50),
    USE_AREA_CD     VARCHAR2(1),
    DSN_SET_CD      VARCHAR2(2),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    constraint IDX_TS_SIMP_PG_SET_PK
        primary key (SITE_NO, SIMP_PG_CD)
)
/

comment on table TS_SIMP_PG_SET is '간편 PG 설정'
/

comment on column TS_SIMP_PG_SET.SITE_NO is '사이트 번호'
/

comment on column TS_SIMP_PG_SET.SIMP_PG_CD is '간편 PG 코드'
/

comment on column TS_SIMP_PG_SET.SIMP_PG_TYPE_CD is '간편 PG 유형 코드'
/

comment on column TS_SIMP_PG_SET.USE_SET_CD is '사용 설정 코드'
/

comment on column TS_SIMP_PG_SET.FRC_CD is '가맹점 코드'
/

comment on column TS_SIMP_PG_SET.STORE_ID is '상점 아이디'
/

comment on column TS_SIMP_PG_SET.STORE_PW is '상점 비밀번호'
/

comment on column TS_SIMP_PG_SET.USE_AREA_CD is '이용 영역 코드'
/

comment on column TS_SIMP_PG_SET.DSN_SET_CD is '디자인 설정 코드'
/

comment on column TS_SIMP_PG_SET.REGR_NO is '등록자 번호'
/

comment on column TS_SIMP_PG_SET.REG_DTTM is '등록 일시'
/

comment on column TS_SIMP_PG_SET.UPDR_NO is '수정자 번호'
/

comment on column TS_SIMP_PG_SET.UPD_DTTM is '수정 일시'
/

create table TA_MANAGER
(
    MEMBER_NO   NUMBER not null
        constraint FK_MANAGER_2
            references TC_MEMBER,
    AUTH_GRP_NO NUMBER not null
        constraint FK_MANAGER_3
            references TA_MANAGER_AUTH_GRP,
    SITE_NO     NUMBER(19)
        constraint FK_MANAGER_1
            references TS_SITE
                on delete set null,
    REG_DTTM    DATE,
    REGR_NO     NUMBER,
    UPD_DTTM    DATE,
    UPDR_NO     NUMBER,
    constraint IDX_TA_MANAGER_PK
        primary key (MEMBER_NO, AUTH_GRP_NO)
)
/

comment on table TA_MANAGER is '관리자'
/

comment on column TA_MANAGER.MEMBER_NO is '회원 번호'
/

comment on column TA_MANAGER.AUTH_GRP_NO is '권한 그룹 번호'
/

comment on column TA_MANAGER.SITE_NO is '사이트 번호'
/

comment on column TA_MANAGER.REG_DTTM is '등록 일시'
/

comment on column TA_MANAGER.REGR_NO is '등록자 번호'
/

comment on column TA_MANAGER.UPD_DTTM is '수정 일시'
/

comment on column TA_MANAGER.UPDR_NO is '수정자 번호'
/

create table TB_SMS_AUTO_SEND_MANAGE
(
    SEND_TYPE_CD       VARCHAR2(10) not null,
    SITE_NO            NUMBER(19)   not null
        constraint FK_SMS_AUTO_SEND_1
            references TB_SMS_INFO_MANAGE,
    USE_YN             VARCHAR2(1),
    MEMBER_SEND_YN     VARCHAR2(1),
    MANAGER1_SEND_YN   VARCHAR2(1),
    MANAGER2_SEND_YN   VARCHAR2(1),
    MANAGER3_SEND_YN   VARCHAR2(1),
    MANAGER4_SEND_YN   VARCHAR2(1),
    MANAGER5_SEND_YN   VARCHAR2(1),
    MANAGER6_SEND_YN   VARCHAR2(1),
    MANAGER7_SEND_YN   VARCHAR2(1),
    MANAGER8_SEND_YN   VARCHAR2(1),
    MANAGER9_SEND_YN   VARCHAR2(1),
    MANAGER10_SEND_YN  VARCHAR2(1),
    MEMBER_SEND_WORDS  VARCHAR2(4000),
    MANAGER_SEND_WORDS VARCHAR2(4000),
    REGR_NO            NUMBER,
    REG_DTTM           DATE,
    UPDR_NO            NUMBER,
    UPD_DTTM           DATE,
    constraint IDX_TB_SMS_AUTO_SEND_MANAGE_PK
        primary key (SEND_TYPE_CD, SITE_NO)
)
/

comment on table TB_SMS_AUTO_SEND_MANAGE is 'SMS 자동 발송 관리'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.SEND_TYPE_CD is '발송 유형 코드'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.SITE_NO is '사이트 번호'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.USE_YN is '사용 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MEMBER_SEND_YN is '회원 발송 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MANAGER1_SEND_YN is '관리자1 발송 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MANAGER2_SEND_YN is '관리자2 발송 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MANAGER3_SEND_YN is '관리자3 발송 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MANAGER4_SEND_YN is '관리자4 발송 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MANAGER5_SEND_YN is '관리자5 발송 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MANAGER6_SEND_YN is '관리자6 발송 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MANAGER7_SEND_YN is '관리자7 발송 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MANAGER8_SEND_YN is '관리자8 발송 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MANAGER9_SEND_YN is '관리자9 발송 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MANAGER10_SEND_YN is '관리자10 발송 여부'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MEMBER_SEND_WORDS is '회원 발송 문구'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.MANAGER_SEND_WORDS is '관리자 발송 문구'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.REGR_NO is '등록자 번호'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.REG_DTTM is '등록 일시'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.UPDR_NO is '수정자 번호'
/

comment on column TB_SMS_AUTO_SEND_MANAGE.UPD_DTTM is '수정 일시'
/

create table TC_ES_INFO
(
    MEMBER_NO            NUMBER not null
        constraint IDX_TC_ES_INFO_PK
            primary key
        constraint R_1616
            references TC_MEMBER,
    SPH_L                VARCHAR2(10),
    SPH_R                VARCHAR2(10),
    CYL_L                VARCHAR2(10),
    CYL_R                VARCHAR2(10),
    AXIS_L               VARCHAR2(10),
    AXIS_R               VARCHAR2(10),
    ADD_L                VARCHAR2(10),
    ADD_R                VARCHAR2(10),
    PRISM_L              VARCHAR2(10),
    PRISM_R              VARCHAR2(10),
    BASE_L               VARCHAR2(10),
    BASE_R               VARCHAR2(10),
    PD_L                 VARCHAR2(10),
    PD_R                 VARCHAR2(10),
    CHECKUP_DT           DATE,
    CHECKUP_INSTITUTE_NM VARCHAR2(50),
    REGR_NO              NUMBER,
    REG_DTTM             DATE,
    UPDR_NO              NUMBER,
    UPD_DTTM             DATE
)
/

comment on table TC_ES_INFO is '시력 정보'
/

comment on column TC_ES_INFO.MEMBER_NO is '회원 번호'
/

comment on column TC_ES_INFO.SPH_L is 'SPH_L'
/

comment on column TC_ES_INFO.SPH_R is 'SPH_R'
/

comment on column TC_ES_INFO.CYL_L is 'CYL_L'
/

comment on column TC_ES_INFO.CYL_R is 'CYL_R'
/

comment on column TC_ES_INFO.AXIS_L is 'AXIS_L'
/

comment on column TC_ES_INFO.AXIS_R is 'AXIS_R'
/

comment on column TC_ES_INFO.ADD_L is 'ADD_L'
/

comment on column TC_ES_INFO.ADD_R is 'ADD_R'
/

comment on column TC_ES_INFO.PRISM_L is 'PRISM_L'
/

comment on column TC_ES_INFO.PRISM_R is 'PRISM_R'
/

comment on column TC_ES_INFO.BASE_L is 'BASE_L'
/

comment on column TC_ES_INFO.BASE_R is 'BASE_R'
/

comment on column TC_ES_INFO.PD_L is 'PD_L'
/

comment on column TC_ES_INFO.PD_R is 'PD_R'
/

comment on column TC_ES_INFO.CHECKUP_DT is '검사 일자'
/

comment on column TC_ES_INFO.CHECKUP_INSTITUTE_NM is '검사 기관 명'
/

comment on column TC_ES_INFO.REGR_NO is '등록자 번호'
/

comment on column TC_ES_INFO.REG_DTTM is '등록 일시'
/

comment on column TC_ES_INFO.UPDR_NO is '수정자 번호'
/

comment on column TC_ES_INFO.UPD_DTTM is '수정 일시'
/

create table TC_MEMBER_CP
(
    MEMBER_CP_NO        NUMBER not null
        constraint IDX_TC_MEMBER_CP_PK
            primary key,
    COUPON_NO           NUMBER
        constraint FK_MEMBER_CP_1
            references TP_COUPON
                on delete set null,
    MEMBER_NO           NUMBER
        constraint FK_MEMBER_CP_2
            references TC_MEMBER
                on delete set null,
    USE_YN              VARCHAR2(1),
    USE_DTTM            DATE,
    CP_APPLY_START_DTTM DATE,
    CP_APPLY_END_DTTM   DATE,
    REGR_NO             NUMBER,
    REG_DTTM            DATE,
    UPDR_NO             NUMBER,
    UPD_DTTM            DATE,
    CP_ISSUE_NO         VARCHAR2(13) default NULL,
    BUY_DECIDE_DTTM     DATE,
    ORD_NO              NUMBER(16)
)
/

comment on table TC_MEMBER_CP is '회원 쿠폰'
/

comment on column TC_MEMBER_CP.MEMBER_CP_NO is '회원 쿠폰 번호'
/

comment on column TC_MEMBER_CP.COUPON_NO is '쿠폰 번호'
/

comment on column TC_MEMBER_CP.MEMBER_NO is '회원 번호'
/

comment on column TC_MEMBER_CP.USE_YN is '사용 여부'
/

comment on column TC_MEMBER_CP.USE_DTTM is '사용 일시'
/

comment on column TC_MEMBER_CP.CP_APPLY_START_DTTM is '쿠폰 적용 시작 일시'
/

comment on column TC_MEMBER_CP.CP_APPLY_END_DTTM is '쿠폰 적용 종료 일시'
/

comment on column TC_MEMBER_CP.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_CP.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_CP.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_CP.UPD_DTTM is '수정 일시'
/

comment on column TC_MEMBER_CP.CP_ISSUE_NO is '쿠폰 발급 번호'
/

comment on column TC_MEMBER_CP.BUY_DECIDE_DTTM is '구매 확정 일시'
/

comment on column TC_MEMBER_CP.ORD_NO is '주문 번호'
/

create table TO_COUPON_USE
(
    CP_USE_NO    NUMBER(16) not null
        constraint IDX_TO_COUPON_USE_PK
            primary key,
    MEMBER_CP_NO NUMBER
        constraint FK_COUPON_USE_1
            references TC_MEMBER_CP
                on delete set null,
    ORD_NO       NUMBER(16),
    ORD_DTL_SEQ  NUMBER,
    CP_USE_AMT   NUMBER(20, 2),
    CP_KIND_CD   VARCHAR2(2),
    REGR_NO      NUMBER,
    REG_DTTM     DATE,
    UPDR_NO      NUMBER,
    UPD_DTTM     DATE,
    COUPON_NO    NUMBER
)
/

comment on table TO_COUPON_USE is '쿠폰 사용'
/

comment on column TO_COUPON_USE.CP_USE_NO is '쿠폰 사용 번호'
/

comment on column TO_COUPON_USE.MEMBER_CP_NO is '회원 쿠폰 번호'
/

comment on column TO_COUPON_USE.ORD_NO is '주문 번호'
/

comment on column TO_COUPON_USE.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TO_COUPON_USE.CP_USE_AMT is '쿠폰 사용 금액'
/

comment on column TO_COUPON_USE.CP_KIND_CD is '쿠폰 종류 코드'
/

comment on column TO_COUPON_USE.REGR_NO is '등록자 번호'
/

comment on column TO_COUPON_USE.REG_DTTM is '등록 일시'
/

comment on column TO_COUPON_USE.UPDR_NO is '수정자 번호'
/

comment on column TO_COUPON_USE.UPD_DTTM is '수정 일시'
/

create index IDX_TO_COUPON_USE_001
    on TO_COUPON_USE (ORD_NO)
/

create index IDX_TO_COUPON_USE_002
    on TO_COUPON_USE (MEMBER_CP_NO)
/

create materialized view log on TC_MEMBER_CP
    with primary key (MEMBER_CP_NO)
/

create index IDX_TC_MEMBER_CP_001
    on TC_MEMBER_CP (COUPON_NO)
/

create index IDX_TC_MEMBER_CP_002
    on TC_MEMBER_CP (MEMBER_NO)
/

create index IDX_TC_MEMBER_CP_003
    on TC_MEMBER_CP (CP_APPLY_START_DTTM)
/

create index IDX_TC_MEMBER_CP_004
    on TC_MEMBER_CP (CP_APPLY_END_DTTM)
/

create index IDX_TC_MEMBER_CP_005
    on TC_MEMBER_CP (USE_YN)
/

create index IDX_TC_MEMBER_CP_006
    on TC_MEMBER_CP (CP_ISSUE_NO)
/

create index IDX_TC_MEMBER_CP_007
    on TC_MEMBER_CP (MEMBER_NO, COUPON_NO)
/

create index IDX_TC_MEMBER_CP_008
    on TC_MEMBER_CP (ORD_NO)
/

create table TG_ATTR
(
    ATTR_NO  NUMBER(19) not null
        constraint IDX_TG_ATTR_PK
            primary key,
    OPT_NO   NUMBER(19) not null
        constraint FK_ATTR_1
            references TG_OPT,
    ATTR_NM  VARCHAR2(50),
    USE_YN   VARCHAR2(1),
    REGR_NO  NUMBER,
    REG_DTTM DATE,
    UPDR_NO  NUMBER,
    UPD_DTTM DATE
)
/

comment on table TG_ATTR is '속성'
/

comment on column TG_ATTR.ATTR_NO is '속성 번호'
/

comment on column TG_ATTR.OPT_NO is '옵션 번호'
/

comment on column TG_ATTR.ATTR_NM is '속성 명'
/

comment on column TG_ATTR.USE_YN is '사용 여부'
/

comment on column TG_ATTR.REGR_NO is '등록자 번호'
/

comment on column TG_ATTR.REG_DTTM is '등록 일시'
/

comment on column TG_ATTR.UPDR_NO is '수정자 번호'
/

comment on column TG_ATTR.UPD_DTTM is '수정 일시'
/

create table TMP_IMOTICON
(
    MOBILE    VARCHAR2(50),
    MEMBER_NO NUMBER
)
/

create table TMP_COUPON_ISSUE
(
    CD_CUST        VARCHAR2(20),
    MEMBER_NM      VARCHAR2(100),
    MOBILE         VARCHAR2(100),
    MEMBER_CARD_NO VARCHAR2(100)
)
/

create table TG_CONTACT_WEAR_ATTR
(
    WEAR_IMGSET_NO NUMBER                    not null
        constraint IDX_CONTACT_WEAR_ATTR_PK
            primary key,
    GOODS_NO       VARCHAR2(16) default NULL not null,
    BRAND_NO       NUMBER,
    REGR_NO        NUMBER,
    REG_DTTM       DATE,
    UPDR_NO        NUMBER,
    UPD_DTTM       DATE
)
/

comment on table TG_CONTACT_WEAR_ATTR is '콘택트 렌즈 착용 속성'
/

comment on column TG_CONTACT_WEAR_ATTR.WEAR_IMGSET_NO is '착용샷 이미지 세트 번호'
/

comment on column TG_CONTACT_WEAR_ATTR.GOODS_NO is '상품 번호'
/

comment on column TG_CONTACT_WEAR_ATTR.BRAND_NO is '브랜드 번호'
/

comment on column TG_CONTACT_WEAR_ATTR.REGR_NO is '등록자 번호'
/

comment on column TG_CONTACT_WEAR_ATTR.REG_DTTM is '등록 일시'
/

comment on column TG_CONTACT_WEAR_ATTR.UPDR_NO is '수정자 번호'
/

comment on column TG_CONTACT_WEAR_ATTR.UPD_DTTM is '수정 일시'
/

create index IDX_TG_CONTACT_WEAR_ATTR_F1
    on TG_CONTACT_WEAR_ATTR (GOODS_NO)
/

create table TG_CONTACT_WEAR_ATTR_DTL
(
    WEAR_IMGSET_NO        NUMBER      not null
        constraint FK_CONTACT_WEAR_ATTR_1
            references TG_CONTACT_WEAR_ATTR,
    WEAR_IMG_TYPE         VARCHAR2(2) not null,
    IMG_PATH              VARCHAR2(500),
    IMG_NM                VARCHAR2(500),
    IMG_WIDTH             NUMBER,
    IMG_HEIGHT            NUMBER,
    IMG_SIZE              NUMBER,
    WEAR_GOODS_NM         VARCHAR2(100),
    COLOR_VALUE           VARCHAR2(100),
    WEAR_CYCLE            VARCHAR2(100),
    GRP_DMTR              VARCHAR2(100),
    MATERIAL_VALUE        VARCHAR2(100),
    UV_INTERCEPTION_VALUE VARCHAR2(100),
    QTT_VALUE             VARCHAR2(100),
    SALE_PRICE_VALUE      VARCHAR2(100),
    MKT_BNF_VALUE         VARCHAR2(100),
    REGR_NO               NUMBER,
    REG_DTTM              DATE,
    UPDR_NO               NUMBER,
    UPD_DTTM              DATE,
    constraint IDX_TG_CONTACT_WEAR_DTL_PK
        primary key (WEAR_IMGSET_NO, WEAR_IMG_TYPE)
)
/

comment on table TG_CONTACT_WEAR_ATTR_DTL is '콘택트 렌즈 착용 속성 상세'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.WEAR_IMGSET_NO is '착용샷 이미지 세트 번호'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.WEAR_IMG_TYPE is '착용샷 이미지 유형'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.IMG_PATH is '이미지 경로'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.IMG_NM is '이미지 명'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.IMG_WIDTH is '이미지 가로'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.IMG_HEIGHT is '이미지 세로'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.IMG_SIZE is '이미지 사이즈'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.WEAR_GOODS_NM is '착용 상품 명'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.COLOR_VALUE is '색상 값'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.WEAR_CYCLE is '착용 주기'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.GRP_DMTR is '그래픽 직경'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.MATERIAL_VALUE is '재질 값'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.UV_INTERCEPTION_VALUE is '자외선 차단 값'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.QTT_VALUE is '수량 값'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.SALE_PRICE_VALUE is '판매 가격 값'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.MKT_BNF_VALUE is '마켓 혜택 값'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.REGR_NO is '등록자 번호'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.REG_DTTM is '등록 일시'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.UPDR_NO is '수정자 번호'
/

comment on column TG_CONTACT_WEAR_ATTR_DTL.UPD_DTTM is '수정 일시'
/

create index IDX_TG_CONTACT_WEAR_ATTR_DTL_F
    on TG_CONTACT_WEAR_ATTR_DTL (WEAR_IMGSET_NO)
/

create table SMS_080_RECV_RJT
(
    DN           VARCHAR2(100),
    TELNO        VARCHAR2(100),
    CERTIFY_CD   VARCHAR2(20),
    REG_DTTM     DATE not null,
    RJT_PRC_YN   VARCHAR2(1),
    RJT_PRC_DTTM DATE
)
/

comment on table SMS_080_RECV_RJT is 'SMS 080 수신 거부'
/

comment on column SMS_080_RECV_RJT.DN is 'DN'
/

comment on column SMS_080_RECV_RJT.TELNO is '전화번호'
/

comment on column SMS_080_RECV_RJT.CERTIFY_CD is '인증 코드'
/

comment on column SMS_080_RECV_RJT.REG_DTTM is '등록 일시'
/

comment on column SMS_080_RECV_RJT.RJT_PRC_YN is '거부 처리 여부'
/

comment on column SMS_080_RECV_RJT.RJT_PRC_DTTM is '거부 처리 일시'
/

create table TC_STR_BOOKING_TTS_LIST
(
    DATES       DATE                 not null,
    STR_CODE    VARCHAR2(4)          not null,
    TIMES       VARCHAR2(6)          not null,
    IP          VARCHAR2(15),
    NM_CUST     VARCHAR2(30),
    HANDPHONE   VARCHAR2(20),
    FLAG        VARCHAR2(2),
    PURPOSE     VARCHAR2(100),
    PURPOSE_ETC VARCHAR2(100),
    BOOK_YN     CHAR,
    BOOK_TIME   VARCHAR2(4),
    INPUT_DATE  DATE default sysdate not null,
    CNG_DATE    DATE,
    SEQ_NO      NUMBER,
    STATUS      VARCHAR2(1),
    TTS_YN      CHAR
)
/

create index TC_STR_BOOKING_TTS_LIST_INDEX
    on TC_STR_BOOKING_TTS_LIST (DATES, STR_CODE, TIMES)
/

create table TA_HOMEPAGE_IF_LOG
(
    IF_LOG_DTTM DATE not null
        constraint IDX_TA_HOMEPAGE_IF_LOG_PK
            primary key,
    SITE_ID     VARCHAR2(50),
    SITE_NO     NUMBER(19),
    IO_GB       VARCHAR2(1),
    IF_GB_CD    VARCHAR2(2),
    IF_CONTENT  CLOB
)
/

comment on table TA_HOMEPAGE_IF_LOG is '홈페이지 연계 로그'
/

comment on column TA_HOMEPAGE_IF_LOG.IF_LOG_DTTM is '연계 로그 일시'
/

comment on column TA_HOMEPAGE_IF_LOG.SITE_ID is '사이트 ID'
/

comment on column TA_HOMEPAGE_IF_LOG.SITE_NO is '사이트 번호'
/

comment on column TA_HOMEPAGE_IF_LOG.IO_GB is '입출력 구분'
/

comment on column TA_HOMEPAGE_IF_LOG.IF_GB_CD is '연계 구분 코드'
/

comment on column TA_HOMEPAGE_IF_LOG.IF_CONTENT is '연계 내용'
/

create table TC_VISON_CHECK
(
    VISION_CHECK_NO NUMBER not null
        constraint IDX_TC_VISON_CHECK_PK
            primary key,
    MEMBER_NO       NUMBER,
    RELATE_ACTIVITY VARCHAR2(500) default NULL,
    AGE             VARCHAR2(50),
    LENS_GB_CD      VARCHAR2(1),
    CHECK_NO        NUMBER(19),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    RESULT_ALL      CLOB
)
/

comment on table TC_VISON_CHECK is '비전체크'
/

comment on column TC_VISON_CHECK.VISION_CHECK_NO is '비전체크 번호'
/

comment on column TC_VISON_CHECK.MEMBER_NO is '회원 번호'
/

comment on column TC_VISON_CHECK.RELATE_ACTIVITY is '관련 활동'
/

comment on column TC_VISON_CHECK.AGE is '연령'
/

comment on column TC_VISON_CHECK.LENS_GB_CD is '렌즈 구분 코드'
/

comment on column TC_VISON_CHECK.CHECK_NO is '체크 번호'
/

comment on column TC_VISON_CHECK.REGR_NO is '등록자 번호'
/

comment on column TC_VISON_CHECK.REG_DTTM is '등록 일시'
/

comment on column TC_VISON_CHECK.UPDR_NO is '수정자 번호'
/

comment on column TC_VISON_CHECK.UPD_DTTM is '수정 일시'
/

comment on column TC_VISON_CHECK.RESULT_ALL is '전체결과'
/

create table TC_VISON_CHECK_DSCRT
(
    LENS_GB_CD   VARCHAR2(1) not null,
    CHECK_NO     NUMBER(19)  not null,
    CHECK_NM     VARCHAR2(30),
    SIMPLE_DSCRT VARCHAR2(300),
    DTL_DSCRT    CLOB,
    REGR_NO      NUMBER,
    REG_DTTM     DATE,
    UPDR_NO      NUMBER,
    UPD_DTTM     DATE,
    IMG_NM       VARCHAR2(20),
    SEQ          NUMBER
)
/

comment on table TC_VISON_CHECK_DSCRT is '비전체크 설명'
/

comment on column TC_VISON_CHECK_DSCRT.LENS_GB_CD is '렌즈 구분 코드'
/

comment on column TC_VISON_CHECK_DSCRT.CHECK_NO is '체크 번호'
/

comment on column TC_VISON_CHECK_DSCRT.CHECK_NM is '체크 명'
/

comment on column TC_VISON_CHECK_DSCRT.SIMPLE_DSCRT is '간단 설명'
/

comment on column TC_VISON_CHECK_DSCRT.DTL_DSCRT is '상세 설명'
/

comment on column TC_VISON_CHECK_DSCRT.REGR_NO is '등록자 번호'
/

comment on column TC_VISON_CHECK_DSCRT.REG_DTTM is '등록 일시'
/

comment on column TC_VISON_CHECK_DSCRT.UPDR_NO is '수정자 번호'
/

comment on column TC_VISON_CHECK_DSCRT.UPD_DTTM is '수정 일시'
/

comment on column TC_VISON_CHECK_DSCRT.IMG_NM is '이미지 명'
/

comment on column TC_VISON_CHECK_DSCRT.SEQ is '순번'
/

create index TC_VISON_CHECK_DSCRT_INDX01
    on TC_VISON_CHECK_DSCRT (LENS_GB_CD, CHECK_NO)
/

create table TC_VISON_CHECK_DSCRT_20180830
(
    LENS_GB_CD   VARCHAR2(1) not null,
    CHECK_NO     NUMBER(19)  not null,
    CHECK_NM     VARCHAR2(30),
    SIMPLE_DSCRT VARCHAR2(300),
    DTL_DSCRT    CLOB,
    REGR_NO      NUMBER,
    REG_DTTM     DATE,
    UPDR_NO      NUMBER,
    UPD_DTTM     DATE,
    IMG_NM       VARCHAR2(20)
)
/

create table TI_GOODS_REG_UPD_IF
(
    IF_SNO              VARCHAR2(16)  not null
        constraint IDX_TI_GOODS_REG_UPD_IF_PK
            primary key,
    IF_ID               VARCHAR2(10),
    IF_NO               VARCHAR2(16),
    SITE_NO             NUMBER(19),
    REG_GB              VARCHAR2(1),
    GOODS_NM            VARCHAR2(100) not null,
    ITEM_NM             VARCHAR2(100),
    MODEL_NM            VARCHAR2(100),
    BRAND_NM            VARCHAR2(50),
    GOODS_NO            VARCHAR2(16),
    ITEM_NO             VARCHAR2(18),
    ATTR_VER            VARCHAR2(5),
    SRCH_WORD           VARCHAR2(2000),
    GOODS_GB_CD         VARCHAR2(1),
    CTG_NO1             VARCHAR2(4),
    CTG_NO2             VARCHAR2(4),
    CTG_NO3             VARCHAR2(4),
    CTG_NO4             VARCHAR2(4),
    MMFT                VARCHAR2(100),
    HABITAT             VARCHAR2(30),
    PRDT_YR             VARCHAR2(4),
    MK_DT               VARCHAR2(8),
    SSN_GB_CD           VARCHAR2(1),
    MW_GB_CD            VARCHAR2(1),
    SALE_STATUS_CD      VARCHAR2(1)   not null,
    TAX_GB_CD           VARCHAR2(1),
    DLVRC_GB_CD         VARCHAR2(1),
    GOODS_EACH_DLVRC    VARCHAR2(10),
    SUPPLY_PRICE        VARCHAR2(10),
    SALE_PRICE          VARCHAR2(10),
    CUSTOMER_PRICE      VARCHAR2(10),
    OPT_GB1             VARCHAR2(100),
    OPT_ITEM1           VARCHAR2(500),
    OPT_GB2             VARCHAR2(100),
    OPT_ITEM2           VARCHAR2(500),
    GOODS_IMG_TYPE      VARCHAR2(2),
    DLGT_IMG_PATH       VARCHAR2(300),
    IMG_PATH1           VARCHAR2(300),
    IMG_PATH2           VARCHAR2(300),
    IMG_PATH3           VARCHAR2(300),
    IMG_PATH4           VARCHAR2(300),
    IMG_PATH5           VARCHAR2(300),
    GOODS_DTL_DSCRT     CLOB,
    MTRL_HABITAT        VARCHAR2(300),
    STOCK_MANAGE_USE_YN VARCHAR2(1),
    OPT_UPD_PSB_YN      VARCHAR2(1),
    ATTR_INFO_UPD_YN    VARCHAR2(1),
    ATTR_CLSF_CD        VARCHAR2(3),
    ATTR_VALUE1         VARCHAR2(300),
    ATTR_VALUE2         VARCHAR2(300),
    ATTR_VALUE3         VARCHAR2(300),
    ATTR_VALUE4         VARCHAR2(300),
    ATTR_VALUE5         VARCHAR2(300),
    ATTR_VALUE6         VARCHAR2(300),
    ATTR_VALUE7         VARCHAR2(300),
    ATTR_VALUE8         VARCHAR2(300),
    ATTR_VALUE9         VARCHAR2(300),
    ATTR_VALUE10        VARCHAR2(300),
    ATTR_VALUE11        VARCHAR2(300),
    ATTR_VALUE12        VARCHAR2(300),
    ATTR_VALUE13        VARCHAR2(300),
    ATTR_VALUE14        VARCHAR2(300),
    ATTR_VALUE15        VARCHAR2(300),
    ATTR_VALUE16        VARCHAR2(300),
    ATTR_VALUE17        VARCHAR2(300),
    ATTR_VALUE18        VARCHAR2(300),
    ATTR_VALUE19        VARCHAR2(300),
    ATTR_VALUE20        VARCHAR2(300),
    ATTR_VALUE21        VARCHAR2(300),
    ATTR_VALUE22        VARCHAR2(300),
    ATTR_VALUE23        VARCHAR2(300),
    ATTR_VALUE24        VARCHAR2(300),
    IMPT_REGIST_NO      VARCHAR2(18),
    SBN_IF_YN           VARCHAR2(1),
    SBN_IF_MSG          VARCHAR2(300),
    NAVER_SEND_YN       VARCHAR2(1),
    DAUM_SEND_YN        VARCHAR2(1),
    BTCH_PRC_YN         VARCHAR2(1),
    REGR_NO             NUMBER,
    REG_DTTM            DATE,
    UPDR_NO             NUMBER,
    UPD_DTTM            DATE
)
/

comment on table TI_GOODS_REG_UPD_IF is '상품 등록 수정 연계'
/

comment on column TI_GOODS_REG_UPD_IF.IF_SNO is '연계 일련번호'
/

comment on column TI_GOODS_REG_UPD_IF.IF_ID is '연계 ID'
/

comment on column TI_GOODS_REG_UPD_IF.IF_NO is '연계 번호'
/

comment on column TI_GOODS_REG_UPD_IF.SITE_NO is '사이트 번호'
/

comment on column TI_GOODS_REG_UPD_IF.REG_GB is '등록 구분'
/

comment on column TI_GOODS_REG_UPD_IF.GOODS_NM is '상품 명'
/

comment on column TI_GOODS_REG_UPD_IF.ITEM_NM is '단품 명'
/

comment on column TI_GOODS_REG_UPD_IF.MODEL_NM is '모델 명'
/

comment on column TI_GOODS_REG_UPD_IF.BRAND_NM is '브랜드 명'
/

comment on column TI_GOODS_REG_UPD_IF.GOODS_NO is '상품 번호'
/

comment on column TI_GOODS_REG_UPD_IF.ITEM_NO is '단품 번호'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VER is '속성 VER'
/

comment on column TI_GOODS_REG_UPD_IF.SRCH_WORD is '검색어'
/

comment on column TI_GOODS_REG_UPD_IF.GOODS_GB_CD is '상품 구분 코드'
/

comment on column TI_GOODS_REG_UPD_IF.CTG_NO1 is '카테고리 번호1'
/

comment on column TI_GOODS_REG_UPD_IF.CTG_NO2 is '카테고리 번호2'
/

comment on column TI_GOODS_REG_UPD_IF.CTG_NO3 is '카테고리 번호3'
/

comment on column TI_GOODS_REG_UPD_IF.CTG_NO4 is '카테고리 번호4'
/

comment on column TI_GOODS_REG_UPD_IF.MMFT is '제조사'
/

comment on column TI_GOODS_REG_UPD_IF.HABITAT is '원산지'
/

comment on column TI_GOODS_REG_UPD_IF.PRDT_YR is '생산 년도'
/

comment on column TI_GOODS_REG_UPD_IF.MK_DT is '제조 일자'
/

comment on column TI_GOODS_REG_UPD_IF.SSN_GB_CD is '계절 구분 코드'
/

comment on column TI_GOODS_REG_UPD_IF.MW_GB_CD is '남여 구분 코드'
/

comment on column TI_GOODS_REG_UPD_IF.SALE_STATUS_CD is '판매 상태 코드'
/

comment on column TI_GOODS_REG_UPD_IF.TAX_GB_CD is '과세 구분 코드'
/

comment on column TI_GOODS_REG_UPD_IF.DLVRC_GB_CD is '배송비 구분 코드'
/

comment on column TI_GOODS_REG_UPD_IF.GOODS_EACH_DLVRC is '상품 별 배송비'
/

comment on column TI_GOODS_REG_UPD_IF.SUPPLY_PRICE is '공급 가격'
/

comment on column TI_GOODS_REG_UPD_IF.SALE_PRICE is '판매 가격'
/

comment on column TI_GOODS_REG_UPD_IF.CUSTOMER_PRICE is '소비자 가격'
/

comment on column TI_GOODS_REG_UPD_IF.OPT_GB1 is '옵션 구분1'
/

comment on column TI_GOODS_REG_UPD_IF.OPT_ITEM1 is '옵션 항목1'
/

comment on column TI_GOODS_REG_UPD_IF.OPT_GB2 is '옵션 구분2'
/

comment on column TI_GOODS_REG_UPD_IF.OPT_ITEM2 is '옵션 항목2'
/

comment on column TI_GOODS_REG_UPD_IF.GOODS_IMG_TYPE is '상품 이미지 유형'
/

comment on column TI_GOODS_REG_UPD_IF.DLGT_IMG_PATH is '대표 이미지 경로'
/

comment on column TI_GOODS_REG_UPD_IF.IMG_PATH1 is '이미지 경로1'
/

comment on column TI_GOODS_REG_UPD_IF.IMG_PATH2 is '이미지 경로2'
/

comment on column TI_GOODS_REG_UPD_IF.IMG_PATH3 is '이미지 경로3'
/

comment on column TI_GOODS_REG_UPD_IF.IMG_PATH4 is '이미지 경로4'
/

comment on column TI_GOODS_REG_UPD_IF.IMG_PATH5 is '이미지 경로5'
/

comment on column TI_GOODS_REG_UPD_IF.GOODS_DTL_DSCRT is '상품 상세 설명'
/

comment on column TI_GOODS_REG_UPD_IF.MTRL_HABITAT is '재료 원산지'
/

comment on column TI_GOODS_REG_UPD_IF.STOCK_MANAGE_USE_YN is '재고 관리 사용 여부'
/

comment on column TI_GOODS_REG_UPD_IF.OPT_UPD_PSB_YN is '옵션 수정 가능 여부'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_INFO_UPD_YN is '속성 정보 수정 여부'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_CLSF_CD is '속성 분류 코드'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE1 is '속성 값1'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE2 is '속성 값2'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE3 is '속성 값3'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE4 is '속성 값4'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE5 is '속성 값5'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE6 is '속성 값6'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE7 is '속성 값7'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE8 is '속성 값8'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE9 is '속성 값9'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE10 is '속성 값10'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE11 is '속성 값11'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE12 is '속성 값12'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE13 is '속성 값13'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE14 is '속성 값14'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE15 is '속성 값15'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE16 is '속성 값16'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE17 is '속성 값17'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE18 is '속성 값18'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE19 is '속성 값19'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE20 is '속성 값20'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE21 is '속성 값21'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE22 is '속성 값22'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE23 is '속성 값23'
/

comment on column TI_GOODS_REG_UPD_IF.ATTR_VALUE24 is '속성 값24'
/

comment on column TI_GOODS_REG_UPD_IF.IMPT_REGIST_NO is '수입 신고 번호'
/

comment on column TI_GOODS_REG_UPD_IF.SBN_IF_YN is '사방넷 연계 여부'
/

comment on column TI_GOODS_REG_UPD_IF.SBN_IF_MSG is '사방넷 연계 메세지'
/

comment on column TI_GOODS_REG_UPD_IF.NAVER_SEND_YN is '네이버 전송 여부'
/

comment on column TI_GOODS_REG_UPD_IF.DAUM_SEND_YN is '다음 전송 여부'
/

comment on column TI_GOODS_REG_UPD_IF.BTCH_PRC_YN is '배치 처리 여부'
/

comment on column TI_GOODS_REG_UPD_IF.REGR_NO is '등록자 번호'
/

comment on column TI_GOODS_REG_UPD_IF.REG_DTTM is '등록 일시'
/

comment on column TI_GOODS_REG_UPD_IF.UPDR_NO is '수정자 번호'
/

comment on column TI_GOODS_REG_UPD_IF.UPD_DTTM is '수정 일시'
/

create table TI_INQUIRY_CLCT_IF
(
    IF_SNO          VARCHAR2(16) not null
        constraint IDX_TI_INQUIRY_CLCT_IF_PK
            primary key,
    IF_ID           VARCHAR2(10),
    IF_NO           VARCHAR2(16),
    SITE_NO         NUMBER(19),
    SBN_SNO         VARCHAR2(16),
    SPMALL_ID       VARCHAR2(10),
    SPMALL_LOGIN_ID VARCHAR2(300) default NULL,
    PRC_GB          VARCHAR2(10),
    LETT_NO         VARCHAR2(16),
    GRP_NO          VARCHAR2(16),
    BBS_ID          VARCHAR2(50),
    CLCT_DT         VARCHAR2(14),
    SPMALL_ORD_NO   VARCHAR2(30),
    GOODS_NO        VARCHAR2(16),
    ITEM_NO         VARCHAR2(18),
    GOODS_NM        VARCHAR2(200),
    TITLE           VARCHAR2(200),
    CONTENT         CLOB,
    WRTR            VARCHAR2(100),
    CUST_REG_DT     VARCHAR2(14),
    REPLY_CONTENT   CLOB,
    RPLR            VARCHAR2(100),
    REPLY_REG_DTTM  VARCHAR2(14),
    REPLY_SEND_DTTM VARCHAR2(14),
    INQUIRY_GB      VARCHAR2(30),
    SBN_IF_YN       VARCHAR2(1),
    SBN_IF_MSG      VARCHAR2(300),
    BTCH_PRC_YN     VARCHAR2(1),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE
)
/

comment on table TI_INQUIRY_CLCT_IF is '문의 수집 연계'
/

comment on column TI_INQUIRY_CLCT_IF.IF_SNO is '연계 일련번호'
/

comment on column TI_INQUIRY_CLCT_IF.IF_ID is '연계 ID'
/

comment on column TI_INQUIRY_CLCT_IF.IF_NO is '연계 번호'
/

comment on column TI_INQUIRY_CLCT_IF.SITE_NO is '사이트 번호'
/

comment on column TI_INQUIRY_CLCT_IF.SBN_SNO is '사방넷 일련번호'
/

comment on column TI_INQUIRY_CLCT_IF.SPMALL_ID is '쇼핑몰 ID'
/

comment on column TI_INQUIRY_CLCT_IF.SPMALL_LOGIN_ID is '쇼핑몰 로그인 ID'
/

comment on column TI_INQUIRY_CLCT_IF.PRC_GB is '처리 구분'
/

comment on column TI_INQUIRY_CLCT_IF.LETT_NO is '글 번호'
/

comment on column TI_INQUIRY_CLCT_IF.GRP_NO is '그룹 번호'
/

comment on column TI_INQUIRY_CLCT_IF.BBS_ID is '게시판 아이디'
/

comment on column TI_INQUIRY_CLCT_IF.CLCT_DT is '수집 일자'
/

comment on column TI_INQUIRY_CLCT_IF.SPMALL_ORD_NO is '쇼핑몰 주문 번호'
/

comment on column TI_INQUIRY_CLCT_IF.GOODS_NO is '상품 번호'
/

comment on column TI_INQUIRY_CLCT_IF.ITEM_NO is '단품 번호'
/

comment on column TI_INQUIRY_CLCT_IF.GOODS_NM is '상품 명'
/

comment on column TI_INQUIRY_CLCT_IF.TITLE is '제목'
/

comment on column TI_INQUIRY_CLCT_IF.CONTENT is '내용'
/

comment on column TI_INQUIRY_CLCT_IF.WRTR is '작성자'
/

comment on column TI_INQUIRY_CLCT_IF.CUST_REG_DT is '고객 등록 일자'
/

comment on column TI_INQUIRY_CLCT_IF.REPLY_CONTENT is '답변 내용'
/

comment on column TI_INQUIRY_CLCT_IF.RPLR is '답변자'
/

comment on column TI_INQUIRY_CLCT_IF.REPLY_REG_DTTM is '답변 등록 일시'
/

comment on column TI_INQUIRY_CLCT_IF.REPLY_SEND_DTTM is '답변 전송 일시'
/

comment on column TI_INQUIRY_CLCT_IF.INQUIRY_GB is '문의 구분'
/

comment on column TI_INQUIRY_CLCT_IF.SBN_IF_YN is '사방넷 연계 여부'
/

comment on column TI_INQUIRY_CLCT_IF.SBN_IF_MSG is '사방넷 연계 메세지'
/

comment on column TI_INQUIRY_CLCT_IF.BTCH_PRC_YN is '배치 처리 여부'
/

comment on column TI_INQUIRY_CLCT_IF.REGR_NO is '등록자 번호'
/

comment on column TI_INQUIRY_CLCT_IF.REG_DTTM is '등록 일시'
/

comment on column TI_INQUIRY_CLCT_IF.UPDR_NO is '수정자 번호'
/

comment on column TI_INQUIRY_CLCT_IF.UPD_DTTM is '수정 일시'
/

create table TI_INQUIRY_REPLY_REG_IF
(
    IF_SNO        VARCHAR2(16) not null
        constraint IDX_TI_INQUIRY_REPLY_REG_IF_PK
            primary key,
    IF_ID         VARCHAR2(10),
    IF_NO         VARCHAR2(16),
    SITE_NO       NUMBER(19),
    SBN_SNO       VARCHAR2(16),
    LETT_NO       VARCHAR2(16),
    REPLY_CONTENT CLOB,
    SBN_IF_YN     VARCHAR2(1),
    SBN_IF_MSG    VARCHAR2(300),
    BTCH_PRC_YN   VARCHAR2(1),
    REGR_NO       NUMBER,
    REG_DTTM      DATE,
    UPDR_NO       NUMBER,
    UPD_DTTM      DATE
)
/

comment on table TI_INQUIRY_REPLY_REG_IF is '문의 답변 등록 연계'
/

comment on column TI_INQUIRY_REPLY_REG_IF.IF_SNO is '연계 일련번호'
/

comment on column TI_INQUIRY_REPLY_REG_IF.IF_ID is '연계 ID'
/

comment on column TI_INQUIRY_REPLY_REG_IF.IF_NO is '연계 번호'
/

comment on column TI_INQUIRY_REPLY_REG_IF.SITE_NO is '사이트 번호'
/

comment on column TI_INQUIRY_REPLY_REG_IF.SBN_SNO is '사방넷 일련번호'
/

comment on column TI_INQUIRY_REPLY_REG_IF.LETT_NO is '글 번호'
/

comment on column TI_INQUIRY_REPLY_REG_IF.REPLY_CONTENT is '답변 내용'
/

comment on column TI_INQUIRY_REPLY_REG_IF.SBN_IF_YN is '사방넷 연계 여부'
/

comment on column TI_INQUIRY_REPLY_REG_IF.SBN_IF_MSG is '사방넷 연계 메세지'
/

comment on column TI_INQUIRY_REPLY_REG_IF.BTCH_PRC_YN is '배치 처리 여부'
/

comment on column TI_INQUIRY_REPLY_REG_IF.REGR_NO is '등록자 번호'
/

comment on column TI_INQUIRY_REPLY_REG_IF.REG_DTTM is '등록 일시'
/

comment on column TI_INQUIRY_REPLY_REG_IF.UPDR_NO is '수정자 번호'
/

comment on column TI_INQUIRY_REPLY_REG_IF.UPD_DTTM is '수정 일시'
/

create table TO_ORD_MEMO
(
    ORD_NO       NUMBER(16) not null
        constraint FK_ORD_MEMO_1
            references TO_ORD,
    MEMO_SEQ     NUMBER     not null,
    MEMO_CONTENT CLOB,
    REGR_NO      NUMBER,
    REG_DTTM     DATE,
    UPDR_NO      NUMBER,
    UPD_DTTM     DATE,
    constraint IDX_TO_ORD_MEMO_PK
        primary key (ORD_NO, MEMO_SEQ)
)
/

comment on table TO_ORD_MEMO is '주문 메모'
/

comment on column TO_ORD_MEMO.ORD_NO is '주문 번호'
/

comment on column TO_ORD_MEMO.MEMO_SEQ is '메모 순번'
/

comment on column TO_ORD_MEMO.MEMO_CONTENT is '메모 내용'
/

comment on column TO_ORD_MEMO.REGR_NO is '등록자 번호'
/

comment on column TO_ORD_MEMO.REG_DTTM is '등록 일시'
/

comment on column TO_ORD_MEMO.UPDR_NO is '수정자 번호'
/

comment on column TO_ORD_MEMO.UPD_DTTM is '수정 일시'
/

create table TO_ORD_MEMO_HIST
(
    ORD_NO          NUMBER(16) not null,
    MEMO_SEQ        NUMBER     not null,
    HIST_START_DTTM DATE       not null,
    MEMO_CONTENT    CLOB,
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE
)
/

comment on table TO_ORD_MEMO_HIST is '二쇰Ц 硫붾え ？대젰'
/

comment on column TO_ORD_MEMO_HIST.ORD_NO is '二쇰Ц 踰덊샇'
/

comment on column TO_ORD_MEMO_HIST.MEMO_SEQ is '硫붾え ？쒕쾲'
/

comment on column TO_ORD_MEMO_HIST.HIST_START_DTTM is '？대젰 ？쒖옉 ？쇱떆'
/

comment on column TO_ORD_MEMO_HIST.MEMO_CONTENT is '硫붾え ？댁슜'
/

comment on column TO_ORD_MEMO_HIST.REGR_NO is '？깅줉？？踰덊샇'
/

comment on column TO_ORD_MEMO_HIST.REG_DTTM is '？깅줉 ？쇱떆'
/

comment on column TO_ORD_MEMO_HIST.UPDR_NO is '？섏젙？？踰덊샇'
/

comment on column TO_ORD_MEMO_HIST.UPD_DTTM is '？섏젙 ？쇱떆'
/

create unique index IDX_TO_ORD_MEMO_HIST_PK
    on TO_ORD_MEMO_HIST (ORD_NO, MEMO_SEQ, HIST_START_DTTM)
/

create table TS_SITE_INFO
(
    SITE_NO      NUMBER(19)  not null
        constraint FK_SITE_INFO_1
            references TS_SITE,
    SITE_INFO_CD VARCHAR2(2) not null,
    CONTENT      CLOB,
    USE_YN       VARCHAR2(1),
    REGR_NO      NUMBER,
    REG_DTTM     DATE,
    UPDR_NO      NUMBER,
    UPD_DTTM     DATE,
    constraint IDX_TS_SITE_INFO_PK
        primary key (SITE_NO, SITE_INFO_CD)
)
/

comment on table TS_SITE_INFO is '사이트 정보'
/

comment on column TS_SITE_INFO.SITE_NO is '사이트 번호'
/

comment on column TS_SITE_INFO.SITE_INFO_CD is '사이트 정보 코드'
/

comment on column TS_SITE_INFO.CONTENT is '내용'
/

comment on column TS_SITE_INFO.USE_YN is '사용 여부'
/

comment on column TS_SITE_INFO.REGR_NO is '등록자 번호'
/

comment on column TS_SITE_INFO.REG_DTTM is '등록 일시'
/

comment on column TS_SITE_INFO.UPDR_NO is '수정자 번호'
/

comment on column TS_SITE_INFO.UPD_DTTM is '수정 일시'
/

create table BATCH_JOB_EXECUTION_CONTEXT
(
    JOB_EXECUTION_ID   NUMBER(19)     not null,
    SHORT_CONTEXT      VARCHAR2(2500) not null,
    SERIALIZED_CONTEXT CLOB
)
/

create table BATCH_STEP_EXECUTION_CONTEXT
(
    STEP_EXECUTION_ID  NUMBER(19)     not null,
    SHORT_CONTEXT      VARCHAR2(2500) not null,
    SERIALIZED_CONTEXT CLOB
)
/

create table TB_BBS
(
    BBS_ID                   VARCHAR2(50) not null,
    SITE_NO                  NUMBER(19)   not null
        constraint FK_BBS_1
            references TS_SITE,
    BBS_NM                   VARCHAR2(50),
    BBS_GB_CD                VARCHAR2(10),
    BBS_KIND_CD              VARCHAR2(10),
    USE_YN                   VARCHAR2(1) default 'Y',
    TITLE_USE_YN             VARCHAR2(1),
    BBS_ADDR                 VARCHAR2(300),
    READ_LIST_USE_YN         VARCHAR2(1),
    READ_LETT_CONTENT_USE_YN VARCHAR2(1),
    WRITE_LETT_USE_YN        VARCHAR2(1),
    WRITE_COMMENT_USE_YN     VARCHAR2(1),
    WRITE_REPLY_USE_YN       VARCHAR2(1),
    REGR_DISP_CD             VARCHAR2(2),
    ICON_SET_USE_YN          VARCHAR2(1),
    ICON_USE_YN_HOT          VARCHAR2(1),
    ICON_CHECK_VALUE_HOT     VARCHAR2(10),
    ICON_USE_YN_NEW          VARCHAR2(1),
    ICON_CHECK_VALUE_NEW     VARCHAR2(10),
    SECT_LETT_SET_YN         VARCHAR2(1),
    NOTICE_LETT_SET_YN       VARCHAR2(1),
    BBS_SPAM_PRVNT_YN        VARCHAR2(1),
    TOP_HTML_YN              VARCHAR2(1),
    BOTTOM_HTML_YN           VARCHAR2(1),
    TOP_HTML_SET             CLOB,
    BOTTOM_HTML_SET          CLOB,
    REG_DTTM                 DATE,
    REGR_NO                  NUMBER,
    UPD_DTTM                 DATE,
    UPDR_NO                  NUMBER,
    constraint IDX_TB_BBS_PK
        primary key (BBS_ID, SITE_NO)
)
/

comment on table TB_BBS is '게시판'
/

comment on column TB_BBS.BBS_ID is '게시판 아이디'
/

comment on column TB_BBS.SITE_NO is '사이트 번호'
/

comment on column TB_BBS.BBS_NM is '게시판 명'
/

comment on column TB_BBS.BBS_GB_CD is '게시판 구분 코드'
/

comment on column TB_BBS.BBS_KIND_CD is '게시판 종류 코드'
/

comment on column TB_BBS.USE_YN is '사용 여부'
/

comment on column TB_BBS.TITLE_USE_YN is '타이틀 사용 여부'
/

comment on column TB_BBS.BBS_ADDR is '게시판 주소'
/

comment on column TB_BBS.READ_LIST_USE_YN is '읽기 리스트 사용 여부'
/

comment on column TB_BBS.READ_LETT_CONTENT_USE_YN is '읽기 글 내용 사용 여부'
/

comment on column TB_BBS.WRITE_LETT_USE_YN is '쓰기 글 사용 여부'
/

comment on column TB_BBS.WRITE_COMMENT_USE_YN is '쓰기 코멘트 사용 여부'
/

comment on column TB_BBS.WRITE_REPLY_USE_YN is '쓰기 답글 사용 여부'
/

comment on column TB_BBS.REGR_DISP_CD is '등록자 표시 코드'
/

comment on column TB_BBS.ICON_SET_USE_YN is '아이콘 설정 사용 여부'
/

comment on column TB_BBS.ICON_USE_YN_HOT is '아이콘 사용 여부 HOT'
/

comment on column TB_BBS.ICON_CHECK_VALUE_HOT is '아이콘 체크 값 HOT'
/

comment on column TB_BBS.ICON_USE_YN_NEW is '아이콘 사용 여부 NEW'
/

comment on column TB_BBS.ICON_CHECK_VALUE_NEW is '아이콘 체크 값 NEW'
/

comment on column TB_BBS.SECT_LETT_SET_YN is '비밀 글 설정 여부'
/

comment on column TB_BBS.NOTICE_LETT_SET_YN is '공지 글 설정 여부'
/

comment on column TB_BBS.BBS_SPAM_PRVNT_YN is '게시판 스팸방지 여부'
/

comment on column TB_BBS.TOP_HTML_YN is '상단 HTML 여부'
/

comment on column TB_BBS.BOTTOM_HTML_YN is '하단 HTML 여부'
/

comment on column TB_BBS.TOP_HTML_SET is '상단 HTML 설정'
/

comment on column TB_BBS.BOTTOM_HTML_SET is '하단 HTML 설정'
/

comment on column TB_BBS.REG_DTTM is '등록 일시'
/

comment on column TB_BBS.REGR_NO is '등록자 번호'
/

comment on column TB_BBS.UPD_DTTM is '수정 일시'
/

comment on column TB_BBS.UPDR_NO is '수정자 번호'
/

create table TB_BBS_TITLE
(
    TITLE_NO NUMBER       not null
        constraint IDX_TB_BBS_TITLE_PK
            primary key,
    BBS_ID   VARCHAR2(50) not null,
    SITE_NO  NUMBER(19)   not null,
    TITLE_NM VARCHAR2(1000),
    REG_DTTM DATE,
    REGR_NO  NUMBER,
    UPD_DTTM DATE,
    UPDR_NO  NUMBER,
    DELR_NO  NUMBER,
    DEL_YN   CHAR,
    constraint FK_BBS_TITLE_1
        foreign key (BBS_ID, SITE_NO) references TB_BBS
)
/

comment on table TB_BBS_TITLE is '게시판 타이틀'
/

comment on column TB_BBS_TITLE.TITLE_NO is '타이틀 번호'
/

comment on column TB_BBS_TITLE.BBS_ID is '게시판 아이디'
/

comment on column TB_BBS_TITLE.SITE_NO is '사이트 번호'
/

comment on column TB_BBS_TITLE.TITLE_NM is '타이틀 명'
/

comment on column TB_BBS_TITLE.REG_DTTM is '등록 일시'
/

comment on column TB_BBS_TITLE.REGR_NO is '등록자 번호'
/

comment on column TB_BBS_TITLE.UPD_DTTM is '수정 일시'
/

comment on column TB_BBS_TITLE.UPDR_NO is '수정자 번호'
/

comment on column TB_BBS_TITLE.DELR_NO is '삭제자 번호'
/

comment on column TB_BBS_TITLE.DEL_YN is '삭제 여부'
/

create table TB_ATCHFILE
(
    FILE_NO     NUMBER not null
        constraint IDX_TB_ATCHFILE_PK
            primary key,
    BBS_ID      VARCHAR2(50),
    SITE_NO     NUMBER(19),
    LETT_NO     NUMBER,
    FILE_PATH   VARCHAR2(300),
    FILE_SIZE   NUMBER,
    FILE_GB     VARCHAR2(50),
    ORG_FILE_NM VARCHAR2(300),
    FILE_NM     VARCHAR2(300),
    EXTSN       VARCHAR2(20),
    IMG_YN      VARCHAR2(1),
    IMG_FILE_NM VARCHAR2(300),
    REG_DTTM    DATE,
    REGR_NO     NUMBER,
    UPD_DTTM    DATE,
    UPDR_NO     NUMBER,
    DEL_YN      VARCHAR2(1),
    DEL_DTTM    DATE,
    DELR_NO     NUMBER,
    constraint FK_ATCHFILE_1
        foreign key (BBS_ID, SITE_NO) references TB_BBS
            on delete set null
)
/

comment on table TB_ATCHFILE is '첨부파일'
/

comment on column TB_ATCHFILE.FILE_NO is '파일 번호'
/

comment on column TB_ATCHFILE.BBS_ID is '게시판 아이디'
/

comment on column TB_ATCHFILE.SITE_NO is '사이트 번호'
/

comment on column TB_ATCHFILE.LETT_NO is '글 번호'
/

comment on column TB_ATCHFILE.FILE_PATH is '파일 경로'
/

comment on column TB_ATCHFILE.FILE_SIZE is '파일 사이즈'
/

comment on column TB_ATCHFILE.FILE_GB is '파일 구분'
/

comment on column TB_ATCHFILE.ORG_FILE_NM is '원본 파일 명'
/

comment on column TB_ATCHFILE.FILE_NM is '파일 명'
/

comment on column TB_ATCHFILE.EXTSN is '확장자'
/

comment on column TB_ATCHFILE.IMG_YN is '이미지 여부'
/

comment on column TB_ATCHFILE.IMG_FILE_NM is '이미지 파일 명'
/

comment on column TB_ATCHFILE.REG_DTTM is '등록 일시'
/

comment on column TB_ATCHFILE.REGR_NO is '등록자 번호'
/

comment on column TB_ATCHFILE.UPD_DTTM is '수정 일시'
/

comment on column TB_ATCHFILE.UPDR_NO is '수정자 번호'
/

comment on column TB_ATCHFILE.DEL_YN is '삭제 여부'
/

comment on column TB_ATCHFILE.DEL_DTTM is '삭제 일시'
/

comment on column TB_ATCHFILE.DELR_NO is '삭제자 번호'
/

create table TB_BBS_LETT
(
    LETT_NO         NUMBER       not null
        constraint IDX_TB_BBS_LETT_PK
            primary key,
    BBS_ID          VARCHAR2(50) not null,
    GRP_NO          NUMBER
        constraint FK_BBS_LETT_2
            references TB_BBS_LETT
                on delete set null,
    SITE_NO         NUMBER(19)   not null,
    SELLER_NO       NUMBER(19),
    TITLE_NO        NUMBER,
    TITLE           VARCHAR2(200),
    CONTENT         CLOB,
    INQ_CNT         NUMBER,
    LETT_LVL        VARCHAR2(10),
    NOTICE_YN       VARCHAR2(1),
    SECT_YN         VARCHAR2(1),
    PW              VARCHAR2(10),
    REGR_NM         VARCHAR2(50),
    REPLY_STATUS_YN VARCHAR2(1),
    REG_DTTM        DATE,
    REGR_NO         NUMBER,
    UPD_DTTM        DATE,
    UPDR_NO         NUMBER,
    DEL_DTTM        DATE,
    DELR_NO         NUMBER,
    DEL_YN          CHAR,
    LINK_URL        VARCHAR2(500)  default NULL,
    REL_SEARCH_WORD VARCHAR2(1000) default NULL,
    constraint FK_BBS_LETT_1
        foreign key (BBS_ID, SITE_NO) references TB_BBS
)
/

comment on table TB_BBS_LETT is '게시판_글'
/

comment on column TB_BBS_LETT.LETT_NO is '글 번호'
/

comment on column TB_BBS_LETT.BBS_ID is '게시판 아이디'
/

comment on column TB_BBS_LETT.GRP_NO is '그룹 번호'
/

comment on column TB_BBS_LETT.SITE_NO is '사이트 번호'
/

comment on column TB_BBS_LETT.SELLER_NO is '판매자 번호'
/

comment on column TB_BBS_LETT.TITLE_NO is '타이틀 번호'
/

comment on column TB_BBS_LETT.TITLE is '제목'
/

comment on column TB_BBS_LETT.CONTENT is '내용'
/

comment on column TB_BBS_LETT.INQ_CNT is '조회수'
/

comment on column TB_BBS_LETT.LETT_LVL is '글 레벨'
/

comment on column TB_BBS_LETT.NOTICE_YN is '공지 여부'
/

comment on column TB_BBS_LETT.SECT_YN is '비밀 여부'
/

comment on column TB_BBS_LETT.PW is '비밀번호'
/

comment on column TB_BBS_LETT.REGR_NM is '등록자 명'
/

comment on column TB_BBS_LETT.REPLY_STATUS_YN is '답변 상태 여부'
/

comment on column TB_BBS_LETT.REG_DTTM is '등록 일시'
/

comment on column TB_BBS_LETT.REGR_NO is '등록자 번호'
/

comment on column TB_BBS_LETT.UPD_DTTM is '수정 일시'
/

comment on column TB_BBS_LETT.UPDR_NO is '수정자 번호'
/

comment on column TB_BBS_LETT.DEL_DTTM is '삭제 일시'
/

comment on column TB_BBS_LETT.DELR_NO is '삭제자 번호'
/

comment on column TB_BBS_LETT.DEL_YN is '삭제 여부'
/

comment on column TB_BBS_LETT.LINK_URL is '링크 URL'
/

comment on column TB_BBS_LETT.REL_SEARCH_WORD is '관련검색어'
/

create table TB_FAQ
(
    LETT_NO   NUMBER       not null
        constraint IDX_TB_FAQ_PK
            primary key,
    BBS_ID    VARCHAR2(50) not null,
    SITE_NO   NUMBER(19)   not null,
    FAQ_GB_CD VARCHAR2(10),
    TITLE     VARCHAR2(100),
    CONTENT   CLOB,
    INQ_CNT   NUMBER,
    OPEN_YN   VARCHAR2(1),
    REGR_NO   NUMBER,
    REG_DTTM  DATE,
    UPDR_NO   NUMBER,
    UPD_DTTM  DATE,
    DEL_YN    CHAR,
    DELR_NO   NUMBER,
    DEL_DTTM  DATE,
    constraint FK_BBS_FAQ_1
        foreign key (BBS_ID, SITE_NO) references TB_BBS
)
/

comment on table TB_FAQ is 'FAQ'
/

comment on column TB_FAQ.LETT_NO is '글 번호'
/

comment on column TB_FAQ.BBS_ID is '게시판 아이디'
/

comment on column TB_FAQ.SITE_NO is '사이트 번호'
/

comment on column TB_FAQ.FAQ_GB_CD is 'FAQ 구분 코드'
/

comment on column TB_FAQ.TITLE is '제목'
/

comment on column TB_FAQ.CONTENT is '내용'
/

comment on column TB_FAQ.INQ_CNT is '조회수'
/

comment on column TB_FAQ.OPEN_YN is '공개 여부'
/

comment on column TB_FAQ.REGR_NO is '등록자 번호'
/

comment on column TB_FAQ.REG_DTTM is '등록 일시'
/

comment on column TB_FAQ.UPDR_NO is '수정자 번호'
/

comment on column TB_FAQ.UPD_DTTM is '수정 일시'
/

comment on column TB_FAQ.DEL_YN is '삭제 여부'
/

comment on column TB_FAQ.DELR_NO is '삭제자 번호'
/

comment on column TB_FAQ.DEL_DTTM is '삭제 일시'
/

create table TB_GOODS_BBS_LETT
(
    LETT_NO         NUMBER                  not null
        constraint IDX_TB_GOODS_BBS_LETT_PK
            primary key,
    GRP_NO          NUMBER
        constraint FK_BBS_GOODS_2
            references TB_GOODS_BBS_LETT
                on delete set null,
    BBS_ID          VARCHAR2(50)            not null,
    SITE_NO         NUMBER(19)              not null,
    TITLE_NO        NUMBER,
    TITLE           VARCHAR2(200),
    CONTENT         CLOB,
    INQ_CNT         NUMBER,
    SCORE           NUMBER,
    CTG_NO          NUMBER,
    SECT_YN         VARCHAR2(1),
    OPEN_YN         VARCHAR2(1),
    REPLY_STATUS_YN VARCHAR2(1),
    GOODS_NO        VARCHAR2(16),
    BUY_YN          VARCHAR2(1),
    LETT_LVL        VARCHAR2(10),
    PW              VARCHAR2(10),
    FILE_NO         NUMBER,
    BLIND_USE_YN    VARCHAR2(1),
    EXPS_YN         VARCHAR2(1) default 'Y' not null,
    SMS_SEND_YN     VARCHAR2(1),
    EMAIL_SEND_YN   VARCHAR2(1),
    REG_NM          VARCHAR2(100),
    REG_DTTM        DATE,
    REGR_NO         NUMBER,
    UPD_DTTM        DATE,
    UPDR_NO         NUMBER,
    DEL_YN          CHAR,
    DELR_NO         NUMBER,
    DEL_DTTM        DATE,
    MEMBER_NO       NUMBER,
    BBS_GRADE       VARCHAR2(1),
    SVMN_PAY_YN     VARCHAR2(1),
    SVMN_PAY_AMT    NUMBER,
    constraint FK_BBS_GOODS_1
        foreign key (BBS_ID, SITE_NO) references TB_BBS
)
/

comment on table TB_GOODS_BBS_LETT is '상품 게시판 글'
/

comment on column TB_GOODS_BBS_LETT.LETT_NO is '글 번호'
/

comment on column TB_GOODS_BBS_LETT.GRP_NO is '그룹 번호'
/

comment on column TB_GOODS_BBS_LETT.BBS_ID is '게시판 아이디'
/

comment on column TB_GOODS_BBS_LETT.SITE_NO is '사이트 번호'
/

comment on column TB_GOODS_BBS_LETT.TITLE_NO is '타이틀 번호'
/

comment on column TB_GOODS_BBS_LETT.TITLE is '제목'
/

comment on column TB_GOODS_BBS_LETT.CONTENT is '내용'
/

comment on column TB_GOODS_BBS_LETT.INQ_CNT is '조회수'
/

comment on column TB_GOODS_BBS_LETT.SCORE is '점수'
/

comment on column TB_GOODS_BBS_LETT.CTG_NO is '카테고리 번호'
/

comment on column TB_GOODS_BBS_LETT.SECT_YN is '비밀 여부'
/

comment on column TB_GOODS_BBS_LETT.OPEN_YN is '공개 여부'
/

comment on column TB_GOODS_BBS_LETT.REPLY_STATUS_YN is '답변 상태 여부'
/

comment on column TB_GOODS_BBS_LETT.GOODS_NO is '상품 번호'
/

comment on column TB_GOODS_BBS_LETT.BUY_YN is '구매 여부'
/

comment on column TB_GOODS_BBS_LETT.LETT_LVL is '글 레벨'
/

comment on column TB_GOODS_BBS_LETT.PW is '비밀번호'
/

comment on column TB_GOODS_BBS_LETT.FILE_NO is '파일 번호'
/

comment on column TB_GOODS_BBS_LETT.BLIND_USE_YN is '블라인드 사용 여부'
/

comment on column TB_GOODS_BBS_LETT.EXPS_YN is '노출 여부'
/

comment on column TB_GOODS_BBS_LETT.SMS_SEND_YN is 'SMS 발송 여부'
/

comment on column TB_GOODS_BBS_LETT.EMAIL_SEND_YN is '이메일 발송 여부'
/

comment on column TB_GOODS_BBS_LETT.REG_NM is '등록 명'
/

comment on column TB_GOODS_BBS_LETT.REG_DTTM is '등록 일시'
/

comment on column TB_GOODS_BBS_LETT.REGR_NO is '등록자 번호'
/

comment on column TB_GOODS_BBS_LETT.UPD_DTTM is '수정 일시'
/

comment on column TB_GOODS_BBS_LETT.UPDR_NO is '수정자 번호'
/

comment on column TB_GOODS_BBS_LETT.DEL_YN is '삭제 여부'
/

comment on column TB_GOODS_BBS_LETT.DELR_NO is '삭제자 번호'
/

comment on column TB_GOODS_BBS_LETT.DEL_DTTM is '삭제 일시'
/

comment on column TB_GOODS_BBS_LETT.MEMBER_NO is '회원 번호'
/

comment on column TB_GOODS_BBS_LETT.BBS_GRADE is '게시판등급(G:일반, P:프리미엄)'
/

comment on column TB_GOODS_BBS_LETT.SVMN_PAY_YN is '적립금지급여부'
/

comment on column TB_GOODS_BBS_LETT.SVMN_PAY_AMT is '적립금지급금'
/

create table TB_MAIL_AUTO_SEND_MANAGE
(
    MAIL_TYPE_CD     VARCHAR2(10) not null,
    SITE_NO          NUMBER(19)   not null
        constraint FK_MAIL_AUTO_SEND_1
            references TS_SITE,
    AUTO_SEND_YN     VARCHAR2(1),
    SEND_EMAIL       VARCHAR2(100),
    MAIL_TITLE       VARCHAR2(300),
    MAIL_CONTENT     CLOB,
    MEMBER_SEND_YN   VARCHAR2(1),
    MANAGER_SEND_YN  VARCHAR2(1),
    OPERATOR_SEND_YN VARCHAR2(1),
    SEND_FRM_CD      VARCHAR2(10),
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE,
    constraint IDX_TB_MAIL_AUTO_SEND_MANAGE_P
        primary key (MAIL_TYPE_CD, SITE_NO)
)
/

comment on table TB_MAIL_AUTO_SEND_MANAGE is '메일 자동 발송 관리'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.MAIL_TYPE_CD is '메일 유형 코드'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.SITE_NO is '사이트 번호'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.AUTO_SEND_YN is '자동 발송 여부'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.SEND_EMAIL is '발송 이메일'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.MAIL_TITLE is '메일 제목'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.MAIL_CONTENT is '메일 내용'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.MEMBER_SEND_YN is '회원 발송 여부'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.MANAGER_SEND_YN is '관리자 발송 여부'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.OPERATOR_SEND_YN is '운영자 발송 여부'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.SEND_FRM_CD is '발송 형태 코드'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.REGR_NO is '등록자 번호'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.REG_DTTM is '등록 일시'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.UPDR_NO is '수정자 번호'
/

comment on column TB_MAIL_AUTO_SEND_MANAGE.UPD_DTTM is '수정 일시'
/

create global temporary table QUEST_SL_TEMP_EXPLAIN1
(
    STATEMENT_ID      VARCHAR2(30),
    PLAN_ID           NUMBER,
    TIMESTAMP         DATE,
    REMARKS           VARCHAR2(4000),
    OPERATION         VARCHAR2(30),
    OPTIONS           VARCHAR2(255),
    OBJECT_NODE       VARCHAR2(128),
    OBJECT_OWNER      VARCHAR2(30),
    OBJECT_NAME       VARCHAR2(30),
    OBJECT_ALIAS      VARCHAR2(65),
    OBJECT_INSTANCE   NUMBER,
    OBJECT_TYPE       VARCHAR2(30),
    OPTIMIZER         VARCHAR2(255),
    SEARCH_COLUMNS    NUMBER,
    ID                NUMBER,
    PARENT_ID         NUMBER,
    DEPTH             NUMBER,
    POSITION          NUMBER,
    COST              NUMBER,
    CARDINALITY       NUMBER,
    BYTES             NUMBER,
    OTHER_TAG         VARCHAR2(255),
    PARTITION_START   VARCHAR2(255),
    PARTITION_STOP    VARCHAR2(255),
    PARTITION_ID      NUMBER,
    OTHER             LONG,
    DISTRIBUTION      VARCHAR2(30),
    CPU_COST          NUMBER,
    IO_COST           NUMBER,
    TEMP_SPACE        NUMBER,
    ACCESS_PREDICATES VARCHAR2(4000),
    FILTER_PREDICATES VARCHAR2(4000),
    PROJECTION        VARCHAR2(4000),
    TIME              NUMBER,
    QBLOCK_NAME       VARCHAR2(30),
    OTHER_XML         CLOB
)
    on commit preserve rows
/

create table PLAN_TABLE
(
    STATEMENT_ID      VARCHAR2(30),
    PLAN_ID           NUMBER,
    TIMESTAMP         DATE,
    REMARKS           VARCHAR2(4000),
    OPERATION         VARCHAR2(30),
    OPTIONS           VARCHAR2(255),
    OBJECT_NODE       VARCHAR2(128),
    OBJECT_OWNER      VARCHAR2(30),
    OBJECT_NAME       VARCHAR2(30),
    OBJECT_ALIAS      VARCHAR2(65),
    OBJECT_INSTANCE   NUMBER,
    OBJECT_TYPE       VARCHAR2(30),
    OPTIMIZER         VARCHAR2(255),
    SEARCH_COLUMNS    NUMBER,
    ID                NUMBER,
    PARENT_ID         NUMBER,
    DEPTH             NUMBER,
    POSITION          NUMBER,
    COST              NUMBER,
    CARDINALITY       NUMBER,
    BYTES             NUMBER,
    OTHER_TAG         VARCHAR2(255),
    PARTITION_START   VARCHAR2(255),
    PARTITION_STOP    VARCHAR2(255),
    PARTITION_ID      NUMBER,
    OTHER             LONG,
    DISTRIBUTION      VARCHAR2(30),
    CPU_COST          NUMBER,
    IO_COST           NUMBER,
    TEMP_SPACE        NUMBER,
    ACCESS_PREDICATES VARCHAR2(4000),
    FILTER_PREDICATES VARCHAR2(4000),
    PROJECTION        VARCHAR2(4000),
    TIME              NUMBER,
    QBLOCK_NAME       VARCHAR2(30),
    OTHER_XML         CLOB
)
/

create table TC_HEARINGAID_CHECK
(
    HEARINGAID_SEQ  NUMBER not null,
    MEMBER_NO       NUMBER not null,
    GOODS_NO        VARCHAR2(16),
    GOODS_NM        VARCHAR2(100),
    CTG_NOS         VARCHAR2(50),
    RESULT_ALL      CLOB,
    REG_DTTM        DATE,
    RELATE_ACTIVITY VARCHAR2(500),
    constraint TC_HEARINGAID_CHECK_PK
        primary key (HEARINGAID_SEQ, MEMBER_NO)
)
/

comment on table TC_HEARINGAID_CHECK is '추천보청기'
/

comment on column TC_HEARINGAID_CHECK.HEARINGAID_SEQ is '순번'
/

comment on column TC_HEARINGAID_CHECK.MEMBER_NO is '회원 번호'
/

comment on column TC_HEARINGAID_CHECK.GOODS_NO is '상품코드'
/

comment on column TC_HEARINGAID_CHECK.GOODS_NM is '상품명'
/

comment on column TC_HEARINGAID_CHECK.CTG_NOS is '카테고리'
/

comment on column TC_HEARINGAID_CHECK.RESULT_ALL is '전체 결과'
/

comment on column TC_HEARINGAID_CHECK.REG_DTTM is '등록 일시'
/

comment on column TC_HEARINGAID_CHECK.RELATE_ACTIVITY is '결과'
/

create table TB_MAIL_SEND_HIST
(
    MAIL_SEND_NO   NUMBER not null
        constraint IDX_TB_MAIL_SEND_HIST_PK
            primary key,
    ORD_NO         NUMBER(16),
    SEND_TARGET_CD VARCHAR2(2),
    MAIL_TYPE_CD   VARCHAR2(10),
    RESULT_CD      VARCHAR2(10),
    SEND_EMAIL     VARCHAR2(50),
    SEND_TITLE     VARCHAR2(500),
    SEND_CONTENT   CLOB,
    SENDER_NO      NUMBER,
    SENDER_NM      VARCHAR2(100),
    SENDER_ID      VARCHAR2(50) default NULL,
    SEND_DTTM      DATE,
    SEND_STNDRD    VARCHAR2(100),
    RECEIVER_EMAIL VARCHAR2(50),
    RECEIVER_ID    VARCHAR2(50) default NULL,
    RECEIVER_NO    NUMBER,
    RECEIVER_NM    VARCHAR2(100),
    SITE_NO        NUMBER(19),
    AUTO_SEND_YN   VARCHAR2(1),
    REG_DTTM       DATE,
    REGR_NO        NUMBER,
    UPD_DTTM       DATE,
    UPDR_NO        NUMBER,
    DEL_DTTM       DATE,
    DELR_NO        NUMBER,
    DEL_YN         CHAR         default 'N',
    constraint FK_MAIL_SEND_HIST_1
        foreign key (MAIL_TYPE_CD, SITE_NO) references TB_MAIL_AUTO_SEND_MANAGE
            on delete set null
)
/

comment on table TB_MAIL_SEND_HIST is '메일 발송 이력'
/

comment on column TB_MAIL_SEND_HIST.MAIL_SEND_NO is '메일 발송 번호'
/

comment on column TB_MAIL_SEND_HIST.ORD_NO is '주문 번호'
/

comment on column TB_MAIL_SEND_HIST.SEND_TARGET_CD is '발송 대상 코드'
/

comment on column TB_MAIL_SEND_HIST.MAIL_TYPE_CD is '메일 유형 코드'
/

comment on column TB_MAIL_SEND_HIST.RESULT_CD is '결과 코드'
/

comment on column TB_MAIL_SEND_HIST.SEND_EMAIL is '발송 이메일'
/

comment on column TB_MAIL_SEND_HIST.SEND_TITLE is '발송 제목'
/

comment on column TB_MAIL_SEND_HIST.SEND_CONTENT is '발송 내용'
/

comment on column TB_MAIL_SEND_HIST.SENDER_NO is '발신자 번호'
/

comment on column TB_MAIL_SEND_HIST.SENDER_NM is '발신자 명'
/

comment on column TB_MAIL_SEND_HIST.SENDER_ID is '발신자 아이디'
/

comment on column TB_MAIL_SEND_HIST.SEND_DTTM is '발송 일시'
/

comment on column TB_MAIL_SEND_HIST.SEND_STNDRD is '발송 기준'
/

comment on column TB_MAIL_SEND_HIST.RECEIVER_EMAIL is '수신자 이메일'
/

comment on column TB_MAIL_SEND_HIST.RECEIVER_ID is '수신자 아이디'
/

comment on column TB_MAIL_SEND_HIST.RECEIVER_NO is '수신자 번호'
/

comment on column TB_MAIL_SEND_HIST.RECEIVER_NM is '수신자 명'
/

comment on column TB_MAIL_SEND_HIST.SITE_NO is '사이트 번호'
/

comment on column TB_MAIL_SEND_HIST.AUTO_SEND_YN is '자동 발송 여부'
/

comment on column TB_MAIL_SEND_HIST.REG_DTTM is '등록 일시'
/

comment on column TB_MAIL_SEND_HIST.REGR_NO is '등록자 번호'
/

comment on column TB_MAIL_SEND_HIST.UPD_DTTM is '수정 일시'
/

comment on column TB_MAIL_SEND_HIST.UPDR_NO is '수정자 번호'
/

comment on column TB_MAIL_SEND_HIST.DEL_DTTM is '삭제 일시'
/

comment on column TB_MAIL_SEND_HIST.DELR_NO is '삭제자 번호'
/

comment on column TB_MAIL_SEND_HIST.DEL_YN is '삭제 여부'
/

create table TD_POPUP
(
    POPUP_NO            NUMBER(16) not null,
    SITE_NO             NUMBER(19) not null
        constraint FK_POPUP_1
            references TS_SITE,
    FILE_NO             NUMBER(16),
    PC_GB_CD            VARCHAR2(1),
    POPUP_NM            VARCHAR2(100),
    CONTENT             CLOB,
    WIDTH_SIZE          NUMBER,
    HEIGHT_SIZE         NUMBER,
    PST_TOP             NUMBER,
    PST_LEFT            NUMBER,
    SORT_SEQ            NUMBER,
    DISP_START_DTTM     VARCHAR2(14),
    DISP_END_DTTM       VARCHAR2(14),
    POPUP_GRP_CD        VARCHAR2(3),
    POPUP_GB_CD         VARCHAR2(1),
    COOKIE_VALID_PERIOD NUMBER,
    DISP_YN             VARCHAR2(1),
    REG_DTTM            DATE,
    REGR_NO             NUMBER,
    UPD_DTTM            DATE,
    UPDR_NO             NUMBER,
    constraint IDX_TD_POPUP_PK
        primary key (POPUP_NO, SITE_NO)
)
/

comment on table TD_POPUP is '팝업'
/

comment on column TD_POPUP.POPUP_NO is '팝업 번호'
/

comment on column TD_POPUP.SITE_NO is '사이트 번호'
/

comment on column TD_POPUP.FILE_NO is '파일 번호'
/

comment on column TD_POPUP.PC_GB_CD is 'PC 구분 코드'
/

comment on column TD_POPUP.POPUP_NM is '팝업 명'
/

comment on column TD_POPUP.CONTENT is '내용'
/

comment on column TD_POPUP.WIDTH_SIZE is '가로 크기'
/

comment on column TD_POPUP.HEIGHT_SIZE is '세로 크기'
/

comment on column TD_POPUP.PST_TOP is '위치 TOP'
/

comment on column TD_POPUP.PST_LEFT is '위치 LEFT'
/

comment on column TD_POPUP.SORT_SEQ is '정렬 순서'
/

comment on column TD_POPUP.DISP_START_DTTM is '전시 시작 일시'
/

comment on column TD_POPUP.DISP_END_DTTM is '전시 종료 일시'
/

comment on column TD_POPUP.POPUP_GRP_CD is '팝업 그룹 코드'
/

comment on column TD_POPUP.POPUP_GB_CD is '팝업 구분 코드'
/

comment on column TD_POPUP.COOKIE_VALID_PERIOD is '쿠키 유효 기간'
/

comment on column TD_POPUP.DISP_YN is '전시 여부'
/

comment on column TD_POPUP.REG_DTTM is '등록 일시'
/

comment on column TD_POPUP.REGR_NO is '등록자 번호'
/

comment on column TD_POPUP.UPD_DTTM is '수정 일시'
/

comment on column TD_POPUP.UPDR_NO is '수정자 번호'
/

create table TG_CTG
(
    CTG_NO                   NUMBER(19)   not null,
    SITE_NO                  NUMBER(19)   not null
        constraint FK_CTG_1
            references TS_SITE,
    UP_CTG_NO                NUMBER(19),
    CTG_CMS_RATE             NUMBER      default 0,
    CTG_LVL                  VARCHAR2(1)  not null,
    CTG_NM                   VARCHAR2(30) not null,
    CTG_IDENFICATIONCD       VARCHAR2(300),
    CTG_EXHBTION_TYPE_CD     VARCHAR2(1)  not null,
    CTG_DISP_TYPE_CD         VARCHAR2(2)  not null,
    MOBILE_SPMALL_APPLY_YN   VARCHAR2(1)  not null,
    CTG_IMG_PATH             VARCHAR2(300),
    CTG_IMG_NM               VARCHAR2(300),
    MOUSEOVER_IMG_PATH       VARCHAR2(300),
    MOUSEOVER_IMG_NM         VARCHAR2(300),
    CTG_MAIN_USE_YN          VARCHAR2(1)  not null,
    CTG_MAIN_CONTENT         CLOB,
    TOTAL_CONNECT_AUTH_YN    VARCHAR2(1),
    MEMBER_CONNECT_AUTH_YN   VARCHAR2(1),
    TOTAL_GOODS_EXPS_YN      VARCHAR2(1),
    DISP_GOODS_EXPS_YN       VARCHAR2(1),
    NO_DISP_GOODS_EXPS_YN    VARCHAR2(1),
    SALEMEDIUM_GOODS_EXPS_YN VARCHAR2(1),
    SALESTNBY_GOODS_EXPS_YN  VARCHAR2(1),
    SOLDOUT_GOODS_EXPS_YN    VARCHAR2(1),
    EXPS_GOODS_SORT_CD       VARCHAR2(2),
    NAVIG_EXPS_YN            VARCHAR2(1),
    DEL_YN                   VARCHAR2(1),
    REGR_NO                  NUMBER,
    REG_DTTM                 DATE,
    UPDR_NO                  NUMBER,
    UPD_DTTM                 DATE,
    DELR_NO                  NUMBER,
    DEL_DTTM                 DATE,
    FILTER_APPLY_YN          VARCHAR2(1),
    FILTER_TYPE_CD           VARCHAR2(2),
    BEST_BRAND_USE_YN        VARCHAR2(1),
    BEST_BRAND_NO            VARCHAR2(300),
    SORT_SEQ                 NUMBER,
    USE_YN                   VARCHAR2(1),
    MAIN_EXPS_YN             VARCHAR2(1),
    MAIN_EXPS_SEQ            NUMBER      default NULL,
    RECOM_PVD_RATE           NUMBER(20, 2),
    CTG_SVMN_AMT             NUMBER(20, 2),
    CTG_SVMN_GB_CD           VARCHAR2(1),
    CTG_SVMN_MAX_USE_RATE    NUMBER(10, 2),
    GOODS_CONTS_GB_CD        VARCHAR2(2) default '01',
    constraint IDX_TG_CTG_PK
        primary key (CTG_NO, SITE_NO)
)
/

comment on table TG_CTG is '카테고리'
/

comment on column TG_CTG.CTG_NO is '카테고리 번호'
/

comment on column TG_CTG.SITE_NO is '사이트 번호'
/

comment on column TG_CTG.UP_CTG_NO is '상위 카테고리 번호'
/

comment on column TG_CTG.CTG_CMS_RATE is '카테고리 수수료 율'
/

comment on column TG_CTG.CTG_LVL is '카테고리 레벨'
/

comment on column TG_CTG.CTG_NM is '카테고리 명'
/

comment on column TG_CTG.CTG_IDENFICATIONCD is '카테고리 식별코드'
/

comment on column TG_CTG.CTG_EXHBTION_TYPE_CD is '카테고리 진열 유형 코드'
/

comment on column TG_CTG.CTG_DISP_TYPE_CD is '카테고리 전시 유형 코드'
/

comment on column TG_CTG.MOBILE_SPMALL_APPLY_YN is '모바일 쇼핑몰 적용 여부'
/

comment on column TG_CTG.CTG_IMG_PATH is '카테고리 이미지 경로'
/

comment on column TG_CTG.CTG_IMG_NM is '카테고리 이미지 명'
/

comment on column TG_CTG.MOUSEOVER_IMG_PATH is '마우스오버 이미지 경로'
/

comment on column TG_CTG.MOUSEOVER_IMG_NM is '마우스오버 이미지 명'
/

comment on column TG_CTG.CTG_MAIN_USE_YN is '카테고리 메인 사용 여부'
/

comment on column TG_CTG.CTG_MAIN_CONTENT is '카테고리 메인 내용'
/

comment on column TG_CTG.TOTAL_CONNECT_AUTH_YN is '전체 접속 권한 여부'
/

comment on column TG_CTG.MEMBER_CONNECT_AUTH_YN is '회원 접속 권한 여부'
/

comment on column TG_CTG.TOTAL_GOODS_EXPS_YN is '전체 상품 노출 여부'
/

comment on column TG_CTG.DISP_GOODS_EXPS_YN is '전시 상품 노출 여부'
/

comment on column TG_CTG.NO_DISP_GOODS_EXPS_YN is '미 전시 상품 노출 여부'
/

comment on column TG_CTG.SALEMEDIUM_GOODS_EXPS_YN is '판매중 상품 노출 여부'
/

comment on column TG_CTG.SALESTNBY_GOODS_EXPS_YN is '판매대기 상품 노출 여부'
/

comment on column TG_CTG.SOLDOUT_GOODS_EXPS_YN is '품절 상품 노출 여부'
/

comment on column TG_CTG.EXPS_GOODS_SORT_CD is '노출 상품 정렬 코드'
/

comment on column TG_CTG.NAVIG_EXPS_YN is '내비게이션 노출 여부'
/

comment on column TG_CTG.DEL_YN is '삭제 여부'
/

comment on column TG_CTG.REGR_NO is '등록자 번호'
/

comment on column TG_CTG.REG_DTTM is '등록 일시'
/

comment on column TG_CTG.UPDR_NO is '수정자 번호'
/

comment on column TG_CTG.UPD_DTTM is '수정 일시'
/

comment on column TG_CTG.DELR_NO is '삭제자 번호'
/

comment on column TG_CTG.DEL_DTTM is '삭제 일시'
/

comment on column TG_CTG.FILTER_APPLY_YN is '필터 적용 여부'
/

comment on column TG_CTG.FILTER_TYPE_CD is '필터 유형 코드'
/

comment on column TG_CTG.BEST_BRAND_USE_YN is '베스트 브랜드 사용 여부'
/

comment on column TG_CTG.BEST_BRAND_NO is '베스트 브랜드 번호'
/

comment on column TG_CTG.SORT_SEQ is '정렬 순서'
/

comment on column TG_CTG.USE_YN is '사용 여부'
/

comment on column TG_CTG.MAIN_EXPS_YN is '메인 노출 여부'
/

comment on column TG_CTG.MAIN_EXPS_SEQ is '메인 노출 순서'
/

comment on column TG_CTG.RECOM_PVD_RATE is '추천 적립율'
/

comment on column TG_CTG.CTG_SVMN_AMT is '카테고리 적립금 금액'
/

comment on column TG_CTG.CTG_SVMN_GB_CD is '카테고리 적립금 구분 코드'
/

comment on column TG_CTG.CTG_SVMN_MAX_USE_RATE is '카테고리 적립금 최대 사용 율'
/

comment on column TG_CTG.GOODS_CONTS_GB_CD is '상품 컨텐츠 구분 코드'
/

create table TG_GOODS
(
    GOODS_NO                       VARCHAR2(16)  not null,
    SELLER_NO                      NUMBER(19),
    COMPANY_NO                     NUMBER(19),
    SITE_NO                        NUMBER(19)    not null,
    NOTIFY_NO                      NUMBER(19)  default NULL
        constraint FK_GOODS_3
            references TG_NOTIFY_INFO,
    GOODS_NM                       VARCHAR2(100) not null,
    MODEL_NM                       VARCHAR2(100),
    ITEM_NO                        VARCHAR2(18),
    BRAND_NO                       NUMBER(19),
    GOODS_SALE_STATUS_CD           VARCHAR2(1),
    DISP_YN                        VARCHAR2(1),
    RETURN_PSB_YN                  VARCHAR2(1),
    SALE_YN                        VARCHAR2(1),
    SALE_START_DT                  VARCHAR2(8),
    SALE_END_DT                    VARCHAR2(8),
    GOODS_ADD_INFO_USE_YN          VARCHAR2(1),
    MOBILE_DISP_YN                 VARCHAR2(1),
    REINWARE_APPLY_YN              VARCHAR2(1),
    ADULT_CERTIFY_YN               VARCHAR2(1),
    MAX_ORD_LIMIT_YN               VARCHAR2(1),
    MAX_ORD_QTT                    NUMBER,
    MIN_ORD_LIMIT_YN               VARCHAR2(1),
    MIN_ORD_QTT                    NUMBER,
    PR_WORDS                       VARCHAR2(300),
    ADD_OPT_USE_YN                 VARCHAR2(1),
    MULTI_OPT_YN                   VARCHAR2(1),
    HABITAT                        VARCHAR2(30),
    MMFT                           VARCHAR2(100),
    IMPORTER                       VARCHAR2(30),
    TAX_GB_CD                      VARCHAR2(1),
    HSCODE                         VARCHAR2(20),
    SEO_SEARCH_WORD                VARCHAR2(4000),
    WEIGHT                         NUMBER(10, 4),
    DLVR_SET_CD                    VARCHAR2(1),
    DLVR_EXPECT_DAYS               NUMBER,
    GOODSEACH_DLVRC                NUMBER(20, 2),
    PACK_MAX_UNIT                  NUMBER,
    PACK_UNIT_DLVRC                NUMBER(20, 2),
    COURI_DLVR_APPLY_YN            VARCHAR2(1),
    DIRECT_RECPT_APPLY_YN          VARCHAR2(1),
    DLVR_PAYMENT_KIND_CD           VARCHAR2(2),
    TX_LIMIT_CNDT                  VARCHAR2(300),
    RELATE_GOODS_APPLY_TYPE_CD     VARCHAR2(1),
    RELATE_GOODS_APPLY_CTG         NUMBER(19),
    RELATE_GOODS_SALE_PRICE_START  NUMBER(20, 2),
    RELATE_GOODS_SALE_PRICE_END    NUMBER(20, 2),
    RELATE_GOODS_SALE_STATUS_CD    VARCHAR2(1),
    RELATE_GOODS_DISP_STATUS_CD    VARCHAR2(1),
    RELATE_GOODS_AUTO_EXPS_SORT_CD VARCHAR2(2),
    GOODS_SVMN_POLICY_USE_YN       VARCHAR2(1),
    GOODS_SVMN_AMT                 NUMBER(20, 2),
    VIDEO_PATH                     VARCHAR2(300),
    VIDEO_SOURCE_PATH              VARCHAR2(300),
    DISP_IMG_PATH_TYPE_A           VARCHAR2(50),
    DISP_IMG_NM_TYPE_A             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_B           VARCHAR2(50),
    DISP_IMG_NM_TYPE_B             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_C           VARCHAR2(50),
    DISP_IMG_NM_TYPE_C             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_D           VARCHAR2(50),
    DISP_IMG_NM_TYPE_D             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_E           VARCHAR2(50),
    DISP_IMG_NM_TYPE_E             VARCHAR2(300),
    ACCM_SALE_AMT                  NUMBER(20, 2),
    ACCM_SALE_CNT                  NUMBER,
    ACCM_GOODSLETT_CNT             NUMBER,
    BASKET_SET_CNT                 NUMBER,
    FAVGOODS_SET_CNT               NUMBER,
    GOODS_INQ_CNT                  NUMBER      default 0,
    GOODS_SCORE                    NUMBER,
    FREE_DLVR_MIN_AMT              NUMBER,
    GOODSEACH_CNDTADD_DLVRC        NUMBER,
    DEL_YN                         VARCHAR2(1),
    DELR_NO                        NUMBER,
    DEL_DTTM                       DATE,
    REGR_NO                        NUMBER,
    REG_DTTM                       DATE,
    UPDR_NO                        NUMBER,
    UPD_DTTM                       DATE,
    GOODS_TYPE_CD                  CHAR(2),
    DISP_IMG_PATH_TYPE_F           VARCHAR2(50),
    DISP_IMG_NM_TYPE_F             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_G           VARCHAR2(50),
    DISP_IMG_NM_TYPE_G             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_S           VARCHAR2(50),
    DISP_IMG_NM_TYPE_S             VARCHAR2(300),
    RSV_ONLY_YN                    VARCHAR2(1) default 'N',
    VIRT_OUTING_YN                 VARCHAR2(1),
    RECOM_PVD_RATE                 NUMBER(20, 2),
    RECOM_PVD_POLICY_CD            VARCHAR2(2),
    GOODS_SVMN_POLICY_CD           VARCHAR2(2),
    GOODS_SVMN_GB_CD               VARCHAR2(1),
    GOODS_SVMN_MAX_USE_POLICY_CD   VARCHAR2(2),
    GOODS_SVMN_MAX_USE_RATE        NUMBER(10, 2),
    DISP_IMG_FILE_SIZE_TYPE_A      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_B      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_C      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_D      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_E      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_F      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_G      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_S      NUMBER,
    DISP_IMG_PATH_TYPE_M           VARCHAR2(50),
    DISP_IMG_NM_TYPE_M             VARCHAR2(300),
    DISP_IMG_FILE_SIZE_TYPE_M      NUMBER,
    GOODS_CONTS_GB_CD              VARCHAR2(2) default '01',
    NAVER_LINK_YN                  VARCHAR2(1),
    SMR_GOODS_NM                   VARCHAR2(100),
    DISP_IMG_NM_TYPE_O             VARCHAR2(300),
    DISP_IMG_FILE_SIZE_TYPE_O      NUMBER,
    DISP_IMG_PATH_TYPE_O           VARCHAR2(50),
    PRE_GOODS_YN                   VARCHAR2(1),
    SBN_LINK_YN                    VARCHAR2(1),
    DISP_IMG_PATH_TYPE_P           VARCHAR2(50),
    DISP_IMG_NM_TYPE_P             VARCHAR2(300),
    DISP_IMG_FILE_SIZE_TYPE_P      NUMBER,
    INWARE_SCD_SCH                 VARCHAR2(4000),
    RSV_BUY_YN                     VARCHAR2(1),
    constraint FK_GOODS_6
        foreign key (RELATE_GOODS_APPLY_CTG, SITE_NO) references TG_CTG
            on delete set null
)
/

comment on table TG_GOODS is '상품'
/

comment on column TG_GOODS.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS.SELLER_NO is '판매자 번호'
/

comment on column TG_GOODS.COMPANY_NO is '업체 번호'
/

comment on column TG_GOODS.SITE_NO is '사이트 번호'
/

comment on column TG_GOODS.NOTIFY_NO is '고시 번호'
/

comment on column TG_GOODS.GOODS_NM is '상품 명'
/

comment on column TG_GOODS.MODEL_NM is '모델 명'
/

comment on column TG_GOODS.ITEM_NO is '단품 번호'
/

comment on column TG_GOODS.BRAND_NO is '브랜드 번호'
/

comment on column TG_GOODS.GOODS_SALE_STATUS_CD is '상품 판매 상태 코드'
/

comment on column TG_GOODS.DISP_YN is '전시 여부'
/

comment on column TG_GOODS.RETURN_PSB_YN is '반품 가능 여부'
/

comment on column TG_GOODS.SALE_YN is '판매 여부'
/

comment on column TG_GOODS.SALE_START_DT is '판매 시작 일자'
/

comment on column TG_GOODS.SALE_END_DT is '판매 종료 일자'
/

comment on column TG_GOODS.GOODS_ADD_INFO_USE_YN is '상품 추가 정보 사용 여부'
/

comment on column TG_GOODS.MOBILE_DISP_YN is '모바일 전시 여부'
/

comment on column TG_GOODS.REINWARE_APPLY_YN is '재입고 적용 여부'
/

comment on column TG_GOODS.ADULT_CERTIFY_YN is '성인 인증 여부'
/

comment on column TG_GOODS.MAX_ORD_LIMIT_YN is '최대 주문 제한 여부'
/

comment on column TG_GOODS.MAX_ORD_QTT is '최대 주문 수량'
/

comment on column TG_GOODS.MIN_ORD_LIMIT_YN is '최소 주문 제한 여부'
/

comment on column TG_GOODS.MIN_ORD_QTT is '최소 주문 수량'
/

comment on column TG_GOODS.PR_WORDS is '홍보 문구'
/

comment on column TG_GOODS.ADD_OPT_USE_YN is '추가 옵션 사용 여부'
/

comment on column TG_GOODS.MULTI_OPT_YN is '다중 옵션 여부'
/

comment on column TG_GOODS.HABITAT is '원산지'
/

comment on column TG_GOODS.MMFT is '제조사'
/

comment on column TG_GOODS.IMPORTER is '수입사'
/

comment on column TG_GOODS.TAX_GB_CD is '과세 구분 코드'
/

comment on column TG_GOODS.HSCODE is 'HSCODE'
/

comment on column TG_GOODS.SEO_SEARCH_WORD is 'SEO 검색 단어'
/

comment on column TG_GOODS.WEIGHT is '무게'
/

comment on column TG_GOODS.DLVR_SET_CD is '배송 설정 코드'
/

comment on column TG_GOODS.DLVR_EXPECT_DAYS is '배송 예상 소요일'
/

comment on column TG_GOODS.GOODSEACH_DLVRC is '상품별 배송비'
/

comment on column TG_GOODS.PACK_MAX_UNIT is '포장 최대 단위'
/

comment on column TG_GOODS.PACK_UNIT_DLVRC is '포장 단위 배송비'
/

comment on column TG_GOODS.COURI_DLVR_APPLY_YN is '택배 배송 적용 여부'
/

comment on column TG_GOODS.DIRECT_RECPT_APPLY_YN is '직접 수령 적용 여부'
/

comment on column TG_GOODS.DLVR_PAYMENT_KIND_CD is '배송 결제 방식 코드'
/

comment on column TG_GOODS.TX_LIMIT_CNDT is '거래 제한 조건'
/

comment on column TG_GOODS.RELATE_GOODS_APPLY_TYPE_CD is '관련 상품 적용 유형 코드'
/

comment on column TG_GOODS.RELATE_GOODS_APPLY_CTG is '관련 상품 적용 카테고리'
/

comment on column TG_GOODS.RELATE_GOODS_SALE_PRICE_START is '관련 상품 판매 가격 시작'
/

comment on column TG_GOODS.RELATE_GOODS_SALE_PRICE_END is '관련 상품 판매 가격 종료'
/

comment on column TG_GOODS.RELATE_GOODS_SALE_STATUS_CD is '관련 상품 판매 상태 코드'
/

comment on column TG_GOODS.RELATE_GOODS_DISP_STATUS_CD is '관련 상품 전시 상태 코드'
/

comment on column TG_GOODS.RELATE_GOODS_AUTO_EXPS_SORT_CD is '관련 상품 자동 노출 정렬 코드'
/

comment on column TG_GOODS.GOODS_SVMN_POLICY_USE_YN is '상품 적립금 정책 사용 여부'
/

comment on column TG_GOODS.GOODS_SVMN_AMT is '상품 적립금 금액'
/

comment on column TG_GOODS.VIDEO_PATH is '동영상 경로'
/

comment on column TG_GOODS.VIDEO_SOURCE_PATH is '동영상 소스 경로'
/

comment on column TG_GOODS.DISP_IMG_PATH_TYPE_A is '전시 이미지 경로 TYPE A'
/

comment on column TG_GOODS.DISP_IMG_NM_TYPE_A is '전시 이미지 명 TYPE A'
/

comment on column TG_GOODS.DISP_IMG_PATH_TYPE_B is '전시 이미지 경로 TYPE B'
/

comment on column TG_GOODS.DISP_IMG_NM_TYPE_B is '전시 이미지 명 TYPE B'
/

comment on column TG_GOODS.DISP_IMG_PATH_TYPE_C is '전시 이미지 경로 TYPE C'
/

comment on column TG_GOODS.DISP_IMG_NM_TYPE_C is '전시 이미지 명 TYPE C'
/

comment on column TG_GOODS.DISP_IMG_PATH_TYPE_D is '전시 이미지 경로 TYPE D'
/

comment on column TG_GOODS.DISP_IMG_NM_TYPE_D is '전시 이미지 명 TYPE D'
/

comment on column TG_GOODS.DISP_IMG_PATH_TYPE_E is '전시 이미지 경로 TYPE E'
/

comment on column TG_GOODS.DISP_IMG_NM_TYPE_E is '전시 이미지 명 TYPE E'
/

comment on column TG_GOODS.ACCM_SALE_AMT is '누적 판매 금액'
/

comment on column TG_GOODS.ACCM_SALE_CNT is '누적 판매 수'
/

comment on column TG_GOODS.ACCM_GOODSLETT_CNT is '누적 상품글 수'
/

comment on column TG_GOODS.BASKET_SET_CNT is '장바구니 설정 수'
/

comment on column TG_GOODS.FAVGOODS_SET_CNT is '관심상품 설정 수'
/

comment on column TG_GOODS.GOODS_INQ_CNT is '상품 조회수'
/

comment on column TG_GOODS.GOODS_SCORE is '상품 점수'
/

comment on column TG_GOODS.FREE_DLVR_MIN_AMT is '무료 배송 최소 금액'
/

comment on column TG_GOODS.GOODSEACH_CNDTADD_DLVRC is '상품별 조건부 배송비'
/

comment on column TG_GOODS.DEL_YN is '삭제 여부'
/

comment on column TG_GOODS.DELR_NO is '삭제자 번호'
/

comment on column TG_GOODS.DEL_DTTM is '삭제 일시'
/

comment on column TG_GOODS.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS.UPD_DTTM is '수정 일시'
/

comment on column TG_GOODS.GOODS_TYPE_CD is '상품 유형 코드'
/

comment on column TG_GOODS.DISP_IMG_PATH_TYPE_F is '전시 이미지 경로 TYPE F'
/

comment on column TG_GOODS.DISP_IMG_NM_TYPE_F is '전시 이미지 명 TYPE F'
/

comment on column TG_GOODS.DISP_IMG_PATH_TYPE_G is '전시 이미지 경로 TYPE G'
/

comment on column TG_GOODS.DISP_IMG_NM_TYPE_G is '전시 이미지 명 TYPE G'
/

comment on column TG_GOODS.DISP_IMG_PATH_TYPE_S is '전시 이미지 경로 TYPE S'
/

comment on column TG_GOODS.DISP_IMG_NM_TYPE_S is '전시 이미지 명 TYPE S'
/

comment on column TG_GOODS.RSV_ONLY_YN is '예약 전용 여부'
/

comment on column TG_GOODS.VIRT_OUTING_YN is '가상 착장 여부'
/

comment on column TG_GOODS.RECOM_PVD_RATE is '추천 적립율'
/

comment on column TG_GOODS.RECOM_PVD_POLICY_CD is '추천 적립 정책 코드'
/

comment on column TG_GOODS.GOODS_SVMN_POLICY_CD is '상품 적립금 정책 코드'
/

comment on column TG_GOODS.GOODS_SVMN_GB_CD is '상품 적립금 구분 코드'
/

comment on column TG_GOODS.GOODS_SVMN_MAX_USE_POLICY_CD is '상품 적립금 최대 사용 정책 코드'
/

comment on column TG_GOODS.GOODS_SVMN_MAX_USE_RATE is '상품 적립금 최대 사용 율'
/

comment on column TG_GOODS.DISP_IMG_FILE_SIZE_TYPE_A is '전시 이미지 파일 사이즈 TYPE A'
/

comment on column TG_GOODS.DISP_IMG_FILE_SIZE_TYPE_B is '전시 이미지 파일 사이즈 TYPE B'
/

comment on column TG_GOODS.DISP_IMG_FILE_SIZE_TYPE_C is '전시 이미지 파일 사이즈 TYPE C'
/

comment on column TG_GOODS.DISP_IMG_FILE_SIZE_TYPE_D is '전시 이미지 파일 사이즈 TYPE D'
/

comment on column TG_GOODS.DISP_IMG_FILE_SIZE_TYPE_E is '전시 이미지 파일 사이즈 TYPE E'
/

comment on column TG_GOODS.DISP_IMG_FILE_SIZE_TYPE_F is '전시 이미지 파일 사이즈 TYPE F'
/

comment on column TG_GOODS.DISP_IMG_FILE_SIZE_TYPE_G is '전시 이미지 파일 사이즈 TYPE G'
/

comment on column TG_GOODS.DISP_IMG_FILE_SIZE_TYPE_S is '전시 이미지 파일 사이즈 TYPE S'
/

comment on column TG_GOODS.DISP_IMG_PATH_TYPE_M is '전시 이미지 경로 TYPE M'
/

comment on column TG_GOODS.DISP_IMG_NM_TYPE_M is '전시 이미지 명 TYPE M'
/

comment on column TG_GOODS.DISP_IMG_FILE_SIZE_TYPE_M is '전시 이미지 파일 사이즈 TYPE M'
/

comment on column TG_GOODS.GOODS_CONTS_GB_CD is '상품 컨텐츠 구분 코드'
/

comment on column TG_GOODS.NAVER_LINK_YN is '네이버 연동 여부'
/

comment on column TG_GOODS.SMR_GOODS_NM is '요약 상품 명'
/

comment on column TG_GOODS.DISP_IMG_NM_TYPE_O is '전시 이미지 명 TYPE O'
/

comment on column TG_GOODS.DISP_IMG_FILE_SIZE_TYPE_O is '전시 이미지 파일 사이즈 TYPE O'
/

comment on column TG_GOODS.DISP_IMG_PATH_TYPE_O is '전시 이미지 경로 TYPE O'
/

comment on column TG_GOODS.PRE_GOODS_YN is '증정 상품 여부'
/

comment on column TG_GOODS.SBN_LINK_YN is '사방넷 연동 여부'
/

comment on column TG_GOODS.INWARE_SCD_SCH is '입고 예정 일정'
/

comment on column TG_GOODS.RSV_BUY_YN is '예약 구매 여부'
/

create unique index IDX_TG_GOODS_PK
    on TG_GOODS (GOODS_NO)
/

create index IDX_TG_GOODS_001
    on TG_GOODS (ITEM_NO)
/

create unique index IDX_TG_GOODS_002
    on TG_GOODS (ITEM_NO, GOODS_NO)
/

create index IDX_TG_GOODS_003
    on TG_GOODS (DISP_YN, GOODS_SALE_STATUS_CD, SALE_END_DT, SITE_NO, SALE_START_DT)
/

create index IDX_TG_GOODS_004
    on TG_GOODS (ITEM_NO, SITE_NO)
/

create index IDX_TG_GOODS_005
    on TG_GOODS (GOODS_SALE_STATUS_CD, DISP_YN)
/

create index IDX_TG_GOODS_006
    on TG_GOODS (SITE_NO, DEL_YN)
/

create index IDX_TG_GOODS_007
    on TG_GOODS (ITEM_NO, DEL_YN)
/

create trigger TG_GOODS_HIST_TRG01
    after insert or update
    on TG_GOODS
    for each row
BEGIN
    IF(INSERTING OR UPDATING)
    THEN
       INSERT INTO DAVICH_MALL.TG_GOODS_HIST (
			 GOODS_NO
			,HIST_START_DTTM
			,SELLER_NO
			,COMPANY_NO
			,SITE_NO
			,NOTIFY_NO
			,GOODS_NM
			,MODEL_NM
			,ITEM_NO
			,BRAND_NO
			,GOODS_SALE_STATUS_CD
			,DISP_YN
			,RETURN_PSB_YN
			,SALE_YN
			,SALE_START_DT
			,SALE_END_DT
			,GOODS_ADD_INFO_USE_YN
			,MOBILE_DISP_YN
			,REINWARE_APPLY_YN
			,ADULT_CERTIFY_YN
			,MAX_ORD_LIMIT_YN
			,MAX_ORD_QTT
			,MIN_ORD_LIMIT_YN
			,MIN_ORD_QTT
			,PR_WORDS
			,ADD_OPT_USE_YN
			,MULTI_OPT_YN
			,HABITAT
			,MMFT
			,IMPORTER
			,TAX_GB_CD
			,HSCODE
			,SEO_SEARCH_WORD
			,WEIGHT
			,DLVR_SET_CD
			,DLVR_EXPECT_DAYS
			,GOODSEACH_DLVRC
			,PACK_MAX_UNIT
			,PACK_UNIT_DLVRC
			,COURI_DLVR_APPLY_YN
			,DIRECT_RECPT_APPLY_YN
			,DLVR_PAYMENT_KIND_CD
			,TX_LIMIT_CNDT
			,RELATE_GOODS_APPLY_TYPE_CD
			,RELATE_GOODS_APPLY_CTG
			,RELATE_GOODS_SALE_PRICE_START
			,RELATE_GOODS_SALE_PRICE_END
			,RELATE_GOODS_SALE_STATUS_CD
			,RELATE_GOODS_DISP_STATUS_CD
			,RELATE_GOODS_AUTO_EXPS_SORT_CD
			,GOODS_SVMN_POLICY_USE_YN
			,GOODS_SVMN_AMT
			,VIDEO_PATH
			,VIDEO_SOURCE_PATH
			,DISP_IMG_PATH_TYPE_A
			,DISP_IMG_NM_TYPE_A
			,DISP_IMG_PATH_TYPE_B
			,DISP_IMG_NM_TYPE_B
			,DISP_IMG_PATH_TYPE_C
			,DISP_IMG_NM_TYPE_C
			,DISP_IMG_PATH_TYPE_D
			,DISP_IMG_NM_TYPE_D
			,DISP_IMG_PATH_TYPE_E
			,DISP_IMG_NM_TYPE_E
			,ACCM_SALE_AMT
			,ACCM_SALE_CNT
			,ACCM_GOODSLETT_CNT
			,BASKET_SET_CNT
			,FAVGOODS_SET_CNT
			,GOODS_INQ_CNT
			,GOODS_SCORE
			,FREE_DLVR_MIN_AMT
			,GOODSEACH_CNDTADD_DLVRC
			,RSV_ONLY_YN 
			,NAVER_LINK_YN
			,PRE_GOODS_YN
			,SBN_LINK_YN
			,RSV_BUY_YN
			,DEL_YN
			,DELR_NO
			,DEL_DTTM
			,REGR_NO
			,REG_DTTM
			,UPDR_NO
			,UPD_DTTM
	   )VALUES ( 
			:NEW.GOODS_NO,
			TO_CHAR(CURRENT_TIMESTAMP(2), 'YYYYMMDDHH24MISSFF'),
			:NEW.SELLER_NO,
			:NEW.COMPANY_NO,
			:NEW.SITE_NO,
			:NEW.NOTIFY_NO,
			:NEW.GOODS_NM,
			:NEW.MODEL_NM,
			:NEW.ITEM_NO,
			:NEW.BRAND_NO,
			:NEW.GOODS_SALE_STATUS_CD,
			:NEW.DISP_YN,
			:NEW.RETURN_PSB_YN,
			:NEW.SALE_YN,
			:NEW.SALE_START_DT,
			:NEW.SALE_END_DT,
			:NEW.GOODS_ADD_INFO_USE_YN,
			:NEW.MOBILE_DISP_YN,
			:NEW.REINWARE_APPLY_YN,
			:NEW.ADULT_CERTIFY_YN,
			:NEW.MAX_ORD_LIMIT_YN,
			:NEW.MAX_ORD_QTT,
			:NEW.MIN_ORD_LIMIT_YN,
			:NEW.MIN_ORD_QTT,
			:NEW.PR_WORDS,
			:NEW.ADD_OPT_USE_YN,
			:NEW.MULTI_OPT_YN,
			:NEW.HABITAT,
			:NEW.MMFT,
			:NEW.IMPORTER,
			:NEW.TAX_GB_CD,
			:NEW.HSCODE,
			:NEW.SEO_SEARCH_WORD,
			:NEW.WEIGHT,
			:NEW.DLVR_SET_CD,
			:NEW.DLVR_EXPECT_DAYS,
			:NEW.GOODSEACH_DLVRC,
			:NEW.PACK_MAX_UNIT,
			:NEW.PACK_UNIT_DLVRC,
			:NEW.COURI_DLVR_APPLY_YN,
			:NEW.DIRECT_RECPT_APPLY_YN,
			:NEW.DLVR_PAYMENT_KIND_CD,
			:NEW.TX_LIMIT_CNDT,
			:NEW.RELATE_GOODS_APPLY_TYPE_CD,
			:NEW.RELATE_GOODS_APPLY_CTG,
			:NEW.RELATE_GOODS_SALE_PRICE_START,
			:NEW.RELATE_GOODS_SALE_PRICE_END,
			:NEW.RELATE_GOODS_SALE_STATUS_CD,
			:NEW.RELATE_GOODS_DISP_STATUS_CD,
			:NEW.RELATE_GOODS_AUTO_EXPS_SORT_CD,
			:NEW.GOODS_SVMN_POLICY_USE_YN,
			:NEW.GOODS_SVMN_AMT,
			:NEW.VIDEO_PATH,
			:NEW.VIDEO_SOURCE_PATH,
			:NEW.DISP_IMG_PATH_TYPE_A,
			:NEW.DISP_IMG_NM_TYPE_A,
			:NEW.DISP_IMG_PATH_TYPE_B,
			:NEW.DISP_IMG_NM_TYPE_B,
			:NEW.DISP_IMG_PATH_TYPE_C,
			:NEW.DISP_IMG_NM_TYPE_C,
			:NEW.DISP_IMG_PATH_TYPE_D,
			:NEW.DISP_IMG_NM_TYPE_D,
			:NEW.DISP_IMG_PATH_TYPE_E,
			:NEW.DISP_IMG_NM_TYPE_E,
			:NEW.ACCM_SALE_AMT,
			:NEW.ACCM_SALE_CNT,
			:NEW.ACCM_GOODSLETT_CNT,
			:NEW.BASKET_SET_CNT,
			:NEW.FAVGOODS_SET_CNT,
			:NEW.GOODS_INQ_CNT,
			:NEW.GOODS_SCORE,
			:NEW.FREE_DLVR_MIN_AMT,
			:NEW.GOODSEACH_CNDTADD_DLVRC,
			:NEW.RSV_ONLY_YN, 
			:NEW.NAVER_LINK_YN,
			:NEW.PRE_GOODS_YN,
			:NEW.SBN_LINK_YN,
			:NEW.RSV_BUY_YN,
			:NEW.DEL_YN,
			:NEW.DELR_NO,
			:NEW.DEL_DTTM,
			:NEW.REGR_NO,
			:NEW.REG_DTTM,
			:NEW.UPDR_NO,
			:NEW.UPD_DTTM
        );
    END IF;
END;
/

create table TG_GOODS_CTG
(
    CTG_NO          NUMBER(19)   not null,
    GOODS_NO        VARCHAR2(16) not null,
    SITE_NO         NUMBER(19)   not null,
    DLGT_CTG_YN     CHAR,
    DISP_YN         VARCHAR2(1),
    EXPS_PRIOR_RANK NUMBER,
    DEL_YN          VARCHAR2(1),
    REGR_NO         NUMBER(10),
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    DELR_NO         NUMBER,
    DEL_DTTM        DATE,
    constraint IDX_TG_GOODS_CTG_PK
        primary key (CTG_NO, GOODS_NO, SITE_NO),
    constraint FK_GOODS_CTG_1
        foreign key (CTG_NO, SITE_NO) references TG_CTG
)
/

comment on table TG_GOODS_CTG is '상품 카테고리'
/

comment on column TG_GOODS_CTG.CTG_NO is '카테고리 번호'
/

comment on column TG_GOODS_CTG.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_CTG.SITE_NO is '사이트 번호'
/

comment on column TG_GOODS_CTG.DLGT_CTG_YN is '대표 카테고리 여부'
/

comment on column TG_GOODS_CTG.DISP_YN is '전시 여부'
/

comment on column TG_GOODS_CTG.EXPS_PRIOR_RANK is '노출 우선 순위'
/

comment on column TG_GOODS_CTG.DEL_YN is '삭제 여부'
/

comment on column TG_GOODS_CTG.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_CTG.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_CTG.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_CTG.UPD_DTTM is '수정 일시'
/

comment on column TG_GOODS_CTG.DELR_NO is '삭제자 번호'
/

comment on column TG_GOODS_CTG.DEL_DTTM is '삭제 일시'
/

create index IDX_TG_GOODS_CTG_003
    on TG_GOODS_CTG (SITE_NO)
/

create index IDX_TG_GOODS_CTG_004
    on TG_GOODS_CTG (GOODS_NO)
/

create index IDX_TG_GOODS_CTG_001
    on TG_GOODS_CTG (DEL_YN)
/

create index IDX_TG_GOODS_CTG_002
    on TG_GOODS_CTG (DEL_YN, SITE_NO)
/

create index IDX_TG_GOODS_CTG_005
    on TG_GOODS_CTG (CTG_NO)
/

create index IDX_TG_GOODS_CTG_006
    on TG_GOODS_CTG (SITE_NO, GOODS_NO, CTG_NO, DEL_YN)
/

create index IDX_TG_GOODS_CTG_007
    on TG_GOODS_CTG (SITE_NO, GOODS_NO, DEL_YN)
/

create table TG_CTG_DISPZONE
(
    CTG_DISPZONE_NO       NUMBER(19) not null
        constraint IDX_TG_CTG_DISPZONE_PK
            primary key,
    SITE_NO               NUMBER(19) not null,
    CTG_NO                NUMBER(19) not null,
    DISPZONE_NM           VARCHAR2(50),
    USE_YN                VARCHAR2(1),
    CTG_DISP_DISP_TYPE_CD VARCHAR2(2),
    CTG_EXHBTION_TYPE_CD  VARCHAR2(1) default 1,
    CTG_DISPZONE_IMG_PATH VARCHAR2(300),
    CTG_DISPZONE_IMG_NM   VARCHAR2(300),
    DEL_YN                VARCHAR2(1),
    REGR_NO               NUMBER,
    REG_DTTM              DATE,
    UPDR_NO               NUMBER,
    UPD_DTTM              DATE,
    DELR_NO               NUMBER,
    DEL_DTTM              DATE,
    constraint FK_CTG_DISP_1
        foreign key (CTG_NO, SITE_NO) references TG_CTG
)
/

comment on table TG_CTG_DISPZONE is '카테고리 전시ZONE'
/

comment on column TG_CTG_DISPZONE.CTG_DISPZONE_NO is '카테고리 전시ZONE 번호'
/

comment on column TG_CTG_DISPZONE.SITE_NO is '사이트 번호'
/

comment on column TG_CTG_DISPZONE.CTG_NO is '카테고리 번호'
/

comment on column TG_CTG_DISPZONE.DISPZONE_NM is '전시ZONE 명'
/

comment on column TG_CTG_DISPZONE.USE_YN is '사용 여부'
/

comment on column TG_CTG_DISPZONE.CTG_DISP_DISP_TYPE_CD is '카테고리 전시 전시 유형 코드'
/

comment on column TG_CTG_DISPZONE.CTG_EXHBTION_TYPE_CD is '카테고리 진열 유형 코드'
/

comment on column TG_CTG_DISPZONE.CTG_DISPZONE_IMG_PATH is '카테고리 전시ZONE 이미지 경로'
/

comment on column TG_CTG_DISPZONE.CTG_DISPZONE_IMG_NM is '카테고리 전시ZONE 이미지 명'
/

comment on column TG_CTG_DISPZONE.DEL_YN is '삭제 여부'
/

comment on column TG_CTG_DISPZONE.REGR_NO is '등록자 번호'
/

comment on column TG_CTG_DISPZONE.REG_DTTM is '등록 일시'
/

comment on column TG_CTG_DISPZONE.UPDR_NO is '수정자 번호'
/

comment on column TG_CTG_DISPZONE.UPD_DTTM is '수정 일시'
/

comment on column TG_CTG_DISPZONE.DELR_NO is '삭제자 번호'
/

comment on column TG_CTG_DISPZONE.DEL_DTTM is '삭제 일시'
/

create table TG_CTG_DISP_GOODS
(
    CTG_DISPZONE_NO NUMBER(19)   not null
        constraint FK_CTG_DISP_GOODS_1
            references TG_CTG_DISPZONE,
    GOODS_NO        VARCHAR2(16) not null,
    DEL_YN          VARCHAR2(1),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    DELR_NO         NUMBER,
    DEL_DTTM        DATE,
    SITE_NO         NUMBER(19)
        constraint FK_CTG_DISP_GOODS_3
            references TS_SITE
                on delete set null,
    SORT_SEQ        NUMBER(38),
    constraint IDX_TG_CTG_DISP_GOODS_PK
        primary key (CTG_DISPZONE_NO, GOODS_NO)
)
/

comment on table TG_CTG_DISP_GOODS is '카테고리 전시 상품'
/

comment on column TG_CTG_DISP_GOODS.CTG_DISPZONE_NO is '카테고리 전시ZONE 번호'
/

comment on column TG_CTG_DISP_GOODS.GOODS_NO is '상품 번호'
/

comment on column TG_CTG_DISP_GOODS.DEL_YN is '삭제 여부'
/

comment on column TG_CTG_DISP_GOODS.REGR_NO is '등록자 번호'
/

comment on column TG_CTG_DISP_GOODS.REG_DTTM is '등록 일시'
/

comment on column TG_CTG_DISP_GOODS.DELR_NO is '삭제자 번호'
/

comment on column TG_CTG_DISP_GOODS.DEL_DTTM is '삭제 일시'
/

comment on column TG_CTG_DISP_GOODS.SITE_NO is '사이트 번호'
/

comment on column TG_CTG_DISP_GOODS.SORT_SEQ is '정렬순서'
/

create table TP_COUPON_TARGET_CTG
(
    COUPON_NO             NUMBER not null
        constraint FK_COUPON_TARGET_CTG_1
            references TP_COUPON,
    APPLY_SEQ             NUMBER not null,
    SITE_NO               NUMBER(19),
    COUPON_APPLY_LIMIT_CD VARCHAR2(2),
    USE_YN                VARCHAR2(1),
    CTG_NO                NUMBER(19),
    REGR_NO               NUMBER,
    REG_DTTM              DATE,
    UPDR_NO               NUMBER,
    UPD_DTTM              DATE,
    constraint IDX_TP_COUPON_TARGET_CTG_PK
        primary key (COUPON_NO, APPLY_SEQ),
    constraint FK_COUPON_TARGET_CTG_2
        foreign key (CTG_NO, SITE_NO) references TG_CTG
            on delete set null
)
/

comment on table TP_COUPON_TARGET_CTG is '쿠폰 대상 카테고리'
/

comment on column TP_COUPON_TARGET_CTG.COUPON_NO is '쿠폰 번호'
/

comment on column TP_COUPON_TARGET_CTG.APPLY_SEQ is '적용 순번'
/

comment on column TP_COUPON_TARGET_CTG.SITE_NO is '사이트 번호'
/

comment on column TP_COUPON_TARGET_CTG.COUPON_APPLY_LIMIT_CD is '쿠폰 대상 예외 코드'
/

comment on column TP_COUPON_TARGET_CTG.USE_YN is '사용 여부'
/

comment on column TP_COUPON_TARGET_CTG.CTG_NO is '카테고리 번호'
/

comment on column TP_COUPON_TARGET_CTG.REGR_NO is '등록자 번호'
/

comment on column TP_COUPON_TARGET_CTG.REG_DTTM is '등록 일시'
/

comment on column TP_COUPON_TARGET_CTG.UPDR_NO is '수정자 번호'
/

comment on column TP_COUPON_TARGET_CTG.UPD_DTTM is '수정 일시'
/

create index IDX_TP_COUPON_TARGET_CTG_001
    on TP_COUPON_TARGET_CTG (CTG_NO)
/

create index IDX_TP_COUPON_TARGET_CTG_002
    on TP_COUPON_TARGET_CTG (CTG_NO, USE_YN)
/

create index IDX_TG_CTG_002
    on TG_CTG (CTG_NO)
/

create index IDX_TG_CTG_003
    on TG_CTG (DEL_YN)
/

create index IDX_TG_CTG_004
    on TG_CTG (UP_CTG_NO)
/

create index IDX_TG_CTG_001
    on TG_CTG (SITE_NO)
/

create table TG_FREEBIE
(
    FREEBIE_NO    NUMBER(19) not null
        constraint IDX_TG_FREEBIE_PK
            primary key,
    REGR_NO       NUMBER,
    REG_DTTM      DATE,
    UPDR_NO       NUMBER,
    UPD_DTTM      DATE,
    SITE_NO       NUMBER(19) default 0
        constraint FK_FREEBIE_1
            references TS_SITE
                on delete set null,
    FREEBIE_NM    VARCHAR2(100),
    SIMPLE_DSCRT  VARCHAR2(300),
    FREEBIE_DSCRT CLOB,
    MANAGE_MEMO   VARCHAR2(300),
    USE_YN        VARCHAR2(1),
    DELR_NO       NUMBER,
    DEL_DTTM      DATE,
    DEL_YN        VARCHAR2(1)
)
/

comment on table TG_FREEBIE is '사은품'
/

comment on column TG_FREEBIE.FREEBIE_NO is '사은품 번호'
/

comment on column TG_FREEBIE.REGR_NO is '등록자 번호'
/

comment on column TG_FREEBIE.REG_DTTM is '등록 일시'
/

comment on column TG_FREEBIE.UPDR_NO is '수정자 번호'
/

comment on column TG_FREEBIE.UPD_DTTM is '수정 일시'
/

comment on column TG_FREEBIE.SITE_NO is '사이트 번호'
/

comment on column TG_FREEBIE.FREEBIE_NM is '사은품 명'
/

comment on column TG_FREEBIE.SIMPLE_DSCRT is '간단 설명'
/

comment on column TG_FREEBIE.FREEBIE_DSCRT is '사은품 설명'
/

comment on column TG_FREEBIE.MANAGE_MEMO is '관리 메모'
/

comment on column TG_FREEBIE.USE_YN is '사용 여부'
/

comment on column TG_FREEBIE.DELR_NO is '삭제자 번호'
/

comment on column TG_FREEBIE.DEL_DTTM is '삭제 일시'
/

comment on column TG_FREEBIE.DEL_YN is '삭제 여부'
/

create table TO_ORD_FREEBIE
(
    ORD_FREEBIE_SEQ NUMBER     not null
        constraint IDX_TO_ORD_FREEBIE_PK
            primary key,
    FREEBIE_NO      NUMBER(19)
        constraint FK_ORD_FREEBIE_1
            references TG_FREEBIE
                on delete set null,
    ORD_NO          NUMBER(16) not null,
    ORD_DTL_SEQ     NUMBER     not null,
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    constraint FK_ORD_FREEBIE_2
        foreign key (ORD_NO, ORD_DTL_SEQ) references TO_ORD_DTL
)
/

comment on table TO_ORD_FREEBIE is '주문 사은품'
/

comment on column TO_ORD_FREEBIE.ORD_FREEBIE_SEQ is '주문 사은품 순번'
/

comment on column TO_ORD_FREEBIE.FREEBIE_NO is '사은품 번호'
/

comment on column TO_ORD_FREEBIE.ORD_NO is '주문 번호'
/

comment on column TO_ORD_FREEBIE.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TO_ORD_FREEBIE.REGR_NO is '등록자 번호'
/

comment on column TO_ORD_FREEBIE.REG_DTTM is '등록 일시'
/

comment on column TO_ORD_FREEBIE.UPDR_NO is '수정자 번호'
/

comment on column TO_ORD_FREEBIE.UPD_DTTM is '수정 일시'
/

create table TG_FREEBIE_IMG_DTL
(
    FREEBIE_NO       NUMBER(19)  not null
        constraint FK_FREEBIE_IMG_DTL_1
            references TG_FREEBIE,
    FREEBIE_IMG_TYPE VARCHAR2(2) not null,
    IMG_PATH         VARCHAR2(50),
    IMG_NM           VARCHAR2(300),
    IMG_WIDTH        NUMBER,
    IMG_HEIGHT       NUMBER,
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE,
    constraint IDX_TG_FREEBIE_IMG_DTL_PK
        primary key (FREEBIE_NO, FREEBIE_IMG_TYPE)
)
/

comment on table TG_FREEBIE_IMG_DTL is '사은품 이미지 상세'
/

comment on column TG_FREEBIE_IMG_DTL.FREEBIE_NO is '사은품 번호'
/

comment on column TG_FREEBIE_IMG_DTL.FREEBIE_IMG_TYPE is '사은품 이미지 유형'
/

comment on column TG_FREEBIE_IMG_DTL.IMG_PATH is '이미지 경로'
/

comment on column TG_FREEBIE_IMG_DTL.IMG_NM is '이미지 명'
/

comment on column TG_FREEBIE_IMG_DTL.IMG_WIDTH is '이미지 가로'
/

comment on column TG_FREEBIE_IMG_DTL.IMG_HEIGHT is '이미지 세로'
/

comment on column TG_FREEBIE_IMG_DTL.REGR_NO is '등록자 번호'
/

comment on column TG_FREEBIE_IMG_DTL.REG_DTTM is '등록 일시'
/

comment on column TG_FREEBIE_IMG_DTL.UPDR_NO is '수정자 번호'
/

comment on column TG_FREEBIE_IMG_DTL.UPD_DTTM is '수정 일시'
/

create table TP_FREEBIE_EVENT_GOODS
(
    FREEBIE_EVENT_NO NUMBER     not null
        constraint FK_FREEBIE_EVENT_GOODS_1
            references TP_FREEBIE_EVENT,
    FREEBIE_NO       NUMBER(19) not null
        constraint FK_FREEBIE_EVENT_GOODS_2
            references TG_FREEBIE,
    USE_YN           VARCHAR2(1),
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE,
    constraint IDX_TP_FREEBIE_EVENT_GOODS_PK
        primary key (FREEBIE_EVENT_NO, FREEBIE_NO)
)
/

comment on table TP_FREEBIE_EVENT_GOODS is '사은품 이벤트 상품'
/

comment on column TP_FREEBIE_EVENT_GOODS.FREEBIE_EVENT_NO is '사은품 이벤트 번호'
/

comment on column TP_FREEBIE_EVENT_GOODS.FREEBIE_NO is '사은품 번호'
/

comment on column TP_FREEBIE_EVENT_GOODS.USE_YN is '사용 여부'
/

comment on column TP_FREEBIE_EVENT_GOODS.REGR_NO is '등록자 번호'
/

comment on column TP_FREEBIE_EVENT_GOODS.REG_DTTM is '등록 일시'
/

comment on column TP_FREEBIE_EVENT_GOODS.UPDR_NO is '수정자 번호'
/

comment on column TP_FREEBIE_EVENT_GOODS.UPD_DTTM is '수정 일시'
/

create table TI_IF_LOG
(
    IF_NO          VARCHAR2(16) not null
        constraint IDX_TI_IF_LOG_PK
            primary key
        constraint FK_IF_LOG_2
            references TI_IF_LOG
                on delete set null,
    IF_ID          VARCHAR2(10) not null
        constraint FK_IF_LOG_1
            references TI_IF_MANAGE,
    SITE_NO        NUMBER(19),
    IF_PGM_ID      VARCHAR2(50),
    IF_PGM_NM      VARCHAR2(100),
    IF_GB_CD       VARCHAR2(10),
    UP_IF_NO       VARCHAR2(16),
    START_IF_SNO   VARCHAR2(16),
    END_IF_SNO     VARCHAR2(16),
    START_DTTM     VARCHAR2(14),
    END_DTTM       VARCHAR2(14),
    SEND_DT        VARCHAR2(14),
    SUCS_YN        VARCHAR2(1),
    ERR_CD         VARCHAR2(20),
    RESULT_CONTENT VARCHAR2(300),
    DATA_CNT       NUMBER(16),
    DATA_TOT_CNT   NUMBER(16),
    START_KEY      VARCHAR2(100),
    END_KEY        VARCHAR2(100),
    SEND_CONTS     CLOB,
    RECV_CONTS     CLOB,
    MEDIA_CD       VARCHAR2(2),
    REGR_NO        NUMBER,
    REG_DTTM       DATE,
    UPDR_NO        NUMBER,
    UPD_DTTM       DATE
)
/

comment on table TI_IF_LOG is '연계 로그'
/

comment on column TI_IF_LOG.IF_NO is '연계 번호'
/

comment on column TI_IF_LOG.IF_ID is '연계 ID'
/

comment on column TI_IF_LOG.SITE_NO is '사이트 번호'
/

comment on column TI_IF_LOG.IF_PGM_ID is '연계 프로그램 ID'
/

comment on column TI_IF_LOG.IF_PGM_NM is '연계 프로그램 명'
/

comment on column TI_IF_LOG.IF_GB_CD is '연계 구분 코드'
/

comment on column TI_IF_LOG.UP_IF_NO is '상위 연계 번호'
/

comment on column TI_IF_LOG.START_IF_SNO is '시작 연계 일련번호'
/

comment on column TI_IF_LOG.END_IF_SNO is '종료 연계 일련번호'
/

comment on column TI_IF_LOG.START_DTTM is '시작 일시'
/

comment on column TI_IF_LOG.END_DTTM is '종료 일시'
/

comment on column TI_IF_LOG.SEND_DT is '전송 일자'
/

comment on column TI_IF_LOG.SUCS_YN is '성공 여부'
/

comment on column TI_IF_LOG.ERR_CD is '에러 코드'
/

comment on column TI_IF_LOG.RESULT_CONTENT is '결과 내용'
/

comment on column TI_IF_LOG.DATA_CNT is '데이터 건수'
/

comment on column TI_IF_LOG.DATA_TOT_CNT is '데이터 총 건수'
/

comment on column TI_IF_LOG.START_KEY is '시작 KEY'
/

comment on column TI_IF_LOG.END_KEY is '종료 KEY'
/

comment on column TI_IF_LOG.SEND_CONTS is '송신 컨텐츠'
/

comment on column TI_IF_LOG.RECV_CONTS is '수신 컨텐츠'
/

comment on column TI_IF_LOG.MEDIA_CD is '매체 코드'
/

comment on column TI_IF_LOG.REGR_NO is '등록자 번호'
/

comment on column TI_IF_LOG.REG_DTTM is '등록 일시'
/

comment on column TI_IF_LOG.UPDR_NO is '수정자 번호'
/

comment on column TI_IF_LOG.UPD_DTTM is '수정 일시'
/

create table TI_IF_SBN_BTCH_LOG
(
    IF_NO             VARCHAR2(16) not null
        constraint IDX_TI_IF_SBN_BTCH_LOG_PK
            primary key
        constraint FK_IF_SBN_BTCH_LOG_1
            references TI_IF_LOG,
    IF_ID             VARCHAR2(10),
    SITE_NO           NUMBER(19),
    BTCH_PGM_ID       VARCHAR2(50),
    BTCH_PGM_NM       VARCHAR2(100),
    BTCH_GB_CD        VARCHAR2(10),
    START_DTTM        VARCHAR2(14),
    END_DTTM          VARCHAR2(14),
    DATA_CNT          NUMBER(16),
    SUCS_YN           VARCHAR2(1),
    ERR_CD            VARCHAR2(20),
    RESULT_CONTENT    VARCHAR2(300),
    BTCH_WORK_CONTENT VARCHAR2(2000),
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE
)
/

comment on table TI_IF_SBN_BTCH_LOG is '연계 사방넷 배치 로그'
/

comment on column TI_IF_SBN_BTCH_LOG.IF_NO is '연계 번호'
/

comment on column TI_IF_SBN_BTCH_LOG.IF_ID is '연계 ID'
/

comment on column TI_IF_SBN_BTCH_LOG.SITE_NO is '사이트 번호'
/

comment on column TI_IF_SBN_BTCH_LOG.BTCH_PGM_ID is '배치 프로그램 ID'
/

comment on column TI_IF_SBN_BTCH_LOG.BTCH_PGM_NM is '배치 프로그램 명'
/

comment on column TI_IF_SBN_BTCH_LOG.BTCH_GB_CD is '배치 구분 코드'
/

comment on column TI_IF_SBN_BTCH_LOG.START_DTTM is '시작 일시'
/

comment on column TI_IF_SBN_BTCH_LOG.END_DTTM is '종료 일시'
/

comment on column TI_IF_SBN_BTCH_LOG.DATA_CNT is '데이터 건수'
/

comment on column TI_IF_SBN_BTCH_LOG.SUCS_YN is '성공 여부'
/

comment on column TI_IF_SBN_BTCH_LOG.ERR_CD is '에러 코드'
/

comment on column TI_IF_SBN_BTCH_LOG.RESULT_CONTENT is '결과 내용'
/

comment on column TI_IF_SBN_BTCH_LOG.BTCH_WORK_CONTENT is '배치 작업 내용'
/

comment on column TI_IF_SBN_BTCH_LOG.REGR_NO is '등록자 번호'
/

comment on column TI_IF_SBN_BTCH_LOG.REG_DTTM is '등록 일시'
/

comment on column TI_IF_SBN_BTCH_LOG.UPDR_NO is '수정자 번호'
/

comment on column TI_IF_SBN_BTCH_LOG.UPD_DTTM is '수정 일시'
/

create table TI_IF_SBN_LOG
(
    IF_NO                    VARCHAR2(16) not null
        constraint IDX_TI_IF_SBN_LOG_PK
            primary key
        constraint FK_IF_SBN_LOG_1
            references TI_IF_LOG,
    IF_ID                    VARCHAR2(10),
    SITE_NO                  NUMBER(19),
    IF_PGM_NM                VARCHAR2(100),
    GOODS_CD_RETURN_YN       VARCHAR2(1),
    RESULT_CONTENT           VARCHAR2(300),
    SRCH_START_DT            VARCHAR2(8),
    SRCH_END_DT              VARCHAR2(8),
    PRT_FIELD_LIST           VARCHAR2(1000),
    SALES_CALCULATE_CHECK_YN VARCHAR2(1),
    ORD_NO                   VARCHAR2(30),
    SPMALL_CD                VARCHAR2(10),
    ORD_DLVR_STATUS_CD       VARCHAR2(3),
    INVOICE_INFO_UPD_YN      VARCHAR2(1),
    SRCH_PRC_GB_CD           VARCHAR2(3),
    REGR_NO                  NUMBER,
    REG_DTTM                 DATE,
    UPDR_NO                  NUMBER,
    UPD_DTTM                 DATE
)
/

comment on table TI_IF_SBN_LOG is '연계 사방넷 로그'
/

comment on column TI_IF_SBN_LOG.IF_NO is '연계 번호'
/

comment on column TI_IF_SBN_LOG.IF_ID is '연계 ID'
/

comment on column TI_IF_SBN_LOG.SITE_NO is '사이트 번호'
/

comment on column TI_IF_SBN_LOG.IF_PGM_NM is '연계 프로그램 명'
/

comment on column TI_IF_SBN_LOG.GOODS_CD_RETURN_YN is '상품 코드 반환 여부'
/

comment on column TI_IF_SBN_LOG.RESULT_CONTENT is '결과 내용'
/

comment on column TI_IF_SBN_LOG.SRCH_START_DT is '검색 시작 일자'
/

comment on column TI_IF_SBN_LOG.SRCH_END_DT is '검색 종료 일자'
/

comment on column TI_IF_SBN_LOG.PRT_FIELD_LIST is '출력 필드 리스트'
/

comment on column TI_IF_SBN_LOG.SALES_CALCULATE_CHECK_YN is '매출 정산 확인 여부'
/

comment on column TI_IF_SBN_LOG.ORD_NO is '주문 번호'
/

comment on column TI_IF_SBN_LOG.SPMALL_CD is '쇼핑몰 코드'
/

comment on column TI_IF_SBN_LOG.ORD_DLVR_STATUS_CD is '주문 배송 상태 코드'
/

comment on column TI_IF_SBN_LOG.INVOICE_INFO_UPD_YN is '송장 정보 수정 여부'
/

comment on column TI_IF_SBN_LOG.SRCH_PRC_GB_CD is '검색 처리 구분 코드'
/

comment on column TI_IF_SBN_LOG.REGR_NO is '등록자 번호'
/

comment on column TI_IF_SBN_LOG.REG_DTTM is '등록 일시'
/

comment on column TI_IF_SBN_LOG.UPDR_NO is '수정자 번호'
/

comment on column TI_IF_SBN_LOG.UPD_DTTM is '수정 일시'
/

create table TO_CASH_RCT
(
    CASH_RCT_NO        NUMBER not null
        constraint IDX_TO_CASH_RCT_PK
            primary key,
    ORD_NO             NUMBER(16)
        constraint FK_CASH_RCT_1
            references TO_ORD
                on delete set null,
    CASH_RCT_STATUS_CD VARCHAR2(2),
    APPLICANT_GB_CD    VARCHAR2(2),
    USE_GB_CD          VARCHAR2(2),
    MEMBER_NO          NUMBER,
    ISSUE_WAY_CD       VARCHAR2(2),
    ISSUE_WAY_NO       VARCHAR2(13),
    SUPPLY_AMT         NUMBER(20, 2),
    VAT_AMT            NUMBER(20, 2),
    SVCCHRG_AMT        NUMBER(20, 2),
    TOT_AMT            NUMBER(20, 2),
    ACCEPT_DTTM        DATE,
    LINK_DTTM          DATE,
    LINK_TX_NO         VARCHAR2(100),
    LINK_RESULT_CD     VARCHAR2(4),
    LINK_RESULT_MSG    CLOB,
    APPLICANT_NM       VARCHAR2(100),
    EMAIL              VARCHAR2(100),
    TEL_NO             VARCHAR2(100),
    GOODS_NM           VARCHAR2(100),
    MEMO               VARCHAR2(2000),
    PAYMENT_PG_CD      VARCHAR2(2),
    REGR_NO            NUMBER,
    REG_DTTM           DATE,
    UPDR_NO            NUMBER,
    UPD_DTTM           DATE
)
/

comment on table TO_CASH_RCT is '현금 영수증'
/

comment on column TO_CASH_RCT.CASH_RCT_NO is '현금 영수증 번호'
/

comment on column TO_CASH_RCT.ORD_NO is '주문 번호'
/

comment on column TO_CASH_RCT.CASH_RCT_STATUS_CD is '현금 영수증 상태 코드'
/

comment on column TO_CASH_RCT.APPLICANT_GB_CD is '신청자 구분 코드'
/

comment on column TO_CASH_RCT.USE_GB_CD is '사용 구분 코드'
/

comment on column TO_CASH_RCT.MEMBER_NO is '회원 번호'
/

comment on column TO_CASH_RCT.ISSUE_WAY_CD is '발급 수단 코드'
/

comment on column TO_CASH_RCT.ISSUE_WAY_NO is '발급 수단 번호'
/

comment on column TO_CASH_RCT.SUPPLY_AMT is '공급 금액'
/

comment on column TO_CASH_RCT.VAT_AMT is '부가세 금액'
/

comment on column TO_CASH_RCT.SVCCHRG_AMT is '봉사료 금액'
/

comment on column TO_CASH_RCT.TOT_AMT is '총 금액'
/

comment on column TO_CASH_RCT.ACCEPT_DTTM is '접수 일시'
/

comment on column TO_CASH_RCT.LINK_DTTM is '연동 일시'
/

comment on column TO_CASH_RCT.LINK_TX_NO is '연동 거래 번호'
/

comment on column TO_CASH_RCT.LINK_RESULT_CD is '연동 결과 코드'
/

comment on column TO_CASH_RCT.LINK_RESULT_MSG is '연동 결과 메세지'
/

comment on column TO_CASH_RCT.APPLICANT_NM is '신청자 명'
/

comment on column TO_CASH_RCT.EMAIL is '이메일'
/

comment on column TO_CASH_RCT.TEL_NO is '전화 번호'
/

comment on column TO_CASH_RCT.GOODS_NM is '상품 명'
/

comment on column TO_CASH_RCT.MEMO is '메모'
/

comment on column TO_CASH_RCT.PAYMENT_PG_CD is '결제 PG 코드'
/

comment on column TO_CASH_RCT.REGR_NO is '등록자 번호'
/

comment on column TO_CASH_RCT.REG_DTTM is '등록 일시'
/

comment on column TO_CASH_RCT.UPDR_NO is '수정자 번호'
/

comment on column TO_CASH_RCT.UPD_DTTM is '수정 일시'
/

create table TP_EVENT
(
    EVENT_NO                     NUMBER not null
        constraint IDX_TP_EVENT_PK
            primary key,
    SITE_NO                      NUMBER(19)
        constraint FK_EVENT_1
            references TS_SITE
                on delete set null,
    EVENT_NM                     VARCHAR2(100),
    EVENT_DSCRT                  VARCHAR2(500),
    EVENT_KIND_CD                VARCHAR2(2),
    APPLY_START_DTTM             DATE,
    APPLY_END_DTTM               DATE,
    EVENT_WNG_DTTM               DATE,
    EVENT_CONTENT_HTML           CLOB,
    EVENT_CMNT_USE_YN            VARCHAR2(1),
    EVENT_WEB_BANNER_IMG_PATH    VARCHAR2(255),
    EVENT_WEB_BANNER_IMG         VARCHAR2(255),
    EVENT_MOBILE_BANNER_IMG_PATH VARCHAR2(255),
    EVENT_MOBILE_BANNER_IMG      VARCHAR2(255),
    EVENT_PERIOD_EXPT_CD         VARCHAR2(2),
    EVENT_PVD_POINT              NUMBER(20),
    EVENT_METHOD_CD              VARCHAR2(2),
    EVENT_CNDT_CD                VARCHAR2(2),
    EVENT_TOT_PARTDT_CNDT        NUMBER,
    EVENT_ADD_PVD_POINT          NUMBER(20),
    EVENT_POINT_PVD_METHOD_CD    VARCHAR2(2),
    EVENT_POINT_APPLY_CD         VARCHAR2(2),
    POINT_APPLY_START_DTTM       DATE,
    POINT_APPLY_END_DTTM         DATE,
    EVENT_APPLY_ISSUE_AF_PERIOD  NUMBER,
    EVENT_WNG_CONFIRM_YN         VARCHAR2(1),
    EVENT_USE_YN                 VARCHAR2(1),
    REGR_NO                      NUMBER,
    REG_DTTM                     DATE,
    UPDR_NO                      NUMBER,
    UPD_DTTM                     DATE,
    DEL_YN                       VARCHAR2(1),
    DELR_NO                      NUMBER,
    DEL_DTTM                     DATE,
    EVENT_CMNT_AUTH              VARCHAR2(20)
)
/

comment on table TP_EVENT is '이벤트'
/

comment on column TP_EVENT.EVENT_NO is '이벤트 번호'
/

comment on column TP_EVENT.SITE_NO is '사이트 번호'
/

comment on column TP_EVENT.EVENT_NM is '이벤트 명'
/

comment on column TP_EVENT.EVENT_DSCRT is '이벤트 설명'
/

comment on column TP_EVENT.EVENT_KIND_CD is '이벤트 종류 코드'
/

comment on column TP_EVENT.APPLY_START_DTTM is '적용 시작 일시'
/

comment on column TP_EVENT.APPLY_END_DTTM is '적용 종료 일시'
/

comment on column TP_EVENT.EVENT_WNG_DTTM is '이벤트 당첨 일시'
/

comment on column TP_EVENT.EVENT_CONTENT_HTML is '이벤트 내용 HTML'
/

comment on column TP_EVENT.EVENT_CMNT_USE_YN is '이벤트 댓글 사용 여부'
/

comment on column TP_EVENT.EVENT_WEB_BANNER_IMG_PATH is '이벤트 웹 배너 이미지 경로'
/

comment on column TP_EVENT.EVENT_WEB_BANNER_IMG is '이벤트 웹 배너 이미지'
/

comment on column TP_EVENT.EVENT_MOBILE_BANNER_IMG_PATH is '이벤트 모바일 배너 이미지 경로'
/

comment on column TP_EVENT.EVENT_MOBILE_BANNER_IMG is '이벤트 모바일 배너 이미지'
/

comment on column TP_EVENT.EVENT_PERIOD_EXPT_CD is '이벤트 기간 예외 코드'
/

comment on column TP_EVENT.EVENT_PVD_POINT is '이벤트 지급 포인트'
/

comment on column TP_EVENT.EVENT_METHOD_CD is '이벤트 방법 코드'
/

comment on column TP_EVENT.EVENT_CNDT_CD is '이벤트 조건 코드'
/

comment on column TP_EVENT.EVENT_TOT_PARTDT_CNDT is '이벤트 총 참여 횟수'
/

comment on column TP_EVENT.EVENT_ADD_PVD_POINT is '이벤트 추가 지급 포인트'
/

comment on column TP_EVENT.EVENT_POINT_PVD_METHOD_CD is '포인트 지급 방법 코드'
/

comment on column TP_EVENT.EVENT_POINT_APPLY_CD is '포인트 유효 기간 코드'
/

comment on column TP_EVENT.POINT_APPLY_START_DTTM is '포인트 적용 시작 일시'
/

comment on column TP_EVENT.POINT_APPLY_END_DTTM is '포인트 적용 종료 일시'
/

comment on column TP_EVENT.EVENT_APPLY_ISSUE_AF_PERIOD is '적용 발급 후 기간'
/

comment on column TP_EVENT.EVENT_WNG_CONFIRM_YN is '이벤트 당첨 확정 여부'
/

comment on column TP_EVENT.EVENT_USE_YN is '이벤트 사용 여부'
/

comment on column TP_EVENT.REGR_NO is '등록자 번호'
/

comment on column TP_EVENT.REG_DTTM is '등록 일시'
/

comment on column TP_EVENT.UPDR_NO is '수정자 번호'
/

comment on column TP_EVENT.UPD_DTTM is '수정 일시'
/

comment on column TP_EVENT.DEL_YN is '삭제 여부'
/

comment on column TP_EVENT.DELR_NO is '삭제자 번호'
/

comment on column TP_EVENT.DEL_DTTM is '삭제 일시'
/

comment on column TP_EVENT.EVENT_CMNT_AUTH is '이벤트 댓글 권한'
/

create table TP_EVENT_LETT
(
    LETT_NO      NUMBER not null
        constraint IDX_TP_EVENT_LETT_PK
            primary key,
    EVENT_NO     NUMBER not null
        constraint FK_EVENT_LETT_1
            references TP_EVENT,
    MEMBER_NO    NUMBER
        constraint FK_EVENT_LETT_2
            references TC_MEMBER
                on delete set null,
    CONTENT      CLOB,
    WNG_YN       VARCHAR2(1),
    BLIND_PRC_YN VARCHAR2(1),
    REG_NM       VARCHAR2(255),
    REG_DT       VARCHAR2(8),
    CONSCT_DCNT  NUMBER,
    USE_YN       VARCHAR2(1),
    REGR_NO      NUMBER,
    REG_DTTM     DATE,
    UPDR_NO      NUMBER,
    UPD_DTTM     DATE
)
/

comment on table TP_EVENT_LETT is '이벤트 글'
/

comment on column TP_EVENT_LETT.LETT_NO is '글 번호'
/

comment on column TP_EVENT_LETT.EVENT_NO is '이벤트 번호'
/

comment on column TP_EVENT_LETT.MEMBER_NO is '회원 번호'
/

comment on column TP_EVENT_LETT.CONTENT is '내용'
/

comment on column TP_EVENT_LETT.WNG_YN is '당첨 여부'
/

comment on column TP_EVENT_LETT.BLIND_PRC_YN is '블라인드 처리 여부'
/

comment on column TP_EVENT_LETT.REG_NM is '등록 명'
/

comment on column TP_EVENT_LETT.REG_DT is '등록 일자'
/

comment on column TP_EVENT_LETT.CONSCT_DCNT is '연속 일수'
/

comment on column TP_EVENT_LETT.USE_YN is '사용 여부'
/

comment on column TP_EVENT_LETT.REGR_NO is '등록자 번호'
/

comment on column TP_EVENT_LETT.REG_DTTM is '등록 일시'
/

comment on column TP_EVENT_LETT.UPDR_NO is '수정자 번호'
/

comment on column TP_EVENT_LETT.UPD_DTTM is '수정 일시'
/

create table TP_EVENT_LETT_HIST
(
    LETT_NO         NUMBER not null
        constraint FK_EVENT_LETT_HIST_2
            references TP_EVENT_LETT,
    EVENT_NO        NUMBER not null
        constraint FK_EVENT_LETT_HIST_1
            references TP_EVENT,
    HIST_START_DTTM DATE   not null,
    MEMBER_NO       NUMBER
        constraint FK_EVENT_LETT_HIST_3
            references TC_MEMBER
                on delete set null,
    CONTENT         CLOB,
    WNG_YN          VARCHAR2(1),
    BLIND_PRC_YN    VARCHAR2(1),
    REG_NM          VARCHAR2(255),
    REG_DT          VARCHAR2(8),
    CONSCT_DCNT     NUMBER,
    USE_YN          VARCHAR2(1),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    constraint IDX_TP_EVENT_LETT_HIST_PK
        primary key (LETT_NO, EVENT_NO, HIST_START_DTTM)
)
/

comment on table TP_EVENT_LETT_HIST is '이벤트 글 이력'
/

comment on column TP_EVENT_LETT_HIST.LETT_NO is '글 번호'
/

comment on column TP_EVENT_LETT_HIST.EVENT_NO is '이벤트 번호'
/

comment on column TP_EVENT_LETT_HIST.HIST_START_DTTM is '이력 시작 일시'
/

comment on column TP_EVENT_LETT_HIST.MEMBER_NO is '회원 번호'
/

comment on column TP_EVENT_LETT_HIST.CONTENT is '내용'
/

comment on column TP_EVENT_LETT_HIST.WNG_YN is '당첨 여부'
/

comment on column TP_EVENT_LETT_HIST.BLIND_PRC_YN is '블라인드 처리 여부'
/

comment on column TP_EVENT_LETT_HIST.REG_NM is '등록 명'
/

comment on column TP_EVENT_LETT_HIST.REG_DT is '등록 일자'
/

comment on column TP_EVENT_LETT_HIST.CONSCT_DCNT is '연속 일수'
/

comment on column TP_EVENT_LETT_HIST.USE_YN is '사용 여부'
/

comment on column TP_EVENT_LETT_HIST.REGR_NO is '등록자 번호'
/

comment on column TP_EVENT_LETT_HIST.REG_DTTM is '등록 일시'
/

comment on column TP_EVENT_LETT_HIST.UPDR_NO is '수정자 번호'
/

comment on column TP_EVENT_LETT_HIST.UPD_DTTM is '수정 일시'
/

create table TP_EVENT_WNG_CONTENT
(
    WNG_CONTENT_NO   NUMBER not null
        constraint IDX_TP_EVENT_WNG_CONTENT_PK
            primary key,
    EVENT_NO         NUMBER not null
        constraint FK_EVENT_WNG_CONTENT_1
            references TP_EVENT,
    WNG_NM           VARCHAR2(255),
    WNG_CONTENT_HTML CLOB,
    USE_YN           VARCHAR2(1),
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE
)
/

comment on table TP_EVENT_WNG_CONTENT is '이벤트 당첨'
/

comment on column TP_EVENT_WNG_CONTENT.WNG_CONTENT_NO is '당첨 내용 번호'
/

comment on column TP_EVENT_WNG_CONTENT.EVENT_NO is '이벤트 번호'
/

comment on column TP_EVENT_WNG_CONTENT.WNG_NM is '당첨 제목'
/

comment on column TP_EVENT_WNG_CONTENT.WNG_CONTENT_HTML is '당첨 내용 HTML'
/

comment on column TP_EVENT_WNG_CONTENT.USE_YN is '사용 여부'
/

comment on column TP_EVENT_WNG_CONTENT.REGR_NO is '등록자 번호'
/

comment on column TP_EVENT_WNG_CONTENT.REG_DTTM is '등록 일시'
/

comment on column TP_EVENT_WNG_CONTENT.UPDR_NO is '수정자 번호'
/

comment on column TP_EVENT_WNG_CONTENT.UPD_DTTM is '수정 일시'
/

create table TP_PROMOTION
(
    PRMT_NO                     NUMBER not null
        constraint IDX_TP_PROMOTION_PK
            unique,
    PRMT_NM                     VARCHAR2(100),
    APPLY_START_DTTM            DATE,
    APPLY_END_DTTM              DATE,
    REGR_NO                     NUMBER,
    UPDR_NO                     NUMBER,
    UPD_DTTM                    DATE,
    REG_DTTM                    DATE,
    PRMT_DC_VALUE               NUMBER(20, 2),
    SITE_NO                     NUMBER(19)
        constraint FK_PROMOTION_1
            references TS_SITE
                on delete set null,
    PRMT_DSCRT                  VARCHAR2(500),
    PRMT_CONTENT_HTML           CLOB,
    PRMT_WEB_BANNER_IMG         VARCHAR2(255),
    PRMT_MOBILE_BANNER_IMG      VARCHAR2(255),
    DEL_YN                      VARCHAR2(1),
    USE_YN                      VARCHAR2(1),
    DELR_NO                     NUMBER,
    DEL_DTTM                    DATE,
    PRMT_TARGET_EXPT_CD         VARCHAR2(2),
    PRMT_MOBILE_BANNER_IMG_PATH VARCHAR2(255),
    PRMT_WEB_BANNER_IMG_PATH    VARCHAR2(255),
    PRMT_TYPE_CD                VARCHAR2(2),
    PRMT_DC_GB_CD               VARCHAR2(2),
    PRMT_LOADRATE               NUMBER,
    PRMT_GOODS_GB_CD            VARCHAR2(2),
    PRMT_BRAND_NO               NUMBER,
    PRMT_MAIN_EXPS_USE_YN       CHAR,
    PRMT_MAIN_EXPS_PST          VARCHAR2(2),
    PRMT_MAIN_EXPS_SEQ          NUMBER,
    FIRST_BUY_SPC_PRICE         NUMBER,
    SEO_SEARCH_WORD             VARCHAR2(4000),
    AGE_CD                      VARCHAR2(100)
)
/

comment on table TP_PROMOTION is '프로모션'
/

comment on column TP_PROMOTION.PRMT_NO is '프로모션 번호'
/

comment on column TP_PROMOTION.PRMT_NM is '프로모션 명'
/

comment on column TP_PROMOTION.APPLY_START_DTTM is '적용 시작 일시'
/

comment on column TP_PROMOTION.APPLY_END_DTTM is '적용 종료 일시'
/

comment on column TP_PROMOTION.REGR_NO is '등록자 번호'
/

comment on column TP_PROMOTION.UPDR_NO is '수정자 번호'
/

comment on column TP_PROMOTION.UPD_DTTM is '수정 일시'
/

comment on column TP_PROMOTION.REG_DTTM is '등록 일시'
/

comment on column TP_PROMOTION.PRMT_DC_VALUE is '프로모션 할인 값'
/

comment on column TP_PROMOTION.SITE_NO is '사이트 번호'
/

comment on column TP_PROMOTION.PRMT_DSCRT is '프로모션 설명'
/

comment on column TP_PROMOTION.PRMT_CONTENT_HTML is '프로모션 내용 HTML'
/

comment on column TP_PROMOTION.PRMT_WEB_BANNER_IMG is '프로모션 웹 배너 이미지'
/

comment on column TP_PROMOTION.PRMT_MOBILE_BANNER_IMG is '프로모션 모바일 배너 이미지'
/

comment on column TP_PROMOTION.DEL_YN is '삭제 여부'
/

comment on column TP_PROMOTION.USE_YN is '사용 여부'
/

comment on column TP_PROMOTION.DELR_NO is '삭제자 번호'
/

comment on column TP_PROMOTION.DEL_DTTM is '삭제 일시'
/

comment on column TP_PROMOTION.PRMT_TARGET_EXPT_CD is '프로모션 대상 예외 코드'
/

comment on column TP_PROMOTION.PRMT_MOBILE_BANNER_IMG_PATH is '프로모션 모바일 이미지 경로'
/

comment on column TP_PROMOTION.PRMT_WEB_BANNER_IMG_PATH is '프로모션 웹 배너 이미지 경로'
/

comment on column TP_PROMOTION.PRMT_TYPE_CD is '프로모션 유형 코드'
/

comment on column TP_PROMOTION.PRMT_DC_GB_CD is '프로모션 할인 구분 코드'
/

comment on column TP_PROMOTION.PRMT_LOADRATE is '프로모션 부담율'
/

comment on column TP_PROMOTION.PRMT_GOODS_GB_CD is '프로모션 상품 구분 코드'
/

comment on column TP_PROMOTION.PRMT_BRAND_NO is '프로모션 브랜드 번호'
/

comment on column TP_PROMOTION.PRMT_MAIN_EXPS_USE_YN is '프로모션 메인 노출 사용 여부'
/

comment on column TP_PROMOTION.PRMT_MAIN_EXPS_PST is '프로모션 메인 노출 위치'
/

comment on column TP_PROMOTION.PRMT_MAIN_EXPS_SEQ is '프로모션 메인 노출 순서'
/

comment on column TP_PROMOTION.FIRST_BUY_SPC_PRICE is '첫 구매 가격'
/

comment on column TP_PROMOTION.SEO_SEARCH_WORD is 'SEO 검색 태그'
/

comment on column TP_PROMOTION.AGE_CD is '연령 코드'
/

create table TO_ADDED_AMOUNT
(
    ADDED_AMOUNT_NO        NUMBER(16) not null
        constraint IDX_TO_ADDED_AMOUNT_PK
            primary key,
    ORG_ADDED_AMOUNT_NO    NUMBER(16)
        constraint FK_ADDED_AMOUNT_1
            references TO_ADDED_AMOUNT
                on delete set null,
    ORD_NO                 NUMBER(16),
    ORD_DTL_SEQ            NUMBER,
    ADDED_AMOUNT_GB_CD     VARCHAR2(2),
    ADDED_AMOUNT_AMT       NUMBER(20, 2),
    MEMBER_NO              NUMBER,
    PRMT_NO                NUMBER
        constraint FK_ADDED_AMOUNT_2
            references TP_PROMOTION (PRMT_NO),
    ADDED_AMOUNT_BNF_CD    VARCHAR2(4),
    ADDED_AMOUNT_BNF_VALUE NUMBER(20, 2),
    REGR_NO                NUMBER,
    REG_DTTM               DATE,
    UPDR_NO                NUMBER,
    UPD_DTTM               DATE,
    constraint FK_ADDED_AMOUNT_3
        foreign key (ORD_NO, ORD_DTL_SEQ) references TO_ORD_DTL
            on delete set null
)
/

comment on table TO_ADDED_AMOUNT is '부가 비용'
/

comment on column TO_ADDED_AMOUNT.ADDED_AMOUNT_NO is '부가 비용 번호'
/

comment on column TO_ADDED_AMOUNT.ORG_ADDED_AMOUNT_NO is '원본 부가 비용 번호'
/

comment on column TO_ADDED_AMOUNT.ORD_NO is '주문 번호'
/

comment on column TO_ADDED_AMOUNT.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TO_ADDED_AMOUNT.ADDED_AMOUNT_GB_CD is '부가 비용 구분 코드'
/

comment on column TO_ADDED_AMOUNT.ADDED_AMOUNT_AMT is '부가 비용 금액'
/

comment on column TO_ADDED_AMOUNT.MEMBER_NO is '회원 번호'
/

comment on column TO_ADDED_AMOUNT.PRMT_NO is '프로모션 번호'
/

comment on column TO_ADDED_AMOUNT.ADDED_AMOUNT_BNF_CD is '부가 비용 혜택 코드'
/

comment on column TO_ADDED_AMOUNT.ADDED_AMOUNT_BNF_VALUE is '부가 비용 혜택 값'
/

comment on column TO_ADDED_AMOUNT.REGR_NO is '등록자 번호'
/

comment on column TO_ADDED_AMOUNT.REG_DTTM is '등록 일시'
/

comment on column TO_ADDED_AMOUNT.UPDR_NO is '수정자 번호'
/

comment on column TO_ADDED_AMOUNT.UPD_DTTM is '수정 일시'
/

create unique index IDX_TP_PROMOTION_001
    on TP_PROMOTION (PRMT_NO, PRMT_TYPE_CD)
/

create table TS_SELLER
(
    SELLER_NO                NUMBER(19)    not null
        constraint IDX_TS_SELLER_PK
            primary key,
    SITE_NO                  NUMBER(19)    not null
        constraint R_1600
            references TS_SITE,
    SELLER_ID                VARCHAR2(50) default NULL,
    SELLER_NM                VARCHAR2(100) not null,
    PW                       VARCHAR2(300),
    CEO_NM                   VARCHAR2(50),
    BIZ_REG_NO               VARCHAR2(10),
    PAYMENT_ACT_NM           VARCHAR2(50),
    PAYMENT_BANK             VARCHAR2(20),
    PAYMENT_ACT_NO           VARCHAR2(50),
    BSNS_CDTS                VARCHAR2(50),
    ST                       VARCHAR2(50),
    DLGT_TEL                 VARCHAR2(20),
    MOBILE_NO                VARCHAR2(20),
    FAX                      VARCHAR2(20),
    EMAIL                    VARCHAR2(30),
    POST_NO                  VARCHAR2(10),
    ADDR                     VARCHAR2(200),
    ADDR_DTL                 VARCHAR2(200),
    RETADRSS_POST_NO         VARCHAR2(10),
    RETADRSS_ADDR            VARCHAR2(200),
    RETADRSS_DTL_ADDR        VARCHAR2(200),
    TAXBILL_RECV_MAIL        VARCHAR2(30),
    HOMEPAGE_URL             VARCHAR2(500),
    MANAGER_NM               VARCHAR2(50),
    MANAGER_TELNO            VARCHAR2(20),
    MANAGER_MOBILE_NO        VARCHAR2(20),
    MANAGER_POS              VARCHAR2(30),
    MANAGER_EMAIL            VARCHAR2(500),
    COURIER_CD               VARCHAR2(5),
    DLVR_GB                  VARCHAR2(2),
    DLVR_AMT                 NUMBER,
    CHRG_SET_AMT             NUMBER,
    CHRG_DLVR_AMT            NUMBER,
    STATUS_CD                VARCHAR2(2),
    CEO_FILE_PATH            VARCHAR2(300),
    CEO_FILE_NM              VARCHAR2(300),
    CEO_ORG_FILE_NM          VARCHAR2(300),
    BIZ_FILE_PATH            VARCHAR2(300),
    BIZ_FILE_NM              VARCHAR2(300),
    BIZ_ORG_FILE_NM          VARCHAR2(300),
    BK_COPY_FILE_PATH        VARCHAR2(300),
    BK_COPY_FILE_NM          VARCHAR2(300),
    BK_COPY_ORG_FILE_NM      VARCHAR2(300),
    ETC_FILE_PATH            VARCHAR2(300),
    ETC_FILE_NM              VARCHAR2(300),
    ETC_ORG_FILE_NM          VARCHAR2(300),
    DEL_YN                   VARCHAR2(1)  default 'N',
    APRV_DTTM                DATE,
    FARM_INTRO               VARCHAR2(1000),
    REGR_NO                  NUMBER,
    REG_DTTM                 DATE,
    UPDR_NO                  NUMBER,
    UPD_DTTM                 DATE,
    MANAGER_MEMO             VARCHAR2(1000),
    SELLER_CMS_RATE          NUMBER,
    STORE_INQUIRY_GB_CD      VARCHAR2(2),
    STORE_INQUIRY_CONTENT    CLOB,
    REF_FILE_PATH            VARCHAR2(300),
    REF_FILE_NM              VARCHAR2(300),
    REF_ORG_FILE_NM          VARCHAR2(300),
    RECOM_PVD_RATE           NUMBER(20, 2),
    SELLER_SVMN_GB_CD        VARCHAR2(1),
    SELLER_SVMN_AMT          NUMBER(20, 2),
    SELLER_SVMN_MAX_USE_RATE NUMBER(10, 2),
    SELLER_SVMN_DIVIDE_RATE  NUMBER(10, 2),
    SELLER_OFF_DIVIDE_RATE   NUMBER(10, 2),
    SVMN_LOADRATE            NUMBER(10, 2)
)
/

comment on table TS_SELLER is '판매자'
/

comment on column TS_SELLER.SELLER_NO is '판매자 번호'
/

comment on column TS_SELLER.SITE_NO is '사이트 번호'
/

comment on column TS_SELLER.SELLER_ID is '판매자 ID'
/

comment on column TS_SELLER.SELLER_NM is '업체 명'
/

comment on column TS_SELLER.PW is '비밀번호'
/

comment on column TS_SELLER.CEO_NM is '대표자 명'
/

comment on column TS_SELLER.BIZ_REG_NO is '사업자 등록 번호'
/

comment on column TS_SELLER.PAYMENT_ACT_NM is '결제 계좌 명'
/

comment on column TS_SELLER.PAYMENT_BANK is '결제 은행'
/

comment on column TS_SELLER.PAYMENT_ACT_NO is '결제 계좌 번호'
/

comment on column TS_SELLER.BSNS_CDTS is '업태'
/

comment on column TS_SELLER.ST is '업종'
/

comment on column TS_SELLER.DLGT_TEL is '대표 전화'
/

comment on column TS_SELLER.MOBILE_NO is '휴대폰 번호'
/

comment on column TS_SELLER.FAX is '팩스'
/

comment on column TS_SELLER.EMAIL is '이메일'
/

comment on column TS_SELLER.POST_NO is '우편 번호'
/

comment on column TS_SELLER.ADDR is '주소'
/

comment on column TS_SELLER.ADDR_DTL is '주소 상세'
/

comment on column TS_SELLER.RETADRSS_POST_NO is '반품지 우편 번호'
/

comment on column TS_SELLER.RETADRSS_ADDR is '반품지 주소'
/

comment on column TS_SELLER.RETADRSS_DTL_ADDR is '반품지 상세 주소'
/

comment on column TS_SELLER.TAXBILL_RECV_MAIL is '세금계산서 수신 메일'
/

comment on column TS_SELLER.HOMEPAGE_URL is '홈페이지 URL'
/

comment on column TS_SELLER.MANAGER_NM is '담당자 명'
/

comment on column TS_SELLER.MANAGER_TELNO is '담당자 전화번호'
/

comment on column TS_SELLER.MANAGER_MOBILE_NO is '담당자 휴대폰 번호'
/

comment on column TS_SELLER.MANAGER_POS is '담당자 직급'
/

comment on column TS_SELLER.MANAGER_EMAIL is '담당자 이메일'
/

comment on column TS_SELLER.COURIER_CD is '택배사 코드'
/

comment on column TS_SELLER.DLVR_GB is '배송 구분'
/

comment on column TS_SELLER.DLVR_AMT is '배송 금액'
/

comment on column TS_SELLER.CHRG_SET_AMT is '유료 설정 금액'
/

comment on column TS_SELLER.CHRG_DLVR_AMT is '유료 배송 금액'
/

comment on column TS_SELLER.STATUS_CD is '상태 코드'
/

comment on column TS_SELLER.CEO_FILE_PATH is 'CEO 파일 경로'
/

comment on column TS_SELLER.CEO_FILE_NM is 'CEO 파일 명'
/

comment on column TS_SELLER.CEO_ORG_FILE_NM is 'CEO 원본 파일 명'
/

comment on column TS_SELLER.BIZ_FILE_PATH is '사업자 파일 경로'
/

comment on column TS_SELLER.BIZ_FILE_NM is '사업자 파일 명'
/

comment on column TS_SELLER.BIZ_ORG_FILE_NM is '사업자 원본 파일 명'
/

comment on column TS_SELLER.BK_COPY_FILE_PATH is '통장 사본 파일 경로'
/

comment on column TS_SELLER.BK_COPY_FILE_NM is '통장 사본 파일 명'
/

comment on column TS_SELLER.BK_COPY_ORG_FILE_NM is '통장 사본 원본 파일 명'
/

comment on column TS_SELLER.ETC_FILE_PATH is '기타 파일 경로'
/

comment on column TS_SELLER.ETC_FILE_NM is '기타 파일 명'
/

comment on column TS_SELLER.ETC_ORG_FILE_NM is '기타 원본 파일 명'
/

comment on column TS_SELLER.DEL_YN is '삭제 여부'
/

comment on column TS_SELLER.APRV_DTTM is '허가 일시'
/

comment on column TS_SELLER.FARM_INTRO is '농장 INTRO'
/

comment on column TS_SELLER.REGR_NO is '등록자 번호'
/

comment on column TS_SELLER.REG_DTTM is '등록 일시'
/

comment on column TS_SELLER.UPDR_NO is '수정자 번호'
/

comment on column TS_SELLER.UPD_DTTM is '수정 일시'
/

comment on column TS_SELLER.MANAGER_MEMO is '메모'
/

comment on column TS_SELLER.SELLER_CMS_RATE is '판매자 수수료 율'
/

comment on column TS_SELLER.STORE_INQUIRY_GB_CD is '입점 문의 구분 코드'
/

comment on column TS_SELLER.STORE_INQUIRY_CONTENT is '입점 문의 내용'
/

comment on column TS_SELLER.REF_FILE_PATH is '참조 파일 경로'
/

comment on column TS_SELLER.REF_FILE_NM is '참조 파일 명'
/

comment on column TS_SELLER.REF_ORG_FILE_NM is '참조 원본 파일 명'
/

comment on column TS_SELLER.RECOM_PVD_RATE is '추천인 적립 율'
/

comment on column TS_SELLER.SELLER_SVMN_GB_CD is '판매자 적립금 구분 코드'
/

comment on column TS_SELLER.SELLER_SVMN_AMT is '판매자 적립금 금액'
/

comment on column TS_SELLER.SELLER_SVMN_MAX_USE_RATE is '판매자 적립금 최대 사용 율'
/

comment on column TS_SELLER.SELLER_SVMN_DIVIDE_RATE is '판매자 적립금 분담 율'
/

comment on column TS_SELLER.SELLER_OFF_DIVIDE_RATE is '판매자 오프라인포인트 분담 율'
/

create table TS_SELLER_DLVR_POLICY
(
    SELLER_NO              NUMBER(19) not null
        constraint IDX_TS_SELLER_DLVR_POLICY_PK
            primary key
        constraint FK_SELLER_DLVR_POLICY_1
            references TS_SELLER,
    COURI_USE_YN           VARCHAR2(11),
    DIRECT_VISIT_RECPT_YN  VARCHAR2(11),
    DEFAULT_DLVRC_TYPE_CD  VARCHAR2(11),
    DEFAULT_DLVRC          NUMBER,
    DEFAULT_DLVR_MIN_AMT   NUMBER,
    DEFAULT_DLVR_MIN_DLVRC NUMBER,
    DLVR_PAYMENT_KIND_CD   VARCHAR2(11),
    REGR_NO                NUMBER,
    REG_DTTM               DATE,
    UPDR_NO                NUMBER,
    UPD_DTTM               DATE
)
/

comment on table TS_SELLER_DLVR_POLICY is '판매자 배송 정책'
/

comment on column TS_SELLER_DLVR_POLICY.SELLER_NO is '판매자 번호'
/

comment on column TS_SELLER_DLVR_POLICY.COURI_USE_YN is '택배 사용 여부'
/

comment on column TS_SELLER_DLVR_POLICY.DIRECT_VISIT_RECPT_YN is '직접 방문 수령 여부'
/

comment on column TS_SELLER_DLVR_POLICY.DEFAULT_DLVRC_TYPE_CD is '기본 배송비 유형 코드'
/

comment on column TS_SELLER_DLVR_POLICY.DEFAULT_DLVRC is '기본 배송비'
/

comment on column TS_SELLER_DLVR_POLICY.DEFAULT_DLVR_MIN_AMT is '기본 배송 최소 금액'
/

comment on column TS_SELLER_DLVR_POLICY.DEFAULT_DLVR_MIN_DLVRC is '기본 배송 최소 배송비'
/

comment on column TS_SELLER_DLVR_POLICY.DLVR_PAYMENT_KIND_CD is '배송 결제 방식 코드'
/

comment on column TS_SELLER_DLVR_POLICY.REGR_NO is '등록자 번호'
/

comment on column TS_SELLER_DLVR_POLICY.REG_DTTM is '등록 일시'
/

comment on column TS_SELLER_DLVR_POLICY.UPDR_NO is '수정자 번호'
/

comment on column TS_SELLER_DLVR_POLICY.UPD_DTTM is '수정 일시'
/

create table TB_BBS_CMNT
(
    CMNT_SEQ     NUMBER not null,
    LETT_NO      NUMBER not null
        constraint FK_BBS_CMNT_1
            references TB_BBS_LETT,
    CONTENT      CLOB,
    DEL_YN       CHAR,
    BBS_ID       VARCHAR2(50),
    CMNT_SECT_YN VARCHAR2(1),
    REGR_NM      VARCHAR2(50),
    REG_DTTM     DATE,
    REGR_NO      NUMBER,
    UPD_DTTM     DATE,
    UPDR_NO      NUMBER,
    DEL_DTTM     DATE,
    DELR_NO      NUMBER,
    constraint IDX_TB_BBS_CMNT_PK
        primary key (CMNT_SEQ, LETT_NO)
)
/

comment on table TB_BBS_CMNT is '게시판_댓글'
/

comment on column TB_BBS_CMNT.CMNT_SEQ is '댓글 순번'
/

comment on column TB_BBS_CMNT.LETT_NO is '글 번호'
/

comment on column TB_BBS_CMNT.CONTENT is '내용'
/

comment on column TB_BBS_CMNT.DEL_YN is '삭제 여부'
/

comment on column TB_BBS_CMNT.BBS_ID is '게시판 아이디'
/

comment on column TB_BBS_CMNT.CMNT_SECT_YN is '댓글 비밀 여부'
/

comment on column TB_BBS_CMNT.REGR_NM is '등록자 명'
/

comment on column TB_BBS_CMNT.REG_DTTM is '등록 일시'
/

comment on column TB_BBS_CMNT.REGR_NO is '등록자 번호'
/

comment on column TB_BBS_CMNT.UPD_DTTM is '수정 일시'
/

comment on column TB_BBS_CMNT.UPDR_NO is '수정자 번호'
/

comment on column TB_BBS_CMNT.DEL_DTTM is '삭제 일시'
/

comment on column TB_BBS_CMNT.DELR_NO is '삭제자 번호'
/

create index IDX_TB_BBS_CMNT_01
    on TB_BBS_CMNT (REGR_NO)
/

create table TB_MTM_INQUIRY_BBS_LETT
(
    LETT_NO         NUMBER       not null
        constraint IDX_TB_MTM_INQUIRY_BBS_LETT_PK
            primary key,
    BBS_ID          VARCHAR2(50) not null,
    GRP_NO          NUMBER
        constraint FK_BBS_INQUERY_2
            references TB_MTM_INQUIRY_BBS_LETT
                on delete set null,
    SITE_NO         NUMBER(19)   not null,
    INQUIRY_CD      VARCHAR2(10),
    TITLE           VARCHAR2(200),
    CONTENT         CLOB,
    INQ_CNT         NUMBER,
    REPLY_STATUS_YN VARCHAR2(1),
    LETT_LVL        VARCHAR2(10),
    SMS_SEND_YN     VARCHAR2(1),
    EMAIL_SEND_YN   VARCHAR2(1),
    MEMBER_NO       NUMBER,
    SELLER_NO       NUMBER(19)
        constraint R_1605
            references TS_SELLER
                on delete set null,
    REG_DTTM        DATE,
    REGR_NO         NUMBER,
    UPD_DTTM        DATE,
    UPDR_NO         NUMBER,
    DEL_YN          CHAR,
    DELR_NO         NUMBER,
    DEL_DTTM        DATE,
    constraint FK_BBS_INQUERY_1
        foreign key (BBS_ID, SITE_NO) references TB_BBS
)
/

comment on table TB_MTM_INQUIRY_BBS_LETT is '일대일 문의 게시판 글'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.LETT_NO is '글 번호'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.BBS_ID is '게시판 아이디'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.GRP_NO is '그룹 번호'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.SITE_NO is '사이트 번호'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.INQUIRY_CD is '문의 코드'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.TITLE is '제목'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.CONTENT is '내용'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.INQ_CNT is '조회수'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.REPLY_STATUS_YN is '답변 상태 여부'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.LETT_LVL is '글 레벨'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.SMS_SEND_YN is 'SMS 발송 여부'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.EMAIL_SEND_YN is '이메일 발송 여부'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.MEMBER_NO is '회원 번호'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.SELLER_NO is '판매자 번호'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.REG_DTTM is '등록 일시'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.REGR_NO is '등록자 번호'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.UPD_DTTM is '수정 일시'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.UPDR_NO is '수정자 번호'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.DEL_YN is '삭제 여부'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.DELR_NO is '삭제자 번호'
/

comment on column TB_MTM_INQUIRY_BBS_LETT.DEL_DTTM is '삭제 일시'
/

create table TG_GOODS_DSCRT
(
    GOODS_NO       VARCHAR2(16) not null,
    SVC_GB_CD      VARCHAR2(2)  not null,
    CONTENT        CLOB,
    REGR_NO        NUMBER,
    REG_DTTM       DATE,
    UPDR_NO        NUMBER,
    UPD_DTTM       DATE,
    MOBILE_CONTENT CLOB,
    constraint IDX_TG_GOODS_DSCRT_PK
        primary key (GOODS_NO, SVC_GB_CD)
)
/

comment on table TG_GOODS_DSCRT is '상품 설명'
/

comment on column TG_GOODS_DSCRT.GOODS_NO is '상품 번호'
/

comment on column TG_GOODS_DSCRT.SVC_GB_CD is '서비스 구분 코드'
/

comment on column TG_GOODS_DSCRT.CONTENT is '내용'
/

comment on column TG_GOODS_DSCRT.REGR_NO is '등록자 번호'
/

comment on column TG_GOODS_DSCRT.REG_DTTM is '등록 일시'
/

comment on column TG_GOODS_DSCRT.UPDR_NO is '수정자 번호'
/

comment on column TG_GOODS_DSCRT.UPD_DTTM is '수정 일시'
/

comment on column TG_GOODS_DSCRT.MOBILE_CONTENT is '모바일 내용'
/

create table TI_IF_EXEC_LOG
(
    IF_SNO         VARCHAR2(16) not null
        constraint IDX_TI_IF_EXEC_LOG_PK
            primary key,
    IF_NO          VARCHAR2(16)
        constraint FK_IF_EXEC_LOG_1
            references TI_IF_LOG
                on delete set null,
    IF_PGM_NM      VARCHAR2(100),
    START_DTTM     VARCHAR2(14),
    END_DTTM       VARCHAR2(14),
    SUCS_YN        VARCHAR2(1),
    ERR_CD         VARCHAR2(20),
    RESULT_CONTENT VARCHAR2(300),
    EXEC_KEY       VARCHAR2(100),
    EXEC_CONTS     CLOB,
    LOG_FILE_PATH  VARCHAR2(300),
    LOG_FILE_NM    VARCHAR2(50),
    REGR_NO        NUMBER,
    REG_DTTM       DATE,
    UPDR_NO        NUMBER,
    UPD_DTTM       DATE
)
/

comment on table TI_IF_EXEC_LOG is '연계 실행 로그'
/

comment on column TI_IF_EXEC_LOG.IF_SNO is '연계 일련번호'
/

comment on column TI_IF_EXEC_LOG.IF_NO is '연계 번호'
/

comment on column TI_IF_EXEC_LOG.IF_PGM_NM is '연계 프로그램 명'
/

comment on column TI_IF_EXEC_LOG.START_DTTM is '시작 일시'
/

comment on column TI_IF_EXEC_LOG.END_DTTM is '종료 일시'
/

comment on column TI_IF_EXEC_LOG.SUCS_YN is '성공 여부'
/

comment on column TI_IF_EXEC_LOG.ERR_CD is '에러 코드'
/

comment on column TI_IF_EXEC_LOG.RESULT_CONTENT is '결과 내용'
/

comment on column TI_IF_EXEC_LOG.EXEC_KEY is '실행 KEY'
/

comment on column TI_IF_EXEC_LOG.EXEC_CONTS is '실행 컨텐츠'
/

comment on column TI_IF_EXEC_LOG.LOG_FILE_PATH is '로그 파일 경로'
/

comment on column TI_IF_EXEC_LOG.LOG_FILE_NM is '로그 파일 명'
/

comment on column TI_IF_EXEC_LOG.REGR_NO is '등록자 번호'
/

comment on column TI_IF_EXEC_LOG.REG_DTTM is '등록 일시'
/

comment on column TI_IF_EXEC_LOG.UPDR_NO is '수정자 번호'
/

comment on column TI_IF_EXEC_LOG.UPD_DTTM is '수정 일시'
/

create index IDX_TI_IF_EXEC_LOG_01
    on TI_IF_EXEC_LOG (IF_NO, EXEC_KEY)
/

create table TO_CLAIM
(
    CLAIM_NO          NUMBER     not null,
    ORD_NO            NUMBER(16) not null,
    ORD_DTL_SEQ       NUMBER     not null,
    RETURN_CD         VARCHAR2(2),
    CLAIM_CD          VARCHAR2(2),
    CLAIM_QTT         NUMBER,
    CLAIM_ACCEPT_DTTM DATE,
    CLAIM_CMPLT_DTTM  DATE,
    CLAIM_CANCEL_DTTM DATE,
    CLAIM_REASON_CD   VARCHAR2(2),
    CLAIM_DTL_REASON  VARCHAR2(2000),
    CLAIM_MEMO        VARCHAR2(2000),
    REGR_NO           NUMBER,
    REG_DTTM          DATE,
    UPDR_NO           NUMBER,
    UPD_DTTM          DATE,
    CLAIM_CONTENT_CHK CLOB,
    constraint IDX_TO_CLAIM_PK
        primary key (CLAIM_NO, ORD_NO, ORD_DTL_SEQ),
    constraint FK_TO_CLAIM_1
        foreign key (ORD_NO, ORD_DTL_SEQ) references TO_ORD_DTL
)
/

comment on table TO_CLAIM is '클레임'
/

comment on column TO_CLAIM.CLAIM_NO is '클레임 번호'
/

comment on column TO_CLAIM.ORD_NO is '주문 번호'
/

comment on column TO_CLAIM.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TO_CLAIM.RETURN_CD is '반품 코드'
/

comment on column TO_CLAIM.CLAIM_CD is '클레임 코드'
/

comment on column TO_CLAIM.CLAIM_QTT is '클레임 수량'
/

comment on column TO_CLAIM.CLAIM_ACCEPT_DTTM is '클레임 접수 일시'
/

comment on column TO_CLAIM.CLAIM_CMPLT_DTTM is '클레임 완료 일시'
/

comment on column TO_CLAIM.CLAIM_CANCEL_DTTM is '클레임 취소 일시'
/

comment on column TO_CLAIM.CLAIM_REASON_CD is '클레임 사유 코드'
/

comment on column TO_CLAIM.CLAIM_DTL_REASON is '클레임 상세 사유'
/

comment on column TO_CLAIM.CLAIM_MEMO is '클레임 메모'
/

comment on column TO_CLAIM.REGR_NO is '등록자 번호'
/

comment on column TO_CLAIM.REG_DTTM is '등록 일시'
/

comment on column TO_CLAIM.UPDR_NO is '수정자 번호'
/

comment on column TO_CLAIM.UPD_DTTM is '수정 일시'
/

comment on column TO_CLAIM.CLAIM_CONTENT_CHK is '물류 반품 확인 내용'
/

create table TO_CLAIM_HIST
(
    CLAIM_HIST_SEQ NUMBER default NULL not null
        constraint IDX_TO_CLAIM_HIST_PK
            primary key,
    CLAIM_NO       NUMBER              not null,
    ORD_NO         NUMBER(16)          not null,
    ORD_DTL_SEQ    NUMBER              not null,
    RETURN_CD      VARCHAR2(2),
    CLAIM_CD       VARCHAR2(2),
    REGR_NO        NUMBER,
    REG_DTTM       DATE,
    UPDR_NO        NUMBER,
    constraint FK_TO_CLAIM_HIST_1
        foreign key (CLAIM_NO, ORD_NO, ORD_DTL_SEQ) references TO_CLAIM
)
/

comment on table TO_CLAIM_HIST is '클레임 이력'
/

comment on column TO_CLAIM_HIST.CLAIM_HIST_SEQ is '클레임 이력 순번'
/

comment on column TO_CLAIM_HIST.CLAIM_NO is '클레임 번호'
/

comment on column TO_CLAIM_HIST.ORD_NO is '주문 번호'
/

comment on column TO_CLAIM_HIST.ORD_DTL_SEQ is '주문 상세 순번'
/

comment on column TO_CLAIM_HIST.RETURN_CD is '반품 코드'
/

comment on column TO_CLAIM_HIST.CLAIM_CD is '클레임 코드'
/

comment on column TO_CLAIM_HIST.REGR_NO is '등록자 번호'
/

comment on column TO_CLAIM_HIST.REG_DTTM is '등록 일시'
/

comment on column TO_CLAIM_HIST.UPDR_NO is '수정자 번호'
/

create table TD_ORG_TMPL
(
    TMPL_NO            NUMBER(16) not null,
    SITE_NO            NUMBER(19) not null,
    SKIN_NO            NUMBER(16) not null,
    TMPL_NM            VARCHAR2(100),
    TMPL_GB_CD         VARCHAR2(2),
    TMPL_SCREEN_GRP_CD VARCHAR2(3),
    TMPL_SCREEN_CD     VARCHAR2(4),
    TMPL_AREA_CD       VARCHAR2(2),
    TMPL_CD            VARCHAR2(10),
    SCREEN_NM          VARCHAR2(255),
    FILE_NM            VARCHAR2(255),
    FILE_PATH          VARCHAR2(255),
    SCRIPT_NM          VARCHAR2(255),
    SCRIPT_PATH        VARCHAR2(255),
    CSS_NM             VARCHAR2(255),
    CSS_PATH           VARCHAR2(255),
    WIDTH_LENGTH       NUMBER,
    TMPL_CNT           NUMBER,
    DISP_YN            VARCHAR2(1),
    CONTENT            CLOB,
    REG_DTTM           DATE,
    REGR_NO            NUMBER,
    UPD_DTTM           DATE,
    UPDR_NO            NUMBER
)
/

comment on table TD_ORG_TMPL is '원본 템플릿'
/

comment on column TD_ORG_TMPL.TMPL_NO is '템플릿 번호'
/

comment on column TD_ORG_TMPL.SITE_NO is '사이트 번호'
/

comment on column TD_ORG_TMPL.SKIN_NO is '스킨 번호'
/

comment on column TD_ORG_TMPL.TMPL_NM is '템플릿 명'
/

comment on column TD_ORG_TMPL.TMPL_GB_CD is '템플릿 구분 코드'
/

comment on column TD_ORG_TMPL.TMPL_SCREEN_GRP_CD is '템플릿 화면 그룹 코드'
/

comment on column TD_ORG_TMPL.TMPL_SCREEN_CD is '템플릿 화면 코드'
/

comment on column TD_ORG_TMPL.TMPL_AREA_CD is '템플릿 영역 코드'
/

comment on column TD_ORG_TMPL.TMPL_CD is '템플릿 코드'
/

comment on column TD_ORG_TMPL.SCREEN_NM is '화면 명'
/

comment on column TD_ORG_TMPL.FILE_NM is '파일 명'
/

comment on column TD_ORG_TMPL.FILE_PATH is '파일 경로'
/

comment on column TD_ORG_TMPL.SCRIPT_NM is 'SCRIPT 명'
/

comment on column TD_ORG_TMPL.SCRIPT_PATH is 'SCRIPT 경로'
/

comment on column TD_ORG_TMPL.CSS_NM is 'CSS 명'
/

comment on column TD_ORG_TMPL.CSS_PATH is 'CSS 경로'
/

comment on column TD_ORG_TMPL.WIDTH_LENGTH is '가로 길이'
/

comment on column TD_ORG_TMPL.TMPL_CNT is '템플릿 수'
/

comment on column TD_ORG_TMPL.DISP_YN is '전시 여부'
/

comment on column TD_ORG_TMPL.CONTENT is '내용'
/

comment on column TD_ORG_TMPL.REG_DTTM is '등록 일시'
/

comment on column TD_ORG_TMPL.REGR_NO is '등록자 번호'
/

comment on column TD_ORG_TMPL.UPD_DTTM is '수정 일시'
/

comment on column TD_ORG_TMPL.UPDR_NO is '수정자 번호'
/

create table TA_ACCESS_LOG
(
    SITE_NO     NUMBER(19)   not null,
    ACCESS_DTTM TIMESTAMP(6) not null,
    JSESSIONID  VARCHAR2(50),
    IP          VARCHAR2(15),
    DEVICE_TYPE VARCHAR2(1),
    REFERER     VARCHAR2(30) default NULL,
    URL         CLOB,
    MEMBER_NO   VARCHAR2(50)
)
/

comment on table TA_ACCESS_LOG is '공통 접속 로그'
/

comment on column TA_ACCESS_LOG.SITE_NO is '사이트 번호'
/

comment on column TA_ACCESS_LOG.ACCESS_DTTM is '접속 시간'
/

comment on column TA_ACCESS_LOG.JSESSIONID is 'J세션아이디'
/

comment on column TA_ACCESS_LOG.IP is 'IP'
/

comment on column TA_ACCESS_LOG.DEVICE_TYPE is '장치 타입'
/

comment on column TA_ACCESS_LOG.REFERER is '레퍼러'
/

comment on column TA_ACCESS_LOG.URL is 'URL'
/

comment on column TA_ACCESS_LOG.MEMBER_NO is '회원 번호'
/

create index IDX_TA_ACCESS_LOG_002
    on TA_ACCESS_LOG (JSESSIONID, SITE_NO, ACCESS_DTTM)
/

create index IDX_TA_ACCESS_LOG_001
    on TA_ACCESS_LOG (SITE_NO, JSESSIONID, MEMBER_NO, ACCESS_DTTM)
/

create index IDX_TA_ACCESS_LOG_003
    on TA_ACCESS_LOG (SITE_NO, ACCESS_DTTM, DEVICE_TYPE)
/

create index IDX_TA_ACCESS_LOG_004
    on TA_ACCESS_LOG (JSESSIONID, ACCESS_DTTM)
/

create index IDX_TA_ACCESS_LOG_005
    on TA_ACCESS_LOG (ACCESS_DTTM, SITE_NO)
/

create index IDX_TA_ACCESS_LOG_006
    on TA_ACCESS_LOG (ACCESS_DTTM)
/

create table TD_ATCH_TMPL
(
    TMPL_NO            NUMBER(16) not null,
    SITE_NO            NUMBER(19) not null,
    SKIN_NO            NUMBER(16) not null,
    TMPL_NM            VARCHAR2(100),
    TMPL_GB_CD         VARCHAR2(2),
    TMPL_SCREEN_GRP_CD VARCHAR2(3),
    TMPL_SCREEN_CD     VARCHAR2(4),
    TMPL_AREA_CD       VARCHAR2(2),
    TMPL_CD            VARCHAR2(10),
    SCREEN_NM          VARCHAR2(255),
    FILE_NM            VARCHAR2(255),
    FILE_PATH          VARCHAR2(255),
    SCRIPT_NM          VARCHAR2(255),
    SCRIPT_PATH        VARCHAR2(255),
    CSS_NM             VARCHAR2(255),
    CSS_PATH           VARCHAR2(255),
    WIDTH_LENGTH       NUMBER,
    TMPL_CNT           NUMBER,
    DISP_YN            VARCHAR2(1),
    CONTENT            CLOB,
    REG_DTTM           DATE,
    REGR_NO            NUMBER,
    UPD_DTTM           DATE,
    UPDR_NO            NUMBER
)
/

comment on table TD_ATCH_TMPL is '첨부 템플릿'
/

comment on column TD_ATCH_TMPL.TMPL_NO is '템플릿 번호'
/

comment on column TD_ATCH_TMPL.SITE_NO is '사이트 번호'
/

comment on column TD_ATCH_TMPL.SKIN_NO is '스킨 번호'
/

comment on column TD_ATCH_TMPL.TMPL_NM is '템플릿 명'
/

comment on column TD_ATCH_TMPL.TMPL_GB_CD is '템플릿 구분 코드'
/

comment on column TD_ATCH_TMPL.TMPL_SCREEN_GRP_CD is '템플릿 화면 그룹 코드'
/

comment on column TD_ATCH_TMPL.TMPL_SCREEN_CD is '템플릿 화면 코드'
/

comment on column TD_ATCH_TMPL.TMPL_AREA_CD is '템플릿 영역 코드'
/

comment on column TD_ATCH_TMPL.TMPL_CD is '템플릿 코드'
/

comment on column TD_ATCH_TMPL.SCREEN_NM is '화면 명'
/

comment on column TD_ATCH_TMPL.FILE_NM is '파일 명'
/

comment on column TD_ATCH_TMPL.FILE_PATH is '파일 경로'
/

comment on column TD_ATCH_TMPL.SCRIPT_NM is 'SCRIPT 명'
/

comment on column TD_ATCH_TMPL.SCRIPT_PATH is 'SCRIPT 경로'
/

comment on column TD_ATCH_TMPL.CSS_NM is 'CSS 명'
/

comment on column TD_ATCH_TMPL.CSS_PATH is 'CSS 경로'
/

comment on column TD_ATCH_TMPL.WIDTH_LENGTH is '가로 길이'
/

comment on column TD_ATCH_TMPL.TMPL_CNT is '템플릿 수'
/

comment on column TD_ATCH_TMPL.DISP_YN is '전시 여부'
/

comment on column TD_ATCH_TMPL.CONTENT is '내용'
/

comment on column TD_ATCH_TMPL.REG_DTTM is '등록 일시'
/

comment on column TD_ATCH_TMPL.REGR_NO is '등록자 번호'
/

comment on column TD_ATCH_TMPL.UPD_DTTM is '수정 일시'
/

comment on column TD_ATCH_TMPL.UPDR_NO is '수정자 번호'
/

create table TOAD_PLAN_TABLE
(
    STATEMENT_ID      VARCHAR2(30),
    PLAN_ID           NUMBER,
    TIMESTAMP         DATE,
    REMARKS           VARCHAR2(4000),
    OPERATION         VARCHAR2(30),
    OPTIONS           VARCHAR2(255),
    OBJECT_NODE       VARCHAR2(128),
    OBJECT_OWNER      VARCHAR2(30),
    OBJECT_NAME       VARCHAR2(30),
    OBJECT_ALIAS      VARCHAR2(65),
    OBJECT_INSTANCE   NUMBER,
    OBJECT_TYPE       VARCHAR2(30),
    OPTIMIZER         VARCHAR2(255),
    SEARCH_COLUMNS    NUMBER,
    ID                NUMBER,
    PARENT_ID         NUMBER,
    DEPTH             NUMBER,
    POSITION          NUMBER,
    COST              NUMBER,
    CARDINALITY       NUMBER,
    BYTES             NUMBER,
    OTHER_TAG         VARCHAR2(255),
    PARTITION_START   VARCHAR2(255),
    PARTITION_STOP    VARCHAR2(255),
    PARTITION_ID      NUMBER,
    OTHER             LONG,
    DISTRIBUTION      VARCHAR2(30),
    CPU_COST          NUMBER,
    IO_COST           NUMBER,
    TEMP_SPACE        NUMBER,
    ACCESS_PREDICATES VARCHAR2(4000),
    FILTER_PREDICATES VARCHAR2(4000),
    PROJECTION        VARCHAR2(4000),
    TIME              NUMBER,
    QBLOCK_NAME       VARCHAR2(30),
    OTHER_XML         CLOB
)
/

create table TI_GOODS_CLCT_IF
(
    IF_SNO           VARCHAR2(16)  not null
        constraint IDX_TI_GOODS_CLCT_IF_PK
            primary key,
    IF_ID            VARCHAR2(16),
    IF_NO            VARCHAR2(16),
    SITE_NO          NUMBER,
    SELLER_NO        NUMBER,
    SELLER_LOGIN_ID  VARCHAR2(300),
    SBN_GOODS_NO     VARCHAR2(16),
    GOODS_NO         VARCHAR2(16),
    ITEM_NO          VARCHAR2(18),
    ATTR_VER         VARCHAR2(5),
    GOODS_NM         VARCHAR2(500) not null,
    ITEM_NM          VARCHAR2(500),
    MODEL_NM         VARCHAR2(500),
    BRAND_NO         NUMBER,
    CTG_NO_1         NUMBER,
    CTG_NO_2         NUMBER,
    CTG_NO_3         NUMBER,
    CTG_NO_4         NUMBER,
    SRCH_WORD        VARCHAR2(4000),
    MMFT             VARCHAR2(1000),
    HABITAT          VARCHAR2(1000),
    SALE_STATUS_CD   VARCHAR2(10)  not null,
    TAX_GB_CD        VARCHAR2(10),
    DLVRC_GB_CD      VARCHAR2(10),
    DELV_EXPECT_DAYS NUMBER,
    GOODS_EACH_DLVRC VARCHAR2(10),
    SUPPLY_PRICE     VARCHAR2(10),
    SALE_PRICE       VARCHAR2(10),
    CUSTOMER_PRICE   VARCHAR2(10),
    CHAR_1_NM        VARCHAR2(500),
    CHAR_1_VAL       VARCHAR2(4000),
    CHAR_2_NM        VARCHAR2(500),
    CHAR_2_VAL       VARCHAR2(4000),
    PROP1_CD         VARCHAR2(3),
    PROP_VAL1        VARCHAR2(500),
    PROP_VAL2        VARCHAR2(11),
    PROP_VAL3        VARCHAR2(500),
    PROP_VAL4        VARCHAR2(500),
    PROP_VAL5        VARCHAR2(500),
    PROP_VAL6        VARCHAR2(500),
    PROP_VAL7        VARCHAR2(500),
    PROP_VAL8        VARCHAR2(500),
    PROP_VAL9        VARCHAR2(500),
    PROP_VAL10       VARCHAR2(500),
    PROP_VAL11       VARCHAR2(500),
    PROP_VAL12       VARCHAR2(500),
    PROP_VAL13       VARCHAR2(500),
    PROP_VAL14       VARCHAR2(500),
    PROP_VAL15       VARCHAR2(500),
    PROP_VAL16       VARCHAR2(500),
    PROP_VAL17       VARCHAR2(500),
    PROP_VAL18       VARCHAR2(500),
    PROP_VAL19       VARCHAR2(500),
    PROP_VAL20       VARCHAR2(500),
    PROP_VAL21       VARCHAR2(500),
    PROP_VAL22       VARCHAR2(500),
    PROP_VAL23       VARCHAR2(500),
    PROP_VAL24       VARCHAR2(500),
    PROP_VAL25       VARCHAR2(500),
    PROP_VAL26       VARCHAR2(500),
    PROP_VAL27       VARCHAR2(500),
    PROP_VAL28       VARCHAR2(500),
    DLGT_IMG_PATH    VARCHAR2(500),
    IMG_PATH1        VARCHAR2(500),
    IMG_PATH2        VARCHAR2(500),
    IMG_PATH3        VARCHAR2(500),
    IMG_PATH4        VARCHAR2(500),
    IMG_PATH5        VARCHAR2(500),
    GOODS_DTL_DSCRT  CLOB,
    REGR_NO          NUMBER,
    REG_DTTM         DATE,
    UPDR_NO          NUMBER,
    UPD_DTTM         DATE
)
/

comment on table TI_GOODS_CLCT_IF is '상품 수집 연계'
/

comment on column TI_GOODS_CLCT_IF.IF_SNO is '연계 일련번호'
/

comment on column TI_GOODS_CLCT_IF.IF_ID is '연계 ID'
/

comment on column TI_GOODS_CLCT_IF.IF_NO is '연계 번호'
/

comment on column TI_GOODS_CLCT_IF.SITE_NO is '사이트 번호'
/

comment on column TI_GOODS_CLCT_IF.SELLER_NO is '판매자 번호'
/

comment on column TI_GOODS_CLCT_IF.SELLER_LOGIN_ID is '판매자 로그인 ID'
/

comment on column TI_GOODS_CLCT_IF.SBN_GOODS_NO is '사방넷 상품 번호'
/

comment on column TI_GOODS_CLCT_IF.GOODS_NO is '상품 번호'
/

comment on column TI_GOODS_CLCT_IF.ITEM_NO is '단품 번호'
/

comment on column TI_GOODS_CLCT_IF.ATTR_VER is '속성 VER'
/

comment on column TI_GOODS_CLCT_IF.GOODS_NM is '상품 명'
/

comment on column TI_GOODS_CLCT_IF.ITEM_NM is '단품 명'
/

comment on column TI_GOODS_CLCT_IF.MODEL_NM is '모델 명'
/

comment on column TI_GOODS_CLCT_IF.BRAND_NO is '브랜드 번호'
/

comment on column TI_GOODS_CLCT_IF.CTG_NO_1 is '카테고리 번호 1'
/

comment on column TI_GOODS_CLCT_IF.CTG_NO_2 is '카테고리 번호 2'
/

comment on column TI_GOODS_CLCT_IF.CTG_NO_3 is '카테고리 번호 3'
/

comment on column TI_GOODS_CLCT_IF.CTG_NO_4 is '카테고리 번호 4'
/

comment on column TI_GOODS_CLCT_IF.SRCH_WORD is '검색어'
/

comment on column TI_GOODS_CLCT_IF.MMFT is '제조사'
/

comment on column TI_GOODS_CLCT_IF.HABITAT is '원산지'
/

comment on column TI_GOODS_CLCT_IF.SALE_STATUS_CD is '판매 상태 코드'
/

comment on column TI_GOODS_CLCT_IF.TAX_GB_CD is '과세 구분 코드'
/

comment on column TI_GOODS_CLCT_IF.DLVRC_GB_CD is '배송비 구분 코드'
/

comment on column TI_GOODS_CLCT_IF.DELV_EXPECT_DAYS is '예상 배송 소요일'
/

comment on column TI_GOODS_CLCT_IF.GOODS_EACH_DLVRC is '상품 별 배송비'
/

comment on column TI_GOODS_CLCT_IF.SUPPLY_PRICE is '공급 가격'
/

comment on column TI_GOODS_CLCT_IF.SALE_PRICE is '판매 가격'
/

comment on column TI_GOODS_CLCT_IF.CUSTOMER_PRICE is '소비자 가격'
/

comment on column TI_GOODS_CLCT_IF.CHAR_1_NM is '옵션 제목1'
/

comment on column TI_GOODS_CLCT_IF.CHAR_1_VAL is '옵션 상세명칭1'
/

comment on column TI_GOODS_CLCT_IF.CHAR_2_NM is '옵션 제목2'
/

comment on column TI_GOODS_CLCT_IF.CHAR_2_VAL is '옵션 상세명칭2'
/

comment on column TI_GOODS_CLCT_IF.PROP1_CD is '속성 분류 코드'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL1 is '속성 값1'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL2 is '속성 값2'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL3 is '속성 값3'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL4 is '속성 값4'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL5 is '속성 값5'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL6 is '속성 값6'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL7 is '속성 값7'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL8 is '속성 값8'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL9 is '속성 값9'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL10 is '속성 값10'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL11 is '속성 값11'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL12 is '속성 값12'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL13 is '속성 값13'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL14 is '속성 값14'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL15 is '속성 값15'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL16 is '속성 값16'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL17 is '속성 값17'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL18 is '속성 값18'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL19 is '속성 값19'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL20 is '속성 값20'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL21 is '속성 값21'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL22 is '속성 값22'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL23 is '속성 값23'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL24 is '속성 값24'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL25 is '속성 값25'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL26 is '속성 값26'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL27 is '속성 값27'
/

comment on column TI_GOODS_CLCT_IF.PROP_VAL28 is '속성 값28'
/

comment on column TI_GOODS_CLCT_IF.DLGT_IMG_PATH is '대표 이미지 경로'
/

comment on column TI_GOODS_CLCT_IF.IMG_PATH1 is '이미지 경로1'
/

comment on column TI_GOODS_CLCT_IF.IMG_PATH2 is '이미지 경로2'
/

comment on column TI_GOODS_CLCT_IF.IMG_PATH3 is '이미지 경로3'
/

comment on column TI_GOODS_CLCT_IF.IMG_PATH4 is '이미지 경로4'
/

comment on column TI_GOODS_CLCT_IF.IMG_PATH5 is '이미지 경로5'
/

comment on column TI_GOODS_CLCT_IF.GOODS_DTL_DSCRT is '상품 상세 설명'
/

comment on column TI_GOODS_CLCT_IF.REGR_NO is '등록자 번호'
/

comment on column TI_GOODS_CLCT_IF.REG_DTTM is '등록 일시'
/

comment on column TI_GOODS_CLCT_IF.UPDR_NO is '수정자 번호'
/

comment on column TI_GOODS_CLCT_IF.UPD_DTTM is '수정 일시'
/

create table SMS_MSG_LOG_202001
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202001_1
    on SMS_MSG_LOG_202001 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202001_2
    on SMS_MSG_LOG_202001 (PHONE)
/

create table MMS_MSG_LOG_202001
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202001_1
    on MMS_MSG_LOG_202001 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202001_2
    on MMS_MSG_LOG_202001 (PHONE)
/

create table SMS_MSG_LOG_202003
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202003_1
    on SMS_MSG_LOG_202003 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202003_2
    on SMS_MSG_LOG_202003 (PHONE)
/

create table MMS_MSG_LOG_202003
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202003_1
    on MMS_MSG_LOG_202003 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202003_2
    on MMS_MSG_LOG_202003 (PHONE)
/

create table SMS_MSG_LOG_202004
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202004_1
    on SMS_MSG_LOG_202004 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202004_2
    on SMS_MSG_LOG_202004 (PHONE)
/

create table MMS_MSG_LOG_202004
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202004_1
    on MMS_MSG_LOG_202004 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202004_2
    on MMS_MSG_LOG_202004 (PHONE)
/

create table TG_GOODS_TEMP
(
    GOODS_NO        VARCHAR2(16) not null,
    SEO_SEARCH_WORD VARCHAR2(4000)
)
/

create table SMS_MSG_LOG_202005
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202005_1
    on SMS_MSG_LOG_202005 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202005_2
    on SMS_MSG_LOG_202005 (PHONE)
/

create table MMS_MSG_LOG_202005
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202005_1
    on MMS_MSG_LOG_202005 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202005_2
    on MMS_MSG_LOG_202005 (PHONE)
/

create table SMS_MSG_LOG_202006
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202006_1
    on SMS_MSG_LOG_202006 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202006_2
    on SMS_MSG_LOG_202006 (PHONE)
/

create table MMS_MSG_LOG_202006
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202006_1
    on MMS_MSG_LOG_202006 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202006_2
    on MMS_MSG_LOG_202006 (PHONE)
/

create table AM010TBL
(
    STR_CODE          VARCHAR2(4)  not null,
    STR_NAME          VARCHAR2(60),
    POST_NO           CHAR(6),
    ADDR1             VARCHAR2(100),
    ADDR2             VARCHAR2(100),
    TEL_NO            VARCHAR2(14),
    FAX_NO            VARCHAR2(14),
    EMAIL_NO          VARCHAR2(40),
    NM_STAFF          VARCHAR2(12),
    HAND_PHONE        VARCHAR2(14),
    STR_AREA          NUMBER(7, 2) not null,
    BUSI_FLG          CHAR,
    BUSI_NO           VARCHAR2(13),
    STR_LNAME         VARCHAR2(60),
    OWN_NAME          VARCHAR2(20),
    NM_BTYPE          VARCHAR2(20),
    NM_BITEM          VARCHAR2(20),
    CHAIN_TYPE        CHAR(2),
    EMP_NO            CHAR(4),
    LOGIN_FLG         CHAR,
    CD_AGENT_PASSWORD VARCHAR2(8),
    END_IND           CHAR         not null,
    OPEN_DATE         DATE,
    END_DATE          DATE,
    REASON_CODE       CHAR(2),
    STR_TYPE          CHAR,
    ZONE2_CODE        NVARCHAR2(4),
    NM_MEMO           VARCHAR2(255),
    PAY_CON           CHAR,
    PAY_TYPE          CHAR(2),
    BANK_CODE         CHAR(2),
    BANK_ACNO         VARCHAR2(20),
    BANK_ACOWN        VARCHAR2(50),
    CONT_DATE         DATE,
    EXP_DATE          DATE,
    IDATE             DATE         not null,
    IEMP_NO           CHAR(4)      not null,
    UDATE             DATE,
    UEMP_NO           CHAR(4),
    MD_ZONE           CHAR(2),
    CON_AMT           NUMBER(10),
    CHAIN_GBN         CHAR,
    CHAIN_GBN2        CHAR,
    TRANSFER_DATE     DATE,
    CHAIN_GBN3        VARCHAR2(1),
    CENTER_CODE       VARCHAR2(4),
    CHAIN_GBN4        VARCHAR2(1),
    DUZON_CD          VARCHAR2(40),
    SLIP_YN           VARCHAR2(1),
    CONSULT_EMP       VARCHAR2(4),
    CENTER_CODE2      VARCHAR2(4),
    ADDRESS           VARCHAR2(200),
    JI_NM_F           VARCHAR2(200),
    ADDR_JI2          VARCHAR2(100),
    RODE_NM_F         VARCHAR2(200),
    ONLY_NEW_SALE     VARCHAR2(1),
    INPUT_ID          VARCHAR2(20),
    INPUT_DATE        DATE,
    CNG_ID            VARCHAR2(20),
    CNG_DATE          DATE,
    POSTNO_01         VARCHAR2(5),
    STR_CODE_GB       VARCHAR2(1),
    STR_CODE_YN       VARCHAR2(1),
    STR_CODE_NO       VARCHAR2(10),
    STR_CODE_NO2      VARCHAR2(10),
    LAT_NO            NUMBER(25, 20),
    LNG_NO            NUMBER(25, 20),
    D_SHOP_O_DIV      CHAR,
    D_SHOP_P_DIV      CHAR(2),
    D_SHOP_M_DIV      CHAR(2),
    D_SHOP_B_DIV      NVARCHAR2(4),
    D_YN              CHAR,
    D_SALE_YN         CHAR,
    D_ORDER_YN        CHAR,
    D_RX_ORDER_YN     CHAR,
    D_DELIVERY_YN     CHAR,
    D_SALE_COUNT_YN   CHAR,
    D_CUST_COUNT_YN   CHAR,
    D_SHOP_COUNT_YN   CHAR,
    D_SHOP_NO_YN      CHAR,
    D_SMS_YN          CHAR,
    KKO_ID            VARCHAR2(60),
    KKO_PFKEY         VARCHAR2(50),
    MALL_YN           VARCHAR2(1),
    STR_NAME_ENG      VARCHAR2(100),
    ADDR1_ENG         VARCHAR2(100),
    ADDR2_ENG         VARCHAR2(100)
)
/

comment on table AM010TBL is '다비치 매장정보'
/

comment on column AM010TBL.STR_CODE is '매장 [매출처 가맹점:0001-4999]'
/

comment on column AM010TBL.STR_NAME is '가맹점명 [단축점포명]'
/

comment on column AM010TBL.POST_NO is '우편번호 [am603tbl]'
/

comment on column AM010TBL.ADDR1 is '주소 [사업자등록증]'
/

comment on column AM010TBL.ADDR2 is '번지 [사업자등록증]'
/

comment on column AM010TBL.TEL_NO is '전화번호'
/

comment on column AM010TBL.FAX_NO is '팩스번호'
/

comment on column AM010TBL.EMAIL_NO is '이메일'
/

comment on column AM010TBL.NM_STAFF is '매장담당자'
/

comment on column AM010TBL.HAND_PHONE is '휴대폰'
/

comment on column AM010TBL.STR_AREA is '매장면적 [단위:평(리뉴얼작업완료:1,미완료:0)]'
/

comment on column AM010TBL.BUSI_FLG is '사업자구분 [통합122(0:개인,1:법인사업,2:개인사업)]'
/

comment on column AM010TBL.BUSI_NO is '사업자번호'
/

comment on column AM010TBL.STR_LNAME is '상호명 [사업자등록증의 상호명]'
/

comment on column AM010TBL.OWN_NAME is '대표자 [체인점주명]'
/

comment on column AM010TBL.NM_BTYPE is '업태'
/

comment on column AM010TBL.NM_BITEM is '종목'
/

comment on column AM010TBL.CHAIN_TYPE is '가맹형태 [통합109(00:직영,01:특정,02:임대을,03:임대갑,04:위탁,10:가맹,99:기타]'
/

comment on column AM010TBL.EMP_NO is '영업담당자'
/

comment on column AM010TBL.LOGIN_FLG is '협력업체 납품등록(1:허용, 0:불가)]'
/

comment on column AM010TBL.CD_AGENT_PASSWORD is '비밀번호 [웹로긴시 디폴트 가맹점 번호] - 사용안함'
/

comment on column AM010TBL.END_IND is '거래구분 [통합115(1:거래, 0:중지)]'
/

comment on column AM010TBL.OPEN_DATE is '오픈일'
/

comment on column AM010TBL.END_DATE is '거래중지일'
/

comment on column AM010TBL.REASON_CODE is '거래중지사유 [통합120]'
/

comment on column AM010TBL.STR_TYPE is '매출처구분 [통합116] - 사용안함'
/

comment on column AM010TBL.ZONE2_CODE is '지역코드 [am012tbl.zone2_code]'
/

comment on column AM010TBL.NM_MEMO is '메모'
/

comment on column AM010TBL.PAY_CON is '결재조건 [통합111]'
/

comment on column AM010TBL.PAY_TYPE is '지급조건 [통합005]'
/

comment on column AM010TBL.BANK_CODE is '은행코드 [통합112]'
/

comment on column AM010TBL.BANK_ACNO is '결제계좌번호'
/

comment on column AM010TBL.BANK_ACOWN is '예금주'
/

comment on column AM010TBL.CONT_DATE is '계약일'
/

comment on column AM010TBL.EXP_DATE is '계약만료일'
/

comment on column AM010TBL.IDATE is '입력일시'
/

comment on column AM010TBL.IEMP_NO is '입력사원'
/

comment on column AM010TBL.UDATE is '수정일시'
/

comment on column AM010TBL.UEMP_NO is '수정사원'
/

comment on column AM010TBL.MD_ZONE is '지역 [통합239] - 사용안함'
/

comment on column AM010TBL.CON_AMT is '관리비 - 사용안함'
/

comment on column AM010TBL.CHAIN_GBN is '0:다비치, 1:관계사, 2:트레이닝, 3:청력센터, 4.콘택트전용샵, 5.로드샵'
/

comment on column AM010TBL.CHAIN_GBN2 is '0:일반, 1:관리점'
/

comment on column AM010TBL.TRANSFER_DATE is '양도양수일자 - 사용안함'
/

comment on column AM010TBL.CHAIN_GBN3 is '비젼트레이닝센터중복로그인유무 0:중복아님, 1:중복'
/

comment on column AM010TBL.CENTER_CODE is '트레이닝센터코드'
/

comment on column AM010TBL.CHAIN_GBN4 is '구분 본부임시 : 1, 그외 : 0 - 사용안함'
/

comment on column AM010TBL.DUZON_CD is '더존erp 연동코드'
/

comment on column AM010TBL.SLIP_YN is '자동전표 여부 [Y : 자동전표, N : 수동전표]'
/

comment on column AM010TBL.CONSULT_EMP is '담당컨설팅직원'
/

comment on column AM010TBL.CENTER_CODE2 is '사용안함'
/

comment on column AM010TBL.ADDRESS is '예전주소'
/

comment on column AM010TBL.JI_NM_F is '지번주소'
/

comment on column AM010TBL.ADDR_JI2 is '지번주소 뺀주소'
/

comment on column AM010TBL.RODE_NM_F is '도로명주소'
/

comment on column AM010TBL.ONLY_NEW_SALE is '사용안함'
/

comment on column AM010TBL.POSTNO_01 is '우편번호(20150801)'
/

comment on column AM010TBL.STR_CODE_GB is '벤사확인YN'
/

comment on column AM010TBL.STR_CODE_YN is '가맹점자진신고YN'
/

comment on column AM010TBL.STR_CODE_NO is '단말기번호'
/

comment on column AM010TBL.STR_CODE_NO2 is '단말기번호(보청기)'
/

comment on column AM010TBL.D_SHOP_O_DIV is '매장 장소구분(F:Offline, N:Online)'
/

comment on column AM010TBL.D_SHOP_P_DIV is '매장 지분구분(01 : 직영매장, 11 : 지분매장, 91 : 가맹점)'
/

comment on column AM010TBL.D_SHOP_M_DIV is '매장 운영형태(01 : 직접, 11 : 위탁, 21 : 관리, 91 : 무관)'
/

comment on column AM010TBL.D_SHOP_B_DIV is '매장 영업구분(OXXX : 안경, XHXX : 보청기, OHXX)'
/

comment on column AM010TBL.D_YN is '다비젼 사용 여부(사용 : Y, 미사용 : N)'
/

comment on column AM010TBL.D_SALE_YN is '다비젼 판매 여부(사용 : Y, 미사용 : N)'
/

comment on column AM010TBL.D_ORDER_YN is '다비젼 발주 여부(사용 : Y, 미사용 : N)'
/

comment on column AM010TBL.D_RX_ORDER_YN is '다비젼 RX 발주 여부(사용 : Y, 미사용 : N)'
/

comment on column AM010TBL.D_DELIVERY_YN is '다비젼 납품 여부(사용 : Y, 미사용 : N)'
/

comment on column AM010TBL.D_SALE_COUNT_YN is '다비젼 매출집계 여부(사용 : Y, 미사용 : N)'
/

comment on column AM010TBL.D_CUST_COUNT_YN is '다비젼 객수집계 여부(사용 : Y, 미사용 : N)'
/

comment on column AM010TBL.D_SHOP_COUNT_YN is '다비젼 매장수집계 여부(사용 : Y, 미사용 : N)'
/

comment on column AM010TBL.D_SHOP_NO_YN is '다비젼 신구 여부(신 : N, 구 : O)'
/

comment on column AM010TBL.D_SMS_YN is '다비젼 SMS 발송 여부(사용 : Y, 미사용 : N)'
/

comment on column AM010TBL.KKO_ID is '카카오 옐로우ID'
/

comment on column AM010TBL.KKO_PFKEY is '카카오프로필키'
/

comment on column AM010TBL.MALL_YN is '쇼핑몰YN'
/

comment on column AM010TBL.STR_NAME_ENG is '영문가맹점명'
/

comment on column AM010TBL.ADDR1_ENG is '영문주소'
/

comment on column AM010TBL.ADDR2_ENG is '영문나머지주소'
/

create index AM010TBL_INDEX_4
    on AM010TBL (END_IND, CHAIN_GBN, ZONE2_CODE)
/

create index AM010TBL_INDEX_5
    on AM010TBL (ZONE2_CODE)
/

create index AM010TBL_INDEX_2
    on AM010TBL (STR_CODE, BUSI_NO)
/

create index AM010TBL_INDEX_1
    on AM010TBL (STR_CODE, END_IND)
/

create unique index AM010TBL_PKEY
    on AM010TBL (STR_CODE)
/

create index AM010TBL_INDEX_3
    on AM010TBL (STR_CODE, CHAIN_GBN, CHAIN_GBN4)
/

create table SMS_MSG_LOG_202007
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202007_1
    on SMS_MSG_LOG_202007 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202007_2
    on SMS_MSG_LOG_202007 (PHONE)
/

create table MMS_MSG_LOG_202007
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202007_1
    on MMS_MSG_LOG_202007 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202007_2
    on MMS_MSG_LOG_202007 (PHONE)
/

create table SMS_MSG_LOG_202008
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202008_1
    on SMS_MSG_LOG_202008 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202008_2
    on SMS_MSG_LOG_202008 (PHONE)
/

create table MMS_MSG_LOG_202008
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202008_1
    on MMS_MSG_LOG_202008 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202008_2
    on MMS_MSG_LOG_202008 (PHONE)
/

create table SMS_MSG_LOG_202009
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202009_1
    on SMS_MSG_LOG_202009 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202009_2
    on SMS_MSG_LOG_202009 (PHONE)
/

create table MMS_MSG_LOG_202009
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202009_1
    on MMS_MSG_LOG_202009 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202009_2
    on MMS_MSG_LOG_202009 (PHONE)
/

create table VEGEMIL_WINNER
(
    MEMBER_NM VARCHAR2(200),
    MOBILE    VARCHAR2(50)
)
/

create table SMS_MSG_LOG_202010
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202010_1
    on SMS_MSG_LOG_202010 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202010_2
    on SMS_MSG_LOG_202010 (PHONE)
/

create table MMS_MSG_LOG_202010
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202010_1
    on MMS_MSG_LOG_202010 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202010_2
    on MMS_MSG_LOG_202010 (PHONE)
/

create table SMS_MSG_LOG_202011
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202011_1
    on SMS_MSG_LOG_202011 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202011_2
    on SMS_MSG_LOG_202011 (PHONE)
/

create table MMS_MSG_LOG_202011
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202011_1
    on MMS_MSG_LOG_202011 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202011_2
    on MMS_MSG_LOG_202011 (PHONE)
/

create table SMS_MSG_LOG_202012
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202012_1
    on SMS_MSG_LOG_202012 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202012_2
    on SMS_MSG_LOG_202012 (PHONE)
/

create table MMS_MSG_LOG_202012
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202012_1
    on MMS_MSG_LOG_202012 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202012_2
    on MMS_MSG_LOG_202012 (PHONE)
/

create table TC_MEMBER_ERP_BACK_OUT
(
    MEMBER_NO                NUMBER     not null,
    SITE_NO                  NUMBER(19) not null,
    MEMBER_NM                VARCHAR2(100),
    BIRTH                    VARCHAR2(100),
    BORN_YEAR                VARCHAR2(10),
    BORN_MONTH               VARCHAR2(5),
    GENDER_GB_CD             VARCHAR2(30),
    NTN_GB_CD                VARCHAR2(10),
    JOIN_DTTM                DATE,
    CERTIFY_METHOD_CD        VARCHAR2(10),
    EMAIL_RECV_YN            VARCHAR2(1),
    SMS_RECV_YN              VARCHAR2(1),
    MEMBER_STATUS_CD         VARCHAR2(10),
    LOGIN_ID                 VARCHAR2(300),
    PW                       VARCHAR2(300),
    TEL                      VARCHAR2(50),
    MOBILE                   VARCHAR2(50),
    EMAIL                    VARCHAR2(100),
    JOIN_PATH_CD             VARCHAR2(10),
    PW_CHG_DTTM              DATE,
    LOGIN_FAIL_CNT           NUMBER,
    STRTNB_ADDR              VARCHAR2(500),
    ROAD_ADDR                VARCHAR2(500),
    DTL_ADDR                 VARCHAR2(500),
    NEW_POST_NO              VARCHAR2(50),
    MANAGER_MEMO             VARCHAR2(1000),
    REALNM_CERTIFY_YN        VARCHAR2(1),
    MEMBER_GRADE_NO          NUMBER,
    GRADE_AUTO_REARRANGE_YN  VARCHAR2(1),
    MEMBER_CI                VARCHAR2(300),
    MEMBER_DI                VARCHAR2(300),
    MEMBER_GB_CD             VARCHAR2(10),
    ADULT_CERTIFY_YN         VARCHAR2(1),
    NEXT_PW_CHG_SCD_DTTM     DATE,
    FRG_ADDR_COUNTRY         VARCHAR2(300),
    FRG_ADDR_CITY            VARCHAR2(300),
    FRG_ADDR_STATE           VARCHAR2(300),
    FRG_ADDR_ZIP_CODE        VARCHAR2(100),
    FRG_ADDR_DTL1            VARCHAR2(300),
    FRG_ADDR_DTL2            VARCHAR2(300),
    JOIN_DEVICE_TYPE         VARCHAR2(2),
    RECV_RJT_YN              VARCHAR2(1),
    REGR_NO                  NUMBER,
    REG_DTTM                 DATE,
    UPDR_NO                  NUMBER,
    UPD_DTTM                 DATE,
    MEMBER_TYPE_CD           CHAR(2),
    BIZ_REG_NO               VARCHAR2(10),
    MANAGER_NM               VARCHAR2(100),
    BIZ_FILE_PATH            VARCHAR2(300),
    BIZ_FILE_NM              VARCHAR2(300),
    BIZ_FILE_SIZE            NUMBER,
    BIZ_ORG_FILE_NM          VARCHAR2(300),
    EMAIL_CERTIFY_VALUE      VARCHAR2(300),
    MEMBER_CARD_NO           VARCHAR2(20),
    CUSTOM_STORE_NO          VARCHAR2(10),
    CUSTOM_STORE_NM          VARCHAR2(200),
    INTEGRATION_MEMBER_GB_CD VARCHAR2(2),
    MOBILE_SMR               VARCHAR2(4),
    APP_TOKEN                VARCHAR2(300),
    RECOM_MEMBER_NO          NUMBER,
    APP_LAST_LOGIN_DTTM      DATE,
    AUTO_LOGIN_GB            VARCHAR2(1),
    LOCA_GB                  VARCHAR2(1),
    NOTI_GB                  VARCHAR2(1),
    EVENT_GB                 VARCHAR2(1),
    NEWS_GB                  VARCHAR2(1),
    MEMBER_INTEGRATION_DTTM  DATE,
    STORE_JOIN_YN            VARCHAR2(1),
    OS_TYPE                  VARCHAR2(10),
    CEO_NM                   VARCHAR2(50),
    ID_CHG_YN                VARCHAR2(1),
    ID_CHG_DTTM              DATE,
    APP_FIRST_LOGIN_DTTM     DATE,
    SEQ                      VARCHAR2(20) default to_char(systimestamp, 'YYMMDDHH24MISSff3')
)
/

comment on table TC_MEMBER_ERP_BACK_OUT is '기간계 회원탈퇴 log'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MEMBER_NO is '회원번호'
/

comment on column TC_MEMBER_ERP_BACK_OUT.SITE_NO is '사이트 번호'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MEMBER_NM is '회원 명'
/

comment on column TC_MEMBER_ERP_BACK_OUT.BIRTH is '생일'
/

comment on column TC_MEMBER_ERP_BACK_OUT.BORN_YEAR is '생년'
/

comment on column TC_MEMBER_ERP_BACK_OUT.BORN_MONTH is '생월'
/

comment on column TC_MEMBER_ERP_BACK_OUT.GENDER_GB_CD is '성별 구분 코드'
/

comment on column TC_MEMBER_ERP_BACK_OUT.NTN_GB_CD is '국적 구분 코드'
/

comment on column TC_MEMBER_ERP_BACK_OUT.JOIN_DTTM is '가입 일시'
/

comment on column TC_MEMBER_ERP_BACK_OUT.CERTIFY_METHOD_CD is '인증 방법 코드'
/

comment on column TC_MEMBER_ERP_BACK_OUT.EMAIL_RECV_YN is '이메일 수신 여부'
/

comment on column TC_MEMBER_ERP_BACK_OUT.SMS_RECV_YN is 'SMS 수신 여부'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MEMBER_STATUS_CD is '회원 상태 코드'
/

comment on column TC_MEMBER_ERP_BACK_OUT.LOGIN_ID is '로그인 아이디'
/

comment on column TC_MEMBER_ERP_BACK_OUT.PW is '비밀번호'
/

comment on column TC_MEMBER_ERP_BACK_OUT.TEL is '전화'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MOBILE is '휴대폰'
/

comment on column TC_MEMBER_ERP_BACK_OUT.EMAIL is '이메일'
/

comment on column TC_MEMBER_ERP_BACK_OUT.JOIN_PATH_CD is '가입 경로 코드'
/

comment on column TC_MEMBER_ERP_BACK_OUT.PW_CHG_DTTM is '비밀번호 변경 일시'
/

comment on column TC_MEMBER_ERP_BACK_OUT.LOGIN_FAIL_CNT is '로그인 실패 수'
/

comment on column TC_MEMBER_ERP_BACK_OUT.STRTNB_ADDR is '번지 주소'
/

comment on column TC_MEMBER_ERP_BACK_OUT.ROAD_ADDR is '도로 주소'
/

comment on column TC_MEMBER_ERP_BACK_OUT.DTL_ADDR is '상세 주소'
/

comment on column TC_MEMBER_ERP_BACK_OUT.NEW_POST_NO is '신 우편 번호'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MANAGER_MEMO is '관리자 메모'
/

comment on column TC_MEMBER_ERP_BACK_OUT.REALNM_CERTIFY_YN is '실명 인증 여부'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MEMBER_GRADE_NO is '회원 등급 번호'
/

comment on column TC_MEMBER_ERP_BACK_OUT.GRADE_AUTO_REARRANGE_YN is '등급 자동 산정 여부'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MEMBER_CI is '회원 CI'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MEMBER_DI is '회원 DI'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MEMBER_GB_CD is '회원 구분 코드'
/

comment on column TC_MEMBER_ERP_BACK_OUT.ADULT_CERTIFY_YN is '성인 인증 여부'
/

comment on column TC_MEMBER_ERP_BACK_OUT.NEXT_PW_CHG_SCD_DTTM is '다음 비밀번호 변경 예정 일시'
/

comment on column TC_MEMBER_ERP_BACK_OUT.FRG_ADDR_COUNTRY is '해외 주소 COUNTRY'
/

comment on column TC_MEMBER_ERP_BACK_OUT.FRG_ADDR_CITY is '해외 주소 CITY'
/

comment on column TC_MEMBER_ERP_BACK_OUT.FRG_ADDR_STATE is '해외 주소 STATE'
/

comment on column TC_MEMBER_ERP_BACK_OUT.FRG_ADDR_ZIP_CODE is '해외 주소 ZIP CODE'
/

comment on column TC_MEMBER_ERP_BACK_OUT.FRG_ADDR_DTL1 is '해외 주소 상세1'
/

comment on column TC_MEMBER_ERP_BACK_OUT.FRG_ADDR_DTL2 is '해외 주소 상세2'
/

comment on column TC_MEMBER_ERP_BACK_OUT.JOIN_DEVICE_TYPE is '가입 장치 유형'
/

comment on column TC_MEMBER_ERP_BACK_OUT.RECV_RJT_YN is '수신 거부 여부'
/

comment on column TC_MEMBER_ERP_BACK_OUT.REGR_NO is '등록자 번호'
/

comment on column TC_MEMBER_ERP_BACK_OUT.REG_DTTM is '등록 일시'
/

comment on column TC_MEMBER_ERP_BACK_OUT.UPDR_NO is '수정자 번호'
/

comment on column TC_MEMBER_ERP_BACK_OUT.UPD_DTTM is '수정 일시'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MEMBER_TYPE_CD is '회원 유형 코드'
/

comment on column TC_MEMBER_ERP_BACK_OUT.BIZ_REG_NO is '사업자 등록 번호'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MANAGER_NM is '담당자 명'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MEMBER_CARD_NO is '회원카드번호'
/

comment on column TC_MEMBER_ERP_BACK_OUT.INTEGRATION_MEMBER_GB_CD is '통합 회원 구분 코드'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MOBILE_SMR is '휴대폰 요약'
/

comment on column TC_MEMBER_ERP_BACK_OUT.RECOM_MEMBER_NO is '추천 회원 번호'
/

comment on column TC_MEMBER_ERP_BACK_OUT.NOTI_GB is '공지 안내 : 1 허용'
/

comment on column TC_MEMBER_ERP_BACK_OUT.EVENT_GB is '이벤트 : 1 허용'
/

comment on column TC_MEMBER_ERP_BACK_OUT.NEWS_GB is '뉴스 1 허용'
/

comment on column TC_MEMBER_ERP_BACK_OUT.MEMBER_INTEGRATION_DTTM is '회원 통합 일시'
/

comment on column TC_MEMBER_ERP_BACK_OUT.STORE_JOIN_YN is '매장 가입 여부'
/

comment on column TC_MEMBER_ERP_BACK_OUT.CEO_NM is '대표자 명'
/

comment on column TC_MEMBER_ERP_BACK_OUT.ID_CHG_YN is '아이디 변경 여부'
/

comment on column TC_MEMBER_ERP_BACK_OUT.ID_CHG_DTTM is '아이디 변경 일시'
/

comment on column TC_MEMBER_ERP_BACK_OUT.APP_FIRST_LOGIN_DTTM is '앱 최초 로그인 일시'
/

comment on column TC_MEMBER_ERP_BACK_OUT.SEQ is 'seq'
/

create unique index IDX_TC_MEMBER_ERP_BACK_OUT_PK
    on TC_MEMBER_ERP_BACK_OUT (MEMBER_NO, SEQ)
/

create table SMS_MSG_LOG_202101
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202101_1
    on SMS_MSG_LOG_202101 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202101_2
    on SMS_MSG_LOG_202101 (PHONE)
/

create table MMS_MSG_LOG_202101
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202101_1
    on MMS_MSG_LOG_202101 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202101_2
    on MMS_MSG_LOG_202101 (PHONE)
/

create table SMS_MSG_LOG_202102
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202102_1
    on SMS_MSG_LOG_202102 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202102_2
    on SMS_MSG_LOG_202102 (PHONE)
/

create table MMS_MSG_LOG_202102
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202102_1
    on MMS_MSG_LOG_202102 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202102_2
    on MMS_MSG_LOG_202102 (PHONE)
/

create table SMS_MSG_LOG_202103
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202103_1
    on SMS_MSG_LOG_202103 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202103_2
    on SMS_MSG_LOG_202103 (PHONE)
/

create table MMS_MSG_LOG_202103
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202103_1
    on MMS_MSG_LOG_202103 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202103_2
    on MMS_MSG_LOG_202103 (PHONE)
/

create table SMS_MSG_LOG_202104
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202104_1
    on SMS_MSG_LOG_202104 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202104_2
    on SMS_MSG_LOG_202104 (PHONE)
/

create table MMS_MSG_LOG_202104
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202104_1
    on MMS_MSG_LOG_202104 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202104_2
    on MMS_MSG_LOG_202104 (PHONE)
/

create table TP_EVENT_SNS_SHARE
(
    EVENT_NO   NUMBER,
    MEMBER_NO  NUMBER,
    SHARE_TYPE VARCHAR2(1),
    REGR_NO    NUMBER,
    REG_DTTM   DATE,
    UPDR_NO    NUMBER,
    UPD_DTTM   DATE
)
/

comment on column TP_EVENT_SNS_SHARE.EVENT_NO is '이벤트 번호'
/

comment on column TP_EVENT_SNS_SHARE.MEMBER_NO is '회원번호'
/

comment on column TP_EVENT_SNS_SHARE.SHARE_TYPE is '공유타입'
/

comment on column TP_EVENT_SNS_SHARE.REGR_NO is '등록자번호'
/

comment on column TP_EVENT_SNS_SHARE.REG_DTTM is '등록일시'
/

comment on column TP_EVENT_SNS_SHARE.UPDR_NO is '수정자번호'
/

comment on column TP_EVENT_SNS_SHARE.UPD_DTTM is '수정일시'
/

create table SMS_MSG_LOG_202105
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202105_1
    on SMS_MSG_LOG_202105 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202105_2
    on SMS_MSG_LOG_202105 (PHONE)
/

create table MMS_MSG_LOG_202105
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202105_1
    on MMS_MSG_LOG_202105 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202105_2
    on MMS_MSG_LOG_202105 (PHONE)
/

create table TC_MEMBER_20210512
(
    MEMBER_NO                NUMBER     not null,
    SITE_NO                  NUMBER(19) not null,
    MEMBER_NM                VARCHAR2(100),
    BIRTH                    VARCHAR2(100),
    BORN_YEAR                VARCHAR2(10),
    BORN_MONTH               VARCHAR2(5),
    GENDER_GB_CD             VARCHAR2(30),
    NTN_GB_CD                VARCHAR2(10),
    JOIN_DTTM                DATE,
    CERTIFY_METHOD_CD        VARCHAR2(10),
    EMAIL_RECV_YN            VARCHAR2(1),
    SMS_RECV_YN              VARCHAR2(1),
    MEMBER_STATUS_CD         VARCHAR2(10),
    LOGIN_ID                 VARCHAR2(300),
    PW                       VARCHAR2(300),
    TEL                      VARCHAR2(50),
    MOBILE                   VARCHAR2(50),
    EMAIL                    VARCHAR2(100),
    JOIN_PATH_CD             VARCHAR2(10),
    PW_CHG_DTTM              DATE,
    LOGIN_FAIL_CNT           NUMBER,
    STRTNB_ADDR              VARCHAR2(500),
    ROAD_ADDR                VARCHAR2(500),
    DTL_ADDR                 VARCHAR2(500),
    NEW_POST_NO              VARCHAR2(50),
    MANAGER_MEMO             VARCHAR2(1000),
    REALNM_CERTIFY_YN        VARCHAR2(1),
    MEMBER_GRADE_NO          NUMBER,
    GRADE_AUTO_REARRANGE_YN  VARCHAR2(1),
    MEMBER_CI                VARCHAR2(300),
    MEMBER_DI                VARCHAR2(300),
    MEMBER_GB_CD             VARCHAR2(10),
    ADULT_CERTIFY_YN         VARCHAR2(1),
    NEXT_PW_CHG_SCD_DTTM     DATE,
    FRG_ADDR_COUNTRY         VARCHAR2(300),
    FRG_ADDR_CITY            VARCHAR2(300),
    FRG_ADDR_STATE           VARCHAR2(300),
    FRG_ADDR_ZIP_CODE        VARCHAR2(100),
    FRG_ADDR_DTL1            VARCHAR2(300),
    FRG_ADDR_DTL2            VARCHAR2(300),
    JOIN_DEVICE_TYPE         VARCHAR2(2),
    RECV_RJT_YN              VARCHAR2(1),
    REGR_NO                  NUMBER,
    REG_DTTM                 DATE,
    UPDR_NO                  NUMBER,
    UPD_DTTM                 DATE,
    MEMBER_TYPE_CD           CHAR(2),
    BIZ_REG_NO               VARCHAR2(10),
    MANAGER_NM               VARCHAR2(100),
    BIZ_FILE_PATH            VARCHAR2(300),
    BIZ_FILE_NM              VARCHAR2(300),
    BIZ_FILE_SIZE            NUMBER,
    BIZ_ORG_FILE_NM          VARCHAR2(300),
    EMAIL_CERTIFY_VALUE      VARCHAR2(300),
    MEMBER_CARD_NO           VARCHAR2(20),
    CUSTOM_STORE_NO          VARCHAR2(10),
    CUSTOM_STORE_NM          VARCHAR2(200),
    INTEGRATION_MEMBER_GB_CD VARCHAR2(2),
    MOBILE_SMR               VARCHAR2(4),
    APP_TOKEN                VARCHAR2(300),
    RECOM_MEMBER_NO          NUMBER,
    APP_LAST_LOGIN_DTTM      DATE,
    AUTO_LOGIN_GB            VARCHAR2(1),
    LOCA_GB                  VARCHAR2(1),
    NOTI_GB                  VARCHAR2(1),
    EVENT_GB                 VARCHAR2(1),
    NEWS_GB                  VARCHAR2(1),
    MEMBER_INTEGRATION_DTTM  DATE,
    STORE_JOIN_YN            VARCHAR2(1),
    OS_TYPE                  VARCHAR2(10),
    CEO_NM                   VARCHAR2(50),
    ID_CHG_YN                VARCHAR2(1),
    ID_CHG_DTTM              DATE,
    APP_FIRST_LOGIN_DTTM     DATE,
    PRIVACY_POLICY_YN        VARCHAR2(1),
    LOC_INFO_TERMS_YN        VARCHAR2(1),
    YOUTH_PROT_POLICY_YN     VARCHAR2(1),
    MEMBERSHIP_TERMS_YN      VARCHAR2(1),
    ONLINE_TERMS_YN          VARCHAR2(1)
)
/

create table SMS_MSG_LOG_202106
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202106_1
    on SMS_MSG_LOG_202106 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202106_2
    on SMS_MSG_LOG_202106 (PHONE)
/

create table MMS_MSG_LOG_202106
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202106_1
    on MMS_MSG_LOG_202106 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202106_2
    on MMS_MSG_LOG_202106 (PHONE)
/

create table SMS_MSG_LOG_202107
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202107_1
    on SMS_MSG_LOG_202107 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202107_2
    on SMS_MSG_LOG_202107 (PHONE)
/

create table MMS_MSG_LOG_202107
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202107_1
    on MMS_MSG_LOG_202107 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202107_2
    on MMS_MSG_LOG_202107 (PHONE)
/

create table SMS_MSG_LOG_202108
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202108_1
    on SMS_MSG_LOG_202108 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202108_2
    on SMS_MSG_LOG_202108 (PHONE)
/

create table MMS_MSG_LOG_202108
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202108_1
    on MMS_MSG_LOG_202108 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202108_2
    on MMS_MSG_LOG_202108 (PHONE)
/

create table TO_BILLING
(
    MEMBER_NO NUMBER        not null,
    BILL_KEY  VARCHAR2(100) not null,
    CARD_CD   VARCHAR2(10),
    CARD_NAME VARCHAR2(20),
    CARD_NO_1 VARCHAR2(10),
    CARD_NO_2 VARCHAR2(10),
    CARD_NO_3 VARCHAR2(10),
    CARD_NO_4 VARCHAR2(10),
    REGR_NO   NUMBER,
    REG_DTTM  DATE,
    UPDR_NO   NUMBER,
    UPD_DTTM  DATE,
    constraint IDX_TO_BILLING_PK
        primary key (MEMBER_NO, BILL_KEY)
)
/

comment on table TO_BILLING is '빌링'
/

comment on column TO_BILLING.MEMBER_NO is '회원 번호'
/

comment on column TO_BILLING.BILL_KEY is '빌 키'
/

comment on column TO_BILLING.CARD_CD is '카드사 코드'
/

comment on column TO_BILLING.CARD_NAME is '카드 별칭'
/

comment on column TO_BILLING.CARD_NO_1 is '카드 번호 1'
/

comment on column TO_BILLING.CARD_NO_2 is '카드 번호 2'
/

comment on column TO_BILLING.CARD_NO_3 is '카드 번호 3'
/

comment on column TO_BILLING.CARD_NO_4 is '카드 번호 4'
/

comment on column TO_BILLING.REGR_NO is '등록자 번호'
/

comment on column TO_BILLING.REG_DTTM is '등록 일시'
/

comment on column TO_BILLING.UPDR_NO is '수정자 번호'
/

comment on column TO_BILLING.UPD_DTTM is '수정 일시'
/

create table TO_BILLING_HIST
(
    MEMBER_NO       NUMBER        not null,
    BILL_KEY        VARCHAR2(100) not null,
    HIST_START_DTTM DATE          not null,
    CARD_CD         VARCHAR2(10),
    CARD_NAME       VARCHAR2(20),
    CARD_NO_1       VARCHAR2(10),
    CARD_NO_2       VARCHAR2(10),
    CARD_NO_3       VARCHAR2(10),
    CARD_NO_4       VARCHAR2(10),
    REGR_NO         NUMBER,
    REG_DTTM        DATE,
    UPDR_NO         NUMBER,
    UPD_DTTM        DATE,
    constraint IDX_TO_BILLING_HIST_PK
        primary key (MEMBER_NO, BILL_KEY, HIST_START_DTTM)
)
/

comment on table TO_BILLING_HIST is '빌링 이력'
/

comment on column TO_BILLING_HIST.MEMBER_NO is '회원 번호'
/

comment on column TO_BILLING_HIST.BILL_KEY is '빌 키'
/

comment on column TO_BILLING_HIST.HIST_START_DTTM is '이력 시작 일시'
/

comment on column TO_BILLING_HIST.CARD_CD is '카드사 코드'
/

comment on column TO_BILLING_HIST.CARD_NAME is '카드 별칭'
/

comment on column TO_BILLING_HIST.CARD_NO_1 is '카드 번호 1'
/

comment on column TO_BILLING_HIST.CARD_NO_2 is '카드 번호 2'
/

comment on column TO_BILLING_HIST.CARD_NO_3 is '카드 번호 3'
/

comment on column TO_BILLING_HIST.CARD_NO_4 is '카드 번호 4'
/

comment on column TO_BILLING_HIST.REGR_NO is '등록자 번호'
/

comment on column TO_BILLING_HIST.REG_DTTM is '등록 일시'
/

comment on column TO_BILLING_HIST.UPDR_NO is '수정자 번호'
/

comment on column TO_BILLING_HIST.UPD_DTTM is '수정 일시'
/

create trigger TO_BILLING_HIST_TRG01
    after insert or update
    on TO_BILLING
    for each row
BEGIN
    IF(INSERTING OR UPDATING('BILL_KEY'))
    THEN
        INSERT INTO TO_BILLING_HIST(MEMBER_NO, BILL_KEY, HIST_START_DTTM, CARD_CD, CARD_NAME, CARD_NO_1, CARD_NO_2, CARD_NO_3,
                             CARD_NO_4, REGR_NO, REG_DTTM, UPDR_NO, UPD_DTTM)
        VALUES
        (:NEW.MEMBER_NO, :NEW.BILL_KEY, SYSDATE, :NEW.CARD_CD, :NEW.CARD_NAME, :NEW.CARD_NO_1, :NEW.CARD_NO_2, :NEW.CARD_NO_3,
                             :NEW.CARD_NO_4, :NEW.REGR_NO, :NEW.REG_DTTM, :NEW.UPDR_NO, :NEW.UPD_DTTM);
    END IF;
END;
/

create table SMS_MSG_LOG_202109
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202109_1
    on SMS_MSG_LOG_202109 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202109_2
    on SMS_MSG_LOG_202109 (PHONE)
/

create table MMS_MSG_LOG_202109
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202109_1
    on MMS_MSG_LOG_202109 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202109_2
    on MMS_MSG_LOG_202109 (PHONE)
/

create table SMS_MSG_LOG_202110
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202110_1
    on SMS_MSG_LOG_202110 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202110_2
    on SMS_MSG_LOG_202110 (PHONE)
/

create table MMS_MSG_LOG_202110
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202110_1
    on MMS_MSG_LOG_202110 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202110_2
    on MMS_MSG_LOG_202110 (PHONE)
/

create table SMS_MSG_LOG_202111
(
    MSGKEY     NUMBER(15)               not null,
    REQDATE    DATE                     not null,
    SERIALNUM  NUMBER(10),
    ID         VARCHAR2(16),
    STATUS     VARCHAR2(1)  default '1' not null,
    RSLT       VARCHAR2(2)  default '00',
    TYPE       VARCHAR2(1)  default '0' not null,
    REPCNT     NUMBER(10)   default 0   not null,
    PHONE      VARCHAR2(16) default ''  not null,
    CALLBACK   VARCHAR2(16) default ''  not null,
    RSLTDATE   DATE,
    REPORTDATE DATE,
    MSG        VARCHAR2(160)            not null,
    NET        VARCHAR2(4),
    ETC1       VARCHAR2(160),
    ETC2       VARCHAR2(160),
    ETC3       VARCHAR2(160),
    ETC4       VARCHAR2(160),
    ETC5       VARCHAR2(160),
    ETC6       VARCHAR2(160)
)
/

create index IDX_SMS_MSG_LOG_202111_1
    on SMS_MSG_LOG_202111 (STATUS, REQDATE)
/

create index IDX_SMS_MSG_LOG_202111_2
    on SMS_MSG_LOG_202111 (PHONE)
/

create table MMS_MSG_LOG_202111
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_LOG_202111_1
    on MMS_MSG_LOG_202111 (STATUS, REQDATE)
/

create index IDX_MMS_MSG_LOG_202111_2
    on MMS_MSG_LOG_202111 (PHONE)
/

create table MMS_MSG_BARCODE_LOG
(
    MSGKEY          NUMBER(15)               not null,
    SERIALNUM       NUMBER(10),
    ID              VARCHAR2(16),
    STATUS          VARCHAR2(2)  default '1' not null,
    PHONE           VARCHAR2(16) default ''  not null,
    CALLBACK        VARCHAR2(16) default ''  not null,
    TYPE            VARCHAR2(2)  default '0' not null,
    REPCNT          NUMBER(10)   default 0   not null,
    REQDATE         DATE                     not null,
    SENTDATE        DATE,
    RSLTDATE        DATE,
    REPORTDATE      DATE,
    RSLT            VARCHAR2(10) default '00',
    NET             VARCHAR2(10),
    SUBJECT         VARCHAR2(50)             not null,
    MSG             VARCHAR2(4000),
    FILE_CNT        NUMBER(10)   default 0,
    FILE_CNT_REAL   NUMBER(10)   default 0,
    FILE_TYPE1      VARCHAR2(1),
    FILE_PATH1      VARCHAR2(256),
    FILE_TYPE2      VARCHAR2(1),
    FILE_PATH2      VARCHAR2(256),
    FILE_TYPE3      VARCHAR2(1),
    FILE_PATH3      VARCHAR2(256),
    FILE_TYPE4      VARCHAR2(1),
    FILE_PATH4      VARCHAR2(256),
    FILE_TYPE5      VARCHAR2(1),
    FILE_PATH5      VARCHAR2(256),
    MMS_FILE_NAME   VARCHAR2(256),
    BAR_TYPE        VARCHAR2(2),
    BAR_MERGE_FILE  NUMBER(10),
    BAR_VALUE       VARCHAR2(256),
    BAR_SIZE_WIDTH  NUMBER(10),
    BAR_SIZE_HEIGHT NUMBER(10),
    BAR_POSITION_X  NUMBER(10),
    BAR_POSITION_Y  NUMBER(10),
    BAR_FILE_NAME   VARCHAR2(256),
    ETC1            VARCHAR2(160),
    ETC2            VARCHAR2(160),
    ETC3            VARCHAR2(160),
    ETC4            VARCHAR2(160),
    ETC5            VARCHAR2(160),
    ETC6            VARCHAR2(160)
)
/

create index IDX_MMS_MSG_BARCODE_LOG_1
    on MMS_MSG_BARCODE_LOG (STATUS, REQDATE)
/

create index IDX_MMS_MSG_BARCODE_LOG_2
    on MMS_MSG_BARCODE_LOG (PHONE)
/

create table TG_GOODS_20220310
(
    GOODS_NO    VARCHAR2(16)  not null,
    GOODS_NM    VARCHAR2(100) not null,
    TO_GOODS_NM VARCHAR2(100) not null
)
/

create table TG_GOODS_20220310_BACK
(
    GOODS_NO                       VARCHAR2(16)  not null,
    SELLER_NO                      NUMBER(19),
    COMPANY_NO                     NUMBER(19),
    SITE_NO                        NUMBER(19)    not null,
    NOTIFY_NO                      NUMBER(19),
    GOODS_NM                       VARCHAR2(100) not null,
    MODEL_NM                       VARCHAR2(100),
    ITEM_NO                        VARCHAR2(18),
    BRAND_NO                       NUMBER(19),
    GOODS_SALE_STATUS_CD           VARCHAR2(1),
    DISP_YN                        VARCHAR2(1),
    RETURN_PSB_YN                  VARCHAR2(1),
    SALE_YN                        VARCHAR2(1),
    SALE_START_DT                  VARCHAR2(8),
    SALE_END_DT                    VARCHAR2(8),
    GOODS_ADD_INFO_USE_YN          VARCHAR2(1),
    MOBILE_DISP_YN                 VARCHAR2(1),
    REINWARE_APPLY_YN              VARCHAR2(1),
    ADULT_CERTIFY_YN               VARCHAR2(1),
    MAX_ORD_LIMIT_YN               VARCHAR2(1),
    MAX_ORD_QTT                    NUMBER,
    MIN_ORD_LIMIT_YN               VARCHAR2(1),
    MIN_ORD_QTT                    NUMBER,
    PR_WORDS                       VARCHAR2(300),
    ADD_OPT_USE_YN                 VARCHAR2(1),
    MULTI_OPT_YN                   VARCHAR2(1),
    HABITAT                        VARCHAR2(30),
    MMFT                           VARCHAR2(100),
    IMPORTER                       VARCHAR2(30),
    TAX_GB_CD                      VARCHAR2(1),
    HSCODE                         VARCHAR2(20),
    SEO_SEARCH_WORD                VARCHAR2(4000),
    WEIGHT                         NUMBER(10, 4),
    DLVR_SET_CD                    VARCHAR2(1),
    DLVR_EXPECT_DAYS               NUMBER,
    GOODSEACH_DLVRC                NUMBER(20, 2),
    PACK_MAX_UNIT                  NUMBER,
    PACK_UNIT_DLVRC                NUMBER(20, 2),
    COURI_DLVR_APPLY_YN            VARCHAR2(1),
    DIRECT_RECPT_APPLY_YN          VARCHAR2(1),
    DLVR_PAYMENT_KIND_CD           VARCHAR2(2),
    TX_LIMIT_CNDT                  VARCHAR2(300),
    RELATE_GOODS_APPLY_TYPE_CD     VARCHAR2(1),
    RELATE_GOODS_APPLY_CTG         NUMBER(19),
    RELATE_GOODS_SALE_PRICE_START  NUMBER(20, 2),
    RELATE_GOODS_SALE_PRICE_END    NUMBER(20, 2),
    RELATE_GOODS_SALE_STATUS_CD    VARCHAR2(1),
    RELATE_GOODS_DISP_STATUS_CD    VARCHAR2(1),
    RELATE_GOODS_AUTO_EXPS_SORT_CD VARCHAR2(2),
    GOODS_SVMN_POLICY_USE_YN       VARCHAR2(1),
    GOODS_SVMN_AMT                 NUMBER(20, 2),
    VIDEO_PATH                     VARCHAR2(300),
    VIDEO_SOURCE_PATH              VARCHAR2(300),
    DISP_IMG_PATH_TYPE_A           VARCHAR2(50),
    DISP_IMG_NM_TYPE_A             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_B           VARCHAR2(50),
    DISP_IMG_NM_TYPE_B             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_C           VARCHAR2(50),
    DISP_IMG_NM_TYPE_C             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_D           VARCHAR2(50),
    DISP_IMG_NM_TYPE_D             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_E           VARCHAR2(50),
    DISP_IMG_NM_TYPE_E             VARCHAR2(300),
    ACCM_SALE_AMT                  NUMBER(20, 2),
    ACCM_SALE_CNT                  NUMBER,
    ACCM_GOODSLETT_CNT             NUMBER,
    BASKET_SET_CNT                 NUMBER,
    FAVGOODS_SET_CNT               NUMBER,
    GOODS_INQ_CNT                  NUMBER,
    GOODS_SCORE                    NUMBER,
    FREE_DLVR_MIN_AMT              NUMBER,
    GOODSEACH_CNDTADD_DLVRC        NUMBER,
    DEL_YN                         VARCHAR2(1),
    DELR_NO                        NUMBER,
    DEL_DTTM                       DATE,
    REGR_NO                        NUMBER,
    REG_DTTM                       DATE,
    UPDR_NO                        NUMBER,
    UPD_DTTM                       DATE,
    GOODS_TYPE_CD                  CHAR(2),
    DISP_IMG_PATH_TYPE_F           VARCHAR2(50),
    DISP_IMG_NM_TYPE_F             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_G           VARCHAR2(50),
    DISP_IMG_NM_TYPE_G             VARCHAR2(300),
    DISP_IMG_PATH_TYPE_S           VARCHAR2(50),
    DISP_IMG_NM_TYPE_S             VARCHAR2(300),
    RSV_ONLY_YN                    VARCHAR2(1),
    VIRT_OUTING_YN                 VARCHAR2(1),
    RECOM_PVD_RATE                 NUMBER(20, 2),
    RECOM_PVD_POLICY_CD            VARCHAR2(2),
    GOODS_SVMN_POLICY_CD           VARCHAR2(2),
    GOODS_SVMN_GB_CD               VARCHAR2(1),
    GOODS_SVMN_MAX_USE_POLICY_CD   VARCHAR2(2),
    GOODS_SVMN_MAX_USE_RATE        NUMBER(10, 2),
    DISP_IMG_FILE_SIZE_TYPE_A      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_B      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_C      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_D      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_E      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_F      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_G      NUMBER,
    DISP_IMG_FILE_SIZE_TYPE_S      NUMBER,
    DISP_IMG_PATH_TYPE_M           VARCHAR2(50),
    DISP_IMG_NM_TYPE_M             VARCHAR2(300),
    DISP_IMG_FILE_SIZE_TYPE_M      NUMBER,
    GOODS_CONTS_GB_CD              VARCHAR2(2),
    NAVER_LINK_YN                  VARCHAR2(1),
    SMR_GOODS_NM                   VARCHAR2(100),
    DISP_IMG_NM_TYPE_O             VARCHAR2(300),
    DISP_IMG_FILE_SIZE_TYPE_O      NUMBER,
    DISP_IMG_PATH_TYPE_O           VARCHAR2(50),
    PRE_GOODS_YN                   VARCHAR2(1),
    SBN_LINK_YN                    VARCHAR2(1),
    DISP_IMG_PATH_TYPE_P           VARCHAR2(50),
    DISP_IMG_NM_TYPE_P             VARCHAR2(300),
    DISP_IMG_FILE_SIZE_TYPE_P      NUMBER,
    INWARE_SCD_SCH                 VARCHAR2(4000),
    RSV_BUY_YN                     VARCHAR2(1)
)
/

create view V_SEARCH_VIDEO as
SELECT lett.BBS_ID,
            lett.LETT_NO,
            lett.TITLE,
            (SELECT COUNT (*)
               FROM TB_BBS_CMNT cmnt
              WHERE     1 = 1
                    AND cmnt.LETT_NO = lett.LETT_NO
                    AND cmnt.DEL_YN != 'Y')
               AS CMNT_CNT,
            lett.CONTENT,
            lett.REGR_NO,
            lett.REG_DTTM,
            bbs.REGR_DISP_CD,
            mmb.MEMBER_NM,
            mmb.LOGIN_ID,
            title.TITLE_NO,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_HOT = 'Y'
                    AND lett.INQ_CNT > bbs.ICON_CHECK_VALUE_HOT
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_HOT,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_NEW = 'Y'
                    AND lett.REG_DTTM + bbs.ICON_CHECK_VALUE_HOT / 24 > SYSDATE
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_NEW,
            lett.notice_yn,
            NVL (lett.INQ_CNT, 0) AS INQ_CNT,
            NVL (title.TITLE_NM, '') AS TITLE_NM,
            CASE
               WHEN lett.lett_LVL = '' OR lett.lett_LVL IS NULL
               THEN
                  0
               ELSE
                    LENGTH (lett.lett_LVL)
                  - LENGTH (REPLACE (lett.lett_LVL, '-', ''))
                  + 1
            END
               lvl,
            lett.SECT_YN,
            lett.lett_LVL,
            atchfile.file_path AS IMG_FILE_PATH,
            atchfile.FILE_NM AS IMG_FILE_NM,
            lett.seller_no,
            CASE WHEN lett.seller_no = 0 THEN '전체' ELSE sel.seller_nm END
               seller_nm,
            lett.LINK_URL,
            lett.REL_SEARCH_WORD,
            '/front/customer/letter-detail?bbsId=video=' || lett.LETT_NO
               AS DETAIL_LINK
       FROM TB_BBS_LETT lett
            INNER JOIN TB_BBS bbs ON (lett.bbs_id = bbs.bbs_id)
            LEFT OUTER JOIN TB_ATCHFILE atchfile
               ON (    lett.lett_no = atchfile.LETT_NO
                   AND atchfile.IMG_YN = 'Y'
                   AND atchfile.del_yn = 'N'
                   AND atchfile.bbs_id=bbs.bbs_id)
            LEFT OUTER JOIN TC_MEMBER mmb
               ON (lett.REGR_NO = mmb.MEMBER_NO AND mmb.MEMBER_STATUS_CD = '01')
            LEFT OUTER JOIN TB_BBS_TITLE title
               ON (lett.TITLE_NO = title.TITLE_NO)
            LEFT OUTER JOIN TS_SELLER sel ON (lett.SELLER_NO = sel.SELLER_NO)
      WHERE     1 = 1
            AND bbs.SITE_NO = 1
            AND lett.SITE_NO = 1
            AND lett.DEL_YN = 'N'
            AND lett.BBS_ID = 'video'
   ORDER BY NVL (notice_yn, 'N') DESC,
            NVL (lett.GRP_NO, lett.LETT_NO) DESC,
            lett.LETT_NO ASC
/

create view V_SEARCH_VCS
            (BBS_ID, LETT_NO, TITLE, CMNT_CNT, CONTENT, REGR_NO, REG_DTTM, REGR_DISP_CD, MEMBER_NM, LOGIN_ID, TITLE_NO,
             ICON_CHECK_VALUE_HOT, ICON_CHECK_VALUE_NEW, NOTICE_YN, INQ_CNT, TITLE_NM, LVL, SECT_YN, LETT_LVL,
             IMG_FILE_PATH, IMG_FILE_NM, SELLER_NO, SELLER_NM, DETAIL_LINK, REL_SEARCH_WORD)
as
SELECT lett.BBS_ID,
            lett.LETT_NO,
            lett.TITLE,
            (SELECT COUNT (*)
               FROM TB_BBS_CMNT cmnt
              WHERE     1 = 1
                    AND cmnt.LETT_NO = lett.LETT_NO
                    AND cmnt.DEL_YN != 'Y')
               AS CMNT_CNT,
            lett.CONTENT,
            lett.REGR_NO,
            lett.REG_DTTM,
            bbs.REGR_DISP_CD,
            mmb.MEMBER_NM,
            mmb.LOGIN_ID,
            title.TITLE_NO,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_HOT = 'Y'
                    AND lett.INQ_CNT > bbs.ICON_CHECK_VALUE_HOT
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_HOT,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_NEW = 'Y'
                    AND lett.REG_DTTM + bbs.ICON_CHECK_VALUE_HOT / 24 > SYSDATE
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_NEW,
            lett.notice_yn,
            NVL (lett.INQ_CNT, 0) AS INQ_CNT,
            NVL (title.TITLE_NM, '') AS TITLE_NM,
            CASE
               WHEN lett.lett_LVL = '' OR lett.lett_LVL IS NULL
               THEN
                  0
               ELSE
                    LENGTH (lett.lett_LVL)
                  - LENGTH (REPLACE (lett.lett_LVL, '-', ''))
                  + 1
            END
               lvl,
            lett.SECT_YN,
            lett.lett_LVL,
            atchfile.file_path AS IMG_FILE_PATH,
            atchfile.FILE_NM AS IMG_FILE_NM,
            lett.seller_no,
            CASE WHEN lett.seller_no = 0 THEN '전체' ELSE sel.seller_nm END
               seller_nm,
               '/front/customer/letter-detail?bbsId=eyetest&lettNo='
            || lett.LETT_NO,
            REL_SEARCH_WORD
       FROM TB_BBS_LETT lett
            INNER JOIN TB_BBS bbs ON (lett.bbs_id = bbs.bbs_id)
            LEFT OUTER JOIN TB_ATCHFILE atchfile
               ON (    lett.lett_no = atchfile.LETT_NO
                   AND atchfile.IMG_YN = 'Y'
                   AND atchfile.del_yn = 'N')
            LEFT OUTER JOIN TC_MEMBER mmb
               ON (lett.REGR_NO = mmb.MEMBER_NO AND mmb.MEMBER_STATUS_CD = '01')
            LEFT OUTER JOIN TB_BBS_TITLE title
               ON (lett.TITLE_NO = title.TITLE_NO)
            LEFT OUTER JOIN TS_SELLER sel ON (lett.SELLER_NO = sel.SELLER_NO)
      WHERE     1 = 1
            AND bbs.SITE_NO = 1
            AND lett.SITE_NO = 1
            AND lett.DEL_YN = 'N'
            AND lett.BBS_ID = 'eyetest'
   ORDER BY NVL (notice_yn, 'N') DESC,
            NVL (lett.GRP_NO, lett.LETT_NO) DESC,
            lett.LETT_NO ASC
/

create view V_SEARCH_QNA
            (BBS_ID, LETT_NO, TITLE, CMNT_CNT, CONTENT, REGR_NO, REG_DTTM, REGR_DISP_CD, MEMBER_NM, LOGIN_ID, TITLE_NO,
             ICON_CHECK_VALUE_HOT, ICON_CHECK_VALUE_NEW, NOTICE_YN, INQ_CNT, TITLE_NM, LVL, SECT_YN, LETT_LVL,
             IMG_FILE_PATH, IMG_FILE_NM, SELLER_NO, SELLER_NM, DETAIL_LINK, REL_SEARCH_WORD)
as
SELECT lett.BBS_ID,
            lett.LETT_NO,
            lett.TITLE,
            (SELECT COUNT (*)
               FROM TB_BBS_CMNT cmnt
              WHERE     1 = 1
                    AND cmnt.LETT_NO = lett.LETT_NO
                    AND cmnt.DEL_YN != 'Y')
               AS CMNT_CNT,
            lett.CONTENT,
            lett.REGR_NO,
            lett.REG_DTTM,
            bbs.REGR_DISP_CD,
            mmb.MEMBER_NM,
            mmb.LOGIN_ID,
            title.TITLE_NO,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_HOT = 'Y'
                    AND lett.INQ_CNT > bbs.ICON_CHECK_VALUE_HOT
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_HOT,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_NEW = 'Y'
                    AND lett.REG_DTTM + bbs.ICON_CHECK_VALUE_HOT / 24 > SYSDATE
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_NEW,
            lett.notice_yn,
            NVL (lett.INQ_CNT, 0) AS INQ_CNT,
            NVL (title.TITLE_NM, '') AS TITLE_NM,
            CASE
               WHEN lett.lett_LVL = '' OR lett.lett_LVL IS NULL
               THEN
                  0
               ELSE
                    LENGTH (lett.lett_LVL)
                  - LENGTH (REPLACE (lett.lett_LVL, '-', ''))
                  + 1
            END
               lvl,
            lett.SECT_YN,
            lett.lett_LVL,
            atchfile.file_path AS IMG_FILE_PATH,
            atchfile.FILE_NM AS IMG_FILE_NM,
            lett.seller_no,
            CASE WHEN lett.seller_no = 0 THEN '전체' ELSE sel.seller_nm END
               seller_nm,
               '/front/customer/letter-detail?bbsId=products&lettNo='
            || lett.LETT_NO,
            REL_SEARCH_WORD
       FROM TB_BBS_LETT lett
            INNER JOIN TB_BBS bbs ON (lett.bbs_id = bbs.bbs_id)
            LEFT OUTER JOIN TB_ATCHFILE atchfile
               ON (    lett.lett_no = atchfile.LETT_NO
                   AND atchfile.IMG_YN = 'Y'
                   AND atchfile.del_yn = 'N')
            LEFT OUTER JOIN TC_MEMBER mmb
               ON (lett.REGR_NO = mmb.MEMBER_NO AND mmb.MEMBER_STATUS_CD = '01')
            LEFT OUTER JOIN TB_BBS_TITLE title
               ON (lett.TITLE_NO = title.TITLE_NO)
            LEFT OUTER JOIN TS_SELLER sel ON (lett.SELLER_NO = sel.SELLER_NO)
      WHERE     1 = 1
            AND bbs.SITE_NO = 1
            AND lett.SITE_NO = 1
            AND lett.DEL_YN = 'N'
            AND lett.BBS_ID = 'products'
   ORDER BY NVL (notice_yn, 'N') DESC,
            NVL (lett.GRP_NO, lett.LETT_NO) DESC,
            lett.LETT_NO ASC
/

create view V_SEARCH_PROMOTION as
SELECT DISTINCT
          PRMT_NM,
          PRMT_NO,
          APPLY_START_DTTM,
          APPLY_END_DTTM,
          PRMT_WEB_BANNER_IMG_PATH,
          PRMT_WEB_BANNER_IMG,
          PRMT_MOBILE_BANNER_IMG_PATH,
          PRMT_MOBILE_BANNER_IMG,
          CASE
             WHEN APPLY_START_DTTM > SYSDATE
             THEN
                '진행전'
             WHEN (APPLY_START_DTTM <= SYSDATE AND SYSDATE < APPLY_END_DTTM)
             THEN
                '진행중'
             WHEN APPLY_END_DTTM <= SYSDATE
             THEN
                '종료'
          END
             AS PRMT_STATUS_NM,
          REG_DTTM,
          PRMT_DC_GB_CD,
          PRMT_DC_VALUE,
          SITE_NO,
          USE_YN,
          PRMT_DSCRT,
          PRMT_MAIN_EXPS_USE_YN,
          PRMT_MAIN_EXPS_PST,
          PRMT_MAIN_EXPS_SEQ,
          '/front/promotion/promotion-detail?prmtNo=' || PRMT_NO
             AS DETAIL_LINK,
          SEO_SEARCH_WORD
     FROM TP_PROMOTION
    WHERE DEL_YN = 'N' AND SITE_NO = 1
/

create view V_SEARCH_NEWS
            (BBS_ID, LETT_NO, TITLE, CMNT_CNT, CONTENT, REGR_NO, REG_DTTM, REGR_DISP_CD, MEMBER_NM, LOGIN_ID, TITLE_NO,
             ICON_CHECK_VALUE_HOT, ICON_CHECK_VALUE_NEW, NOTICE_YN, INQ_CNT, TITLE_NM, LVL, SECT_YN, LETT_LVL,
             IMG_FILE_PATH, IMG_FILE_NM, SELLER_NO, SELLER_NM, DETAIL_LINK, REL_SEARCH_WORD)
as
SELECT lett.BBS_ID,
            lett.LETT_NO,
            lett.TITLE,
            (SELECT COUNT (*)
               FROM TB_BBS_CMNT cmnt
              WHERE     1 = 1
                    AND cmnt.LETT_NO = lett.LETT_NO
                    AND cmnt.DEL_YN != 'Y')
               AS CMNT_CNT,
            lett.CONTENT,
            lett.REGR_NO,
            lett.REG_DTTM,
            bbs.REGR_DISP_CD,
            mmb.MEMBER_NM,
            mmb.LOGIN_ID,
            title.TITLE_NO,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_HOT = 'Y'
                    AND lett.INQ_CNT > bbs.ICON_CHECK_VALUE_HOT
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_HOT,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_NEW = 'Y'
                    AND lett.REG_DTTM + bbs.ICON_CHECK_VALUE_HOT / 24 > SYSDATE
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_NEW,
            lett.notice_yn,
            NVL (lett.INQ_CNT, 0) AS INQ_CNT,
            NVL (title.TITLE_NM, '') AS TITLE_NM,
            CASE
               WHEN lett.lett_LVL = '' OR lett.lett_LVL IS NULL
               THEN
                  0
               ELSE
                    LENGTH (lett.lett_LVL)
                  - LENGTH (REPLACE (lett.lett_LVL, '-', ''))
                  + 1
            END
               lvl,
            lett.SECT_YN,
            lett.lett_LVL,
            atchfile.file_path AS IMG_FILE_PATH,
            atchfile.FILE_NM AS IMG_FILE_NM,
            lett.seller_no,
            CASE WHEN lett.seller_no = 0 THEN '전체' ELSE sel.seller_nm END
               seller_nm,
            '/front/customer/letter-detail?bbsId=news&lettNo=' || lett.LETT_NO,
            REL_SEARCH_WORD
       FROM TB_BBS_LETT lett
            INNER JOIN TB_BBS bbs ON (lett.bbs_id = bbs.bbs_id)
            LEFT OUTER JOIN TB_ATCHFILE atchfile
               ON (    lett.lett_no = atchfile.LETT_NO
                   AND atchfile.IMG_YN = 'Y'
                   AND atchfile.del_yn = 'N')
            LEFT OUTER JOIN TC_MEMBER mmb
               ON (lett.REGR_NO = mmb.MEMBER_NO AND mmb.MEMBER_STATUS_CD = '01')
            LEFT OUTER JOIN TB_BBS_TITLE title
               ON (lett.TITLE_NO = title.TITLE_NO)
            LEFT OUTER JOIN TS_SELLER sel ON (lett.SELLER_NO = sel.SELLER_NO)
      WHERE     1 = 1
            AND bbs.SITE_NO = 1
            AND lett.SITE_NO = 1
            AND lett.DEL_YN = 'N'
            AND lett.BBS_ID = 'news'
   ORDER BY NVL (notice_yn, 'N') DESC,
            NVL (lett.GRP_NO, lett.LETT_NO) DESC,
            lett.LETT_NO ASC
/

create view V_SEARCH_DICTIONARY as
select
         BBS_ID
        ,LETT_NO
        ,TITLE
        ,CMNT_CNT
        ,CONTENT
        ,REGR_NO
        ,REG_DTTM
        ,REGR_DISP_CD
        ,MEMBER_NM
        ,LOGIN_ID
        ,TITLE_NO
        ,ICON_CHECK_VALUE_HOT
        ,ICON_CHECK_VALUE_NEW
        ,NOTICE_YN
        ,INQ_CNT
        ,TITLE_NM
        ,LVL
        ,SECT_YN
        ,LETT_LVL
        ,IMG_FILE_PATH
        ,IMG_FILE_NM
        ,SELLER_NO
        ,SELLER_NM
        ,DETAIL_LINK
        ,REL_SEARCH_WORD 
    from (    
     
         SELECT lett.BBS_ID,
                lett.LETT_NO,
                lett.TITLE,
                (SELECT COUNT (*)
                   FROM TB_BBS_CMNT cmnt
                  WHERE     1 = 1
                        AND cmnt.LETT_NO = lett.LETT_NO
                        AND cmnt.DEL_YN != 'Y')
                   AS CMNT_CNT,
                lett.CONTENT,
                lett.REGR_NO,
                lett.REG_DTTM,
                bbs.REGR_DISP_CD,
                mmb.MEMBER_NM,
                mmb.LOGIN_ID,
                title.TITLE_NO,
                CASE
                   WHEN     bbs.ICON_SET_USE_YN = 'Y'
                        AND bbs.ICON_USE_YN_HOT = 'Y'
                        AND lett.INQ_CNT > bbs.ICON_CHECK_VALUE_HOT
                   THEN
                      'Y'
                   ELSE
                      'N'
                END
                   AS ICON_CHECK_VALUE_HOT,
                CASE
                   WHEN     bbs.ICON_SET_USE_YN = 'Y'
                        AND bbs.ICON_USE_YN_NEW = 'Y'
                        AND lett.REG_DTTM + bbs.ICON_CHECK_VALUE_HOT / 24 > SYSDATE
                   THEN
                      'Y'
                   ELSE
                      'N'
                END
                   AS ICON_CHECK_VALUE_NEW,
                lett.notice_yn,
                NVL (lett.INQ_CNT, 0) AS INQ_CNT,
                NVL (title.TITLE_NM, '') AS TITLE_NM,
                CASE
                   WHEN lett.lett_LVL = '' OR lett.lett_LVL IS NULL
                   THEN
                      0
                   ELSE
                        LENGTH (lett.lett_LVL)
                      - LENGTH (REPLACE (lett.lett_LVL, '-', ''))
                      + 1
                END
                   lvl,
                lett.SECT_YN,
                lett.lett_LVL,
                atchfile.file_path AS IMG_FILE_PATH,
                atchfile.FILE_NM AS IMG_FILE_NM,
                lett.seller_no,
                CASE WHEN lett.seller_no = 0 THEN '전체' ELSE sel.seller_nm END
                   seller_nm,
                   '/front/customer/letter-detail?bbsId=dictionary&lettNo='
                || lett.LETT_NO as DETAIL_LINK,
                REL_SEARCH_WORD            
           FROM TB_BBS_LETT lett
                INNER JOIN TB_BBS bbs ON (lett.bbs_id = bbs.bbs_id)
                LEFT OUTER JOIN TB_ATCHFILE atchfile
                   ON (    lett.lett_no = atchfile.LETT_NO
                       AND atchfile.IMG_YN = 'Y'
                       AND atchfile.del_yn = 'N')
                LEFT OUTER JOIN TC_MEMBER mmb
                   ON (lett.REGR_NO = mmb.MEMBER_NO AND mmb.MEMBER_STATUS_CD = '01')
                LEFT OUTER JOIN TB_BBS_TITLE title
                   ON (lett.TITLE_NO = title.TITLE_NO)
                LEFT OUTER JOIN TS_SELLER sel ON (lett.SELLER_NO = sel.SELLER_NO)
          WHERE     1 = 1
                AND bbs.SITE_NO = 1
                AND lett.SITE_NO = 1
                AND lett.DEL_YN = 'N'
                AND lett.BBS_ID = 'dictionary'
                
        union all 
        
        select  
             BBS_ID
            ,LETT_NO
            ,TITLE
            ,CMNT_CNT
            ,CONTENT
            ,REGR_NO
            ,REG_DTTM
            ,REGR_DISP_CD
            ,MEMBER_NM
            ,LOGIN_ID
            ,TITLE_NO
            ,ICON_CHECK_VALUE_HOT
            ,ICON_CHECK_VALUE_NEW
            ,NOTICE_YN
            ,INQ_CNT
            ,TITLE_NM
            ,LVL
            ,SECT_YN
            ,LETT_LVL
            ,IMG_FILE_PATH
            ,IMG_FILE_NM
            ,SELLER_NO
            ,SELLER_NM
            ,DETAIL_LINK
            ,REL_SEARCH_WORD
        from V_SEARCH_VCS	
        )
       ORDER BY NVL (notice_yn, 'N') DESC,
                 LETT_NO ASC
/

create view V_SEARCH_BESTSTORE
            (BBS_ID, LETT_NO, TITLE, CMNT_CNT, CONTENT, REGR_NO, REG_DTTM, REGR_DISP_CD, MEMBER_NM, LOGIN_ID, TITLE_NO,
             ICON_CHECK_VALUE_HOT, ICON_CHECK_VALUE_NEW, NOTICE_YN, INQ_CNT, TITLE_NM, LVL, SECT_YN, LETT_LVL,
             IMG_FILE_PATH, IMG_FILE_NM, SELLER_NO, SELLER_NM, DETAIL_LINK, REL_SEARCH_WORD)
as
SELECT lett.BBS_ID,
            lett.LETT_NO,
            lett.TITLE,
            (SELECT COUNT (*)
               FROM TB_BBS_CMNT cmnt
              WHERE     1 = 1
                    AND cmnt.LETT_NO = lett.LETT_NO
                    AND cmnt.DEL_YN != 'Y')
               AS CMNT_CNT,
            lett.CONTENT,
            lett.REGR_NO,
            lett.REG_DTTM,
            bbs.REGR_DISP_CD,
            mmb.MEMBER_NM,
            mmb.LOGIN_ID,
            title.TITLE_NO,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_HOT = 'Y'
                    AND lett.INQ_CNT > bbs.ICON_CHECK_VALUE_HOT
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_HOT,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_NEW = 'Y'
                    AND lett.REG_DTTM + bbs.ICON_CHECK_VALUE_HOT / 24 > SYSDATE
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_NEW,
            lett.notice_yn,
            NVL (lett.INQ_CNT, 0) AS INQ_CNT,
            NVL (title.TITLE_NM, '') AS TITLE_NM,
            CASE
               WHEN lett.lett_LVL = '' OR lett.lett_LVL IS NULL
               THEN
                  0
               ELSE
                    LENGTH (lett.lett_LVL)
                  - LENGTH (REPLACE (lett.lett_LVL, '-', ''))
                  + 1
            END
               lvl,
            lett.SECT_YN,
            lett.lett_LVL,
            atchfile.file_path AS IMG_FILE_PATH,
            atchfile.FILE_NM AS IMG_FILE_NM,
            lett.seller_no,
            CASE WHEN lett.seller_no = 0 THEN '전체' ELSE sel.seller_nm END
               seller_nm,
            '/front/customer/letter-detail?bbsId=news=' || lett.LETT_NO,
            REL_SEARCH_WORD
       FROM TB_BBS_LETT lett
            INNER JOIN TB_BBS bbs ON (lett.bbs_id = bbs.bbs_id)
            LEFT OUTER JOIN TB_ATCHFILE atchfile
               ON (    lett.lett_no = atchfile.LETT_NO
                   AND atchfile.IMG_YN = 'Y'
                   AND atchfile.del_yn = 'N')
            LEFT OUTER JOIN TC_MEMBER mmb
               ON (lett.REGR_NO = mmb.MEMBER_NO AND mmb.MEMBER_STATUS_CD = '01')
            LEFT OUTER JOIN TB_BBS_TITLE title
               ON (lett.TITLE_NO = title.TITLE_NO)
            LEFT OUTER JOIN TS_SELLER sel ON (lett.SELLER_NO = sel.SELLER_NO)
      WHERE     1 = 1
            AND bbs.SITE_NO = 1
            AND lett.SITE_NO = 1
            AND lett.DEL_YN = 'N'
            AND lett.BBS_ID = 'beststore'
   ORDER BY NVL (notice_yn, 'N') DESC,
            NVL (lett.GRP_NO, lett.LETT_NO) DESC,
            lett.LETT_NO ASC
/

create view V_SEARCH_SELLER
            (BBS_ID, LETT_NO, TITLE, CMNT_CNT, CONTENT, REGR_NO, REG_DTTM, REGR_DISP_CD, MEMBER_NM, LOGIN_ID, TITLE_NO,
             ICON_CHECK_VALUE_HOT, ICON_CHECK_VALUE_NEW, NOTICE_YN, INQ_CNT, TITLE_NM, LVL, SECT_YN, LETT_LVL,
             IMG_FILE_PATH, IMG_FILE_NM, SELLER_NO, SELLER_NM, DETAIL_LINK, REL_SEARCH_WORD)
as
SELECT lett.BBS_ID,
            lett.LETT_NO,
            lett.TITLE,
            (SELECT COUNT (*)
               FROM TB_BBS_CMNT cmnt
              WHERE     1 = 1
                    AND cmnt.LETT_NO = lett.LETT_NO
                    AND cmnt.DEL_YN != 'Y')
               AS CMNT_CNT,
            lett.CONTENT,
            lett.REGR_NO,
            lett.REG_DTTM,
            bbs.REGR_DISP_CD,
            mmb.MEMBER_NM,
            mmb.LOGIN_ID,
            title.TITLE_NO,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_HOT = 'Y'
                    AND lett.INQ_CNT > bbs.ICON_CHECK_VALUE_HOT
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_HOT,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_NEW = 'Y'
                    AND lett.REG_DTTM + bbs.ICON_CHECK_VALUE_HOT / 24 > SYSDATE
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_NEW,
            lett.notice_yn,
            NVL (lett.INQ_CNT, 0) AS INQ_CNT,
            NVL (title.TITLE_NM, '') AS TITLE_NM,
            CASE
               WHEN lett.lett_LVL = '' OR lett.lett_LVL IS NULL
               THEN
                  0
               ELSE
                    LENGTH (lett.lett_LVL)
                  - LENGTH (REPLACE (lett.lett_LVL, '-', ''))
                  + 1
            END
               lvl,
            lett.SECT_YN,
            lett.lett_LVL,
            atchfile.file_path AS IMG_FILE_PATH,
            atchfile.FILE_NM AS IMG_FILE_NM,
            lett.seller_no,
            CASE WHEN lett.seller_no = 0 THEN '전체' ELSE sel.seller_nm END
               seller_nm,
            '/front/customer/letter-detail?bbsId=news=' || lett.LETT_NO,
            REL_SEARCH_WORD
       FROM TB_BBS_LETT lett
            INNER JOIN TB_BBS bbs ON (lett.bbs_id = bbs.bbs_id)
            LEFT OUTER JOIN TB_ATCHFILE atchfile
               ON (    lett.lett_no = atchfile.LETT_NO
                   AND atchfile.IMG_YN = 'Y'
                   AND atchfile.del_yn = 'N')
            LEFT OUTER JOIN TC_MEMBER mmb
               ON (lett.REGR_NO = mmb.MEMBER_NO AND mmb.MEMBER_STATUS_CD = '01')
            LEFT OUTER JOIN TB_BBS_TITLE title
               ON (lett.TITLE_NO = title.TITLE_NO)
            LEFT OUTER JOIN TS_SELLER sel ON (lett.SELLER_NO = sel.SELLER_NO)
      WHERE     1 = 1
            AND bbs.SITE_NO = 1
            AND lett.SITE_NO = 1
            AND lett.DEL_YN = 'N'
            AND lett.BBS_ID = 'seller'
   ORDER BY NVL (notice_yn, 'N') DESC,
            NVL (lett.GRP_NO, lett.LETT_NO) DESC,
            lett.LETT_NO ASC
/

create view V_SEARCH_FREEBBS
            (BBS_ID, LETT_NO, TITLE, CMNT_CNT, CONTENT, REGR_NO, REG_DTTM, REGR_DISP_CD, MEMBER_NM, LOGIN_ID, TITLE_NO,
             ICON_CHECK_VALUE_HOT, ICON_CHECK_VALUE_NEW, NOTICE_YN, INQ_CNT, TITLE_NM, LVL, SECT_YN, LETT_LVL,
             IMG_FILE_PATH, IMG_FILE_NM, SELLER_NO, SELLER_NM, DETAIL_LINK, REL_SEARCH_WORD)
as
SELECT lett.BBS_ID,
            lett.LETT_NO,
            lett.TITLE,
            (SELECT COUNT (*)
               FROM TB_BBS_CMNT cmnt
              WHERE     1 = 1
                    AND cmnt.LETT_NO = lett.LETT_NO
                    AND cmnt.DEL_YN != 'Y')
               AS CMNT_CNT,
            lett.CONTENT,
            lett.REGR_NO,
            lett.REG_DTTM,
            bbs.REGR_DISP_CD,
            mmb.MEMBER_NM,
            mmb.LOGIN_ID,
            title.TITLE_NO,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_HOT = 'Y'
                    AND lett.INQ_CNT > bbs.ICON_CHECK_VALUE_HOT
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_HOT,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_NEW = 'Y'
                    AND lett.REG_DTTM + bbs.ICON_CHECK_VALUE_HOT / 24 > SYSDATE
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_NEW,
            lett.notice_yn,
            NVL (lett.INQ_CNT, 0) AS INQ_CNT,
            NVL (title.TITLE_NM, '') AS TITLE_NM,
            CASE
               WHEN lett.lett_LVL = '' OR lett.lett_LVL IS NULL
               THEN
                  0
               ELSE
                    LENGTH (lett.lett_LVL)
                  - LENGTH (REPLACE (lett.lett_LVL, '-', ''))
                  + 1
            END
               lvl,
            lett.SECT_YN,
            lett.lett_LVL,
            atchfile.file_path AS IMG_FILE_PATH,
            atchfile.FILE_NM AS IMG_FILE_NM,
            lett.seller_no,
            CASE WHEN lett.seller_no = 0 THEN '전체' ELSE sel.seller_nm END
               seller_nm,
            '/front/customer/letter-detail?bbsId=news=' || lett.LETT_NO,
            REL_SEARCH_WORD
       FROM TB_BBS_LETT lett
            INNER JOIN TB_BBS bbs ON (lett.bbs_id = bbs.bbs_id)
            LEFT OUTER JOIN TB_ATCHFILE atchfile
               ON (    lett.lett_no = atchfile.LETT_NO
                   AND atchfile.IMG_YN = 'Y'
                   AND atchfile.del_yn = 'N')
            LEFT OUTER JOIN TC_MEMBER mmb
               ON (lett.REGR_NO = mmb.MEMBER_NO AND mmb.MEMBER_STATUS_CD = '01')
            LEFT OUTER JOIN TB_BBS_TITLE title
               ON (lett.TITLE_NO = title.TITLE_NO)
            LEFT OUTER JOIN TS_SELLER sel ON (lett.SELLER_NO = sel.SELLER_NO)
      WHERE     1 = 1
            AND bbs.SITE_NO = 1
            AND lett.SITE_NO = 1
            AND lett.DEL_YN = 'N'
            AND lett.BBS_ID = 'freeBbs'
   ORDER BY NVL (notice_yn, 'N') DESC,
            NVL (lett.GRP_NO, lett.LETT_NO) DESC,
            lett.LETT_NO ASC
/

create view V_SEARCH_DICTIONARY_BACK
            (BBS_ID, LETT_NO, TITLE, CMNT_CNT, CONTENT, REGR_NO, REG_DTTM, REGR_DISP_CD, MEMBER_NM, LOGIN_ID, TITLE_NO,
             ICON_CHECK_VALUE_HOT, ICON_CHECK_VALUE_NEW, NOTICE_YN, INQ_CNT, TITLE_NM, LVL, SECT_YN, LETT_LVL,
             IMG_FILE_PATH, IMG_FILE_NM, SELLER_NO, SELLER_NM, DETAIL_LINK, REL_SEARCH_WORD)
as
SELECT lett.BBS_ID,
            lett.LETT_NO,
            lett.TITLE,
            (SELECT COUNT (*)
               FROM TB_BBS_CMNT cmnt
              WHERE     1 = 1
                    AND cmnt.LETT_NO = lett.LETT_NO
                    AND cmnt.DEL_YN != 'Y')
               AS CMNT_CNT,
            lett.CONTENT,
            lett.REGR_NO,
            lett.REG_DTTM,
            bbs.REGR_DISP_CD,
            mmb.MEMBER_NM,
            mmb.LOGIN_ID,
            title.TITLE_NO,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_HOT = 'Y'
                    AND lett.INQ_CNT > bbs.ICON_CHECK_VALUE_HOT
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_HOT,
            CASE
               WHEN     bbs.ICON_SET_USE_YN = 'Y'
                    AND bbs.ICON_USE_YN_NEW = 'Y'
                    AND lett.REG_DTTM + bbs.ICON_CHECK_VALUE_HOT / 24 > SYSDATE
               THEN
                  'Y'
               ELSE
                  'N'
            END
               AS ICON_CHECK_VALUE_NEW,
            lett.notice_yn,
            NVL (lett.INQ_CNT, 0) AS INQ_CNT,
            NVL (title.TITLE_NM, '') AS TITLE_NM,
            CASE
               WHEN lett.lett_LVL = '' OR lett.lett_LVL IS NULL
               THEN
                  0
               ELSE
                    LENGTH (lett.lett_LVL)
                  - LENGTH (REPLACE (lett.lett_LVL, '-', ''))
                  + 1
            END
               lvl,
            lett.SECT_YN,
            lett.lett_LVL,
            atchfile.file_path AS IMG_FILE_PATH,
            atchfile.FILE_NM AS IMG_FILE_NM,
            lett.seller_no,
            CASE WHEN lett.seller_no = 0 THEN '전체' ELSE sel.seller_nm END
               seller_nm,
               '/front/customer/letter-detail?bbsId=dictionary='
            || lett.LETT_NO,
            REL_SEARCH_WORD            
       FROM TB_BBS_LETT lett
            INNER JOIN TB_BBS bbs ON (lett.bbs_id = bbs.bbs_id)
            LEFT OUTER JOIN TB_ATCHFILE atchfile
               ON (    lett.lett_no = atchfile.LETT_NO
                   AND atchfile.IMG_YN = 'Y'
                   AND atchfile.del_yn = 'N')
            LEFT OUTER JOIN TC_MEMBER mmb
               ON (lett.REGR_NO = mmb.MEMBER_NO AND mmb.MEMBER_STATUS_CD = '01')
            LEFT OUTER JOIN TB_BBS_TITLE title
               ON (lett.TITLE_NO = title.TITLE_NO)
            LEFT OUTER JOIN TS_SELLER sel ON (lett.SELLER_NO = sel.SELLER_NO)
      WHERE     1 = 1
            AND bbs.SITE_NO = 1
            AND lett.SITE_NO = 1
            AND lett.DEL_YN = 'N'
            AND lett.BBS_ID = 'dictionary'
   ORDER BY NVL (notice_yn, 'N') DESC,
            NVL (lett.GRP_NO, lett.LETT_NO) DESC,
            lett.LETT_NO ASC
/

create view V_BIBIEM_WARRANTY as
SELECT 
    CD_CUST,
    MALL_NO_CARD,
    DATES,
    STR_CODE,
    FNC_STR_NAME@DAVI(STR_CODE) AS STR_NAME,
    POS_NO,
    TRXN_NO,
    SEQ_NO,
    EN_DATE,
    ITM_CODE,
    ITM_NAME,
    GUBUN
FROM BIBIEM_WARRANTY@DAVI
/

comment on table V_BIBIEM_WARRANTY is '비비엠 워런티카드'
/

comment on column V_BIBIEM_WARRANTY.CD_CUST is '기간계 고객번호'
/

comment on column V_BIBIEM_WARRANTY.MALL_NO_CARD is '몰카카드번호'
/

comment on column V_BIBIEM_WARRANTY.DATES is '매출일자'
/

comment on column V_BIBIEM_WARRANTY.STR_CODE is '매장코드'
/

comment on column V_BIBIEM_WARRANTY.STR_NAME is '매장명'
/

comment on column V_BIBIEM_WARRANTY.POS_NO is '포스번호'
/

comment on column V_BIBIEM_WARRANTY.TRXN_NO is '거래번호'
/

comment on column V_BIBIEM_WARRANTY.SEQ_NO is '순번'
/

comment on column V_BIBIEM_WARRANTY.EN_DATE is '워런티종료 일자'
/

comment on column V_BIBIEM_WARRANTY.ITM_CODE is '상품코드'
/

comment on column V_BIBIEM_WARRANTY.ITM_NAME is '상품명'
/

comment on column V_BIBIEM_WARRANTY.GUBUN is '정상/반품'
/

create PACKAGE             PKG_CRYPTO

 IS

 /******************************************************************************

  암호화

 ******************************************************************************/

 FUNCTION ENCRYPT(V_INPUT_STRING IN VARCHAR2,

                  V_KEY IN VARCHAR2 := 'KHJAVA301$') --> 비밀키 초기값 선언
--                   V_KEY IN VARCHAR2 := '[B@171e80db')

 RETURN RAW; --> RAW : 원시데이터타입. 알아볼 수 없도록 하기 위해서

 /******************************************************************************

  복호화

 ******************************************************************************/

 FUNCTION DECRYPT(V_INPUT_STRING IN VARCHAR2, --> 암호화되어진 문자 그대로 넣어줌

                  V_KEY IN VARCHAR2 := 'KHJAVA301$') --> 복호화할 비밀키
--                   V_KEY IN VARCHAR2 := '[B@171e80db')

 RETURN VARCHAR2;

 END PKG_CRYPTO;
/

create PACKAGE BODY             PKG_CRYPTO

 IS

  V_KEY_RAW RAW(64);

  /******************************************************************************

  암호화

 ******************************************************************************/

  FUNCTION ENCRYPT(V_INPUT_STRING IN VARCHAR2,

                  V_KEY IN VARCHAR2 := 'KHJAVA301$') --> 비밀키 초기값 선언
--                  V_KEY IN VARCHAR2 := '[B@171e80db') --> 비밀키 초기값 선언
                    
  RETURN RAW

  IS

  V_ORIGINAL_RAW RAW(64);

  V_ENCRYPTED_RAW RAW(64);

   

  BEGIN

   V_ORIGINAL_RAW := UTL_I18N.STRING_TO_RAW(V_INPUT_STRING,'AL32UTF8'); --> 문자열을 RAW 타입으로 바꿔 줌

   V_KEY_RAW      := UTL_I18N.STRING_TO_RAW(V_KEY, 'AL32UTF8');

    

   V_ENCRYPTED_RAW := DBMS_CRYPTO.ENCRYPT(SRC => V_ORIGINAL_RAW

                                         ,TYP => DBMS_CRYPTO.DES_CBC_PKCS5

                                         ,KEY => V_KEY_RAW, IV => NULL);                     

   RETURN V_ENCRYPTED_RAW;

  END ENCRYPT;

  /******************************************************************************

  복호화

 ******************************************************************************/

  FUNCTION DECRYPT(V_INPUT_STRING IN VARCHAR2, --> 암호화되어진 문자 그대로 넣어줌

                  V_KEY IN VARCHAR2 := 'KHJAVA301$') --> 복호화할 비밀키
--                  V_KEY IN VARCHAR2 := '[B@171e80db')

  RETURN VARCHAR2

   

  IS

  V_DECRYPTED_RAW  VARCHAR2(64);

  V_DECRYPTED_CHAR VARCHAR2(64);

  BEGIN

   V_KEY_RAW := UTL_I18N.STRING_TO_RAW(V_KEY, 'AL32UTF8');

    

   V_DECRYPTED_RAW := DBMS_CRYPTO.DECRYPT(SRC => V_INPUT_STRING

                                        ,TYP => DBMS_CRYPTO.DES_CBC_PKCS5

                                        ,KEY => V_KEY_RAW, IV => NULL);

   V_DECRYPTED_CHAR := UTL_I18N.RAW_TO_CHAR(V_DECRYPTED_RAW,'AL32UTF8');

    

   RETURN V_DECRYPTED_CHAR;

  END DECRYPT;

 END PKG_CRYPTO;
/

create PACKAGE             ENCRYPTION_AES

IS


/******************************************************************************

암호화

******************************************************************************/

FUNCTION ENC_AES ( INPUT_STRING IN VARCHAR2

) RETURN VARCHAR2;

/******************************************************************************

암호화 끝

******************************************************************************/



/******************************************************************************

복호화

******************************************************************************/

FUNCTION DEC_AES ( INPUT_STRING IN VARCHAR2

) RETURN VARCHAR2;

/******************************************************************************

복호화 끝

******************************************************************************/



END ENCRYPTION_AES;
/

create PACKAGE BODY             ENCRYPTION_AES

IS


/******************************************************************************

암호화

******************************************************************************/

FUNCTION ENC_AES ( INPUT_STRING IN VARCHAR2

) RETURN VARCHAR2

IS



V_ORIGINAL_RAW RAW(130); -- 암호화 전 데이타

V_KEY_DATA_RAW RAW(64); -- 키값

ENCRYTED_RAW RAW(320); -- 암호화 된 데이타

CONVERTED_STRING VARCHAR2(320); -- 형 변환 데이타



BEGIN



V_ORIGINAL_RAW := UTL_I18N.STRING_TO_RAW(INPUT_STRING, 'AL32UTF8'); -- VARCHAR2 -> RAW 타입으로 변경 (변경 이유는 아래에..)

V_KEY_DATA_RAW := UTL_I18N.STRING_TO_RAW('danvistory000000', 'AL32UTF8'); -- 키값 RAW 타입으로 변경.
--V_KEY_DATA_RAW := UTL_I18N.STRING_TO_RAW('danvistory.com00', 'AL32UTF8'); -- 키값 RAW 타입으로 변경.

ENCRYTED_RAW := DBMS_CRYPTO.ENCRYPT( SRC => V_ORIGINAL_RAW,

TYP => DBMS_CRYPTO.ENCRYPT_AES128 +

DBMS_CRYPTO.CHAIN_CBC +

DBMS_CRYPTO.PAD_PKCS5,

KEY => V_KEY_DATA_RAW );


CONVERTED_STRING := UTL_RAW.cast_to_varchar2( utl_encode.base64_encode(ENCRYTED_RAW) ) ;



-- 중요!!! raw 타입을 base64_encode()를 이용하여 encoding 후 varchar2 타입으로 변환해야한다!! 해주지 않으면

-- ORA-06502: PL/SQL: numeric or value error: hex to raw conversion error 이러한 에러를 볼 수 있을 것이다.



RETURN CONVERTED_STRING;


END ENC_AES;

/******************************************************************************

암호화 끝

******************************************************************************/




/******************************************************************************

복호화

******************************************************************************/

FUNCTION DEC_AES ( INPUT_STRING IN VARCHAR2

) RETURN VARCHAR2

IS



V_KEY_DATA_RAW RAW(64); -- 키값

DECRYPTED_RAW RAW(320); -- 복호화 값

CONVERTED_STRING VARCHAR2(320); -- 형 변환 데이타



BEGIN



V_KEY_DATA_RAW := UTL_I18N.STRING_TO_RAW('danvistory000000', 'AL32UTF8');
--V_KEY_DATA_RAW := UTL_I18N.STRING_TO_RAW('danvistory.com00', 'AL32UTF8');

DECRYPTED_RAW := DBMS_CRYPTO.DECRYPT(SRC => utl_encode.base64_decode(utl_raw.cast_to_raw(INPUT_STRING)),
-- 중요!!! varchar2 타입의 데이타를 raw 타입으로 변환 후 decoding 해야한다!! 해주지 않으면
-- ORA-06502: PL/SQL: numeric or value error: hex to raw conversion error 이러한 에러를 볼 수 있을 것이다.
TYP => DBMS_CRYPTO.ENCRYPT_AES128 +DBMS_CRYPTO.CHAIN_CBC +DBMS_CRYPTO.PAD_PKCS5,
KEY => V_KEY_DATA_RAW );


CONVERTED_STRING := UTL_I18N.RAW_TO_CHAR(DECRYPTED_RAW, 'AL32UTF8'); -- RAW -> CHAR 타입으로 변환하여 RETURN


RETURN CONVERTED_STRING;


END DEC_AES;

/******************************************************************************

복호화 끝

******************************************************************************/



END ENCRYPTION_AES;
/

create FUNCTION             fnc_cen_jego (a_str_code varchar2,a_itm_code varchar2, a_yyyymm varchar2)
/********************************************************/
/* 물류센타의 현재고를 가져온다.                        */
/********************************************************/
Return number
Is
Nh_mqty  NUMBER(10); 
    
Begin


     select case when nvl(Sum(h_qty),0) <= 0 then 0 else nvl(Sum(h_qty),0) end  
         into Nh_mqty 
         from (  
             select h_qty
               from et086viw@davi
              where ym       = a_yyyymm
                and str_code = a_str_code
                and itm_code = a_itm_code
            union all
             select -1 * nvl(sum(ord_qty),0) as h_qty
              from bt041tbl@davi a,
                   bt040tbl@davi b
             where a.ord_date = b.ord_date
               and a.str_code = b.str_code
               and a.ord_slip = b.ord_slip
               and a.itm_code = a_itm_code
               and a.ord_date between to_char(sysdate,'yyyymmdd') and to_char(sysdate + 2,'yyyymmdd')
               and b.ven_code = '000000'
               and nvl(a.sup_flg,'N') <> 'Y'
               and nvl(a.jea_flg,'N') <> 'Y'
               and a.str_code not in ( '8888' , '0000' )
               
             union all
             
            select min(b.h_qty) as h_qty  /*비스포크 재고 조회 추가 2021.03.26*/
              from am121tbl@davi a, 
                   et086tviw@davi b
             where a.tie_code = a_itm_code
               and a.itm_code = b.itm_code
               and b.str_code = '0000'
               and b.ym = to_char(sysdate,'yyyymm')
             group by a.tie_code
             );
          
     
  return Nh_mqty;
exception when no_data_found then
  return 0;
End;
/

create FUNCTION             fn_categoryName(
    inCtgNo IN VARCHAR2
     ,inSiteNo IN VARCHAR2
)
RETURN VARCHAR2

IS

categoryNm VARCHAR2(32767);
ctgNo NUMBER;

BEGIN
    categoryNm := '';
    ctgNo := TO_NUMBER(inCtgNo);
    WHILE ctgNo != 0
    LOOP
        SELECT ctg_nm || DECODE(categoryNm, '', '', ' > ' || categoryNm), up_ctg_no into categoryNm, ctgNo
        FROM tg_ctg
        WHERE site_no = inSiteNo
        AND ctg_no = ctgNo;
    END LOOP;

    RETURN categoryNm;
 
END;
/

create FUNCTION             fn_categoryNavigation(
    inCtgNo IN VARCHAR2
    ,inSiteNo IN VARCHAR2
)
RETURN VARCHAR2

IS

categoryNm VARCHAR2(32767);
ctgNo NUMBER;

BEGIN
    categoryNm := '';
    ctgNo := TO_NUMBER(inCtgNo);
    WHILE ctgNo != 0
    LOOP
        SELECT ctg_nm || DECODE(categoryNm, '', '', ' > ' || categoryNm), up_ctg_no into categoryNm, ctgNo
        FROM tg_ctg
        WHERE site_no = inSiteNo
        AND ctg_no = ctgNo;
    END LOOP;

    RETURN categoryNm;
    
END;
/

create FUNCTION             fn_getAdminName(
    inSiteNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
)
RETURN VARCHAR2

IS

memberNm VARCHAR2(100);

BEGIN
    
    SELECT MEMBER_NM into memberNm
    from tc_member
    where site_no = inSiteNo
    and member_no = inMemberNo;

    RETURN memberNm;
    
END;
/

create FUNCTION             fn_getBrandNm(
    inBrandNo IN VARCHAR2
)
RETURN VARCHAR2

IS

brandNm VARCHAR2(50);

BEGIN
    
    SELECT CASE WHEN BRAND_ENNM is null THEN BRAND_NM ELSE BRAND_ENNM END INTO brandNm 
    FROM tg_brand 
    WHERE brand_no  = inBrandNo;

    RETURN brandNm;
    
END;
/

create FUNCTION             fn_getCodeNm(
    inGrpCd IN VARCHAR2
    ,inCd IN VARCHAR2
)
RETURN VARCHAR2

IS

cdNm VARCHAR2(50);

BEGIN

    SELECT CD_NM INTO cdNm
    FROM TA_CMN_CD_DTL
    WHERE GRP_CD = inGrpCd
    AND CD = inCd;

    RETURN cdNm;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create view V_SEARCH_EVENT as
SELECT
	event.EVENT_NO,                   /* 이벤트번호 */
	event.EVENT_NM,                   /* 이벤트명 */
	event.EVENT_DSCRT,                /* 이벤트 설명 */
	event.APPLY_START_DTTM,           /* 이벤트 기간 (시작일) */
	event.APPLY_END_DTTM,             /* 이벤트 기간 (종료일) */
	event.EVENT_WNG_DTTM,             /* 이벤트 기간 (당첨발표일) */
	event.EVENT_CONTENT_HTML,         /* 이벤트 내용 */
	event.EVENT_WEB_BANNER_IMG_PATH,  /* 웹전용 이벤트배너 */
	event.EVENT_WEB_BANNER_IMG,       /* 웹전용 이벤트배너 */
	event.EVENT_MOBILE_BANNER_IMG_PATH,/* 모바일전용 이벤트배너 */
	event.EVENT_MOBILE_BANNER_IMG,    /* 모바일전용 이벤트배너 */
	event.EVENT_METHOD_CD,            /* 출석체크이벤트 참여방법 */
	(SELECT COUNT(*) FROM TP_EVENT_LETT lett WHERE lett.EVENT_NO = event.EVENT_NO AND lett.WNG_YN = 'Y') AS WNG_CNT,
	(SELECT WNG_CONTENT_HTML FROM TP_EVENT_WNG_CONTENT cont WHERE cont.EVENT_NO = event.EVENT_NO) AS WNG_CONTENT_HTML,
	fn_getCodeNm('EVENT_METHOD_CD', EVENT_METHOD_CD) AS EVENT_METHOD_CD_NM,
	event.EVENT_KIND_CD,
	CASE
	  WHEN APPLY_START_DTTM > sysdate THEN '진행전'
	  WHEN (APPLY_START_DTTM <= sysdate AND sysdate < APPLY_END_DTTM) THEN '진행중'
	  WHEN APPLY_END_DTTM <= sysdate THEN '종료'
	END  AS EVENT_STATUS_NM,
    'http://img.davichmarket.com/image/image-view?type=EVENT&path='||EVENT_WEB_BANNER_IMG_PATH||'&id1='||EVENT_WEB_BANNER_IMG AS PC_IMG_URL,
    'http://img.davichmarket.com/image/image-view?type=EVENT&path='||EVENT_MOBILE_BANNER_IMG_PATH||'&id1='||EVENT_MOBILE_BANNER_IMG AS MOBILE_IMG_URL,
    '/front/event/event-detail?eventNo=' || event.EVENT_NO AS DETAIL_LINK,
	event.EVENT_CMNT_USE_YN,                /* 댓글 사용여부 */
	event.EVENT_USE_YN,                      /* 사용여부 */
	event.REG_DTTM
FROM
	TP_EVENT event
WHERE   event.SITE_NO = 1
AND   event.DEL_YN = 'N'
/

create FUNCTION             fn_getCourierCdOrNm
(
    inParam1 IN VARCHAR2,
    inParam2 IN VARCHAR2
)
RETURN VARCHAR2

IS

returnNm VARCHAR2(8);

BEGIN

    RETURN returnNm;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCtg4lvlNm
(
    inSiteNo IN VARCHAR2,
    inCtgNo IN VARCHAR2,
    sep IN VARCHAR2
)
RETURN VARCHAR2

IS
categoryNm VARCHAR2(32767);
ctgNo NUMBER;
 
BEGIN

    categoryNm := '';
    ctgNo := TO_NUMBER(inCtgNo);
    WHILE ctgNo != 0
    LOOP
        SELECT ctg_nm || DECODE(categoryNm, '', '', sep || categoryNm), up_ctg_no into categoryNm, ctgNo
        FROM tg_ctg
        WHERE site_no = inSiteNo
        AND ctg_no = ctgNo;
    END LOOP;

    RETURN categoryNm;
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCtg4lvlNo
(
    inSiteNo IN VARCHAR2,
    inCtgNo IN VARCHAR2,
    sep IN VARCHAR2
)
RETURN VARCHAR2

IS
categoryNum VARCHAR2(32767);
ctgNo NUMBER;
 
BEGIN

    categoryNum := '';
    ctgNo := TO_NUMBER(inCtgNo);
    WHILE ctgNo != 0
    LOOP
        SELECT ctg_no || DECODE(categoryNum, '', '', sep || categoryNum), up_ctg_no into categoryNum, ctgNo
        FROM tg_ctg
        WHERE site_no = inSiteNo
        AND ctg_no = ctgNo;
    END LOOP;

    RETURN categoryNum;
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getGoodsCtg4lvlNo
(
    p_site_no IN INTEGER,
    p_goods_no IN VARCHAR2,
    p_sep IN VARCHAR2
)
RETURN VARCHAR2

IS

    ctgNoArr VARCHAR2(200);

BEGIN

    SELECT
       LISTAGG(CTG_NO, ',') WITHIN GROUP (ORDER BY CTG_NO)
    INTO ctgNoArr
    FROM TG_GOODS_CTG
    WHERE SITE_NO=p_site_no
          AND GOODS_NO=p_goods_no
          AND DISP_YN='Y'
          AND DEL_YN='N'
          ;

    RETURN ctgNoArr;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getGoodsCtgNoNm
(
    inParam1 IN VARCHAR2,
    inParam2 IN VARCHAR2,
    inParam3 IN VARCHAR2
)
RETURN VARCHAR2

IS

returnNm VARCHAR2(8);

BEGIN

    RETURN returnNm;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getGoodsDispImgPath
(
    goodsNo IN VARCHAR2
    ,goodsImgType IN VARCHAR2
)
RETURN VARCHAR2
IS

imgPathType VARCHAR2(50);
imgPath VARCHAR2(300);
    
BEGIN

    IF goodsImgType ='A' THEN
      SELECT TG.DISP_IMG_PATH_TYPE_A, TG.DISP_IMG_NM_TYPE_A
        INTO imgPathType, imgPath
      FROM   TG_GOODS TG
      WHERE  TG.GOODS_NO = goodsNo;

    ELSIF goodsImgType = 'B' THEN
      SELECT TG.DISP_IMG_PATH_TYPE_B, TG.DISP_IMG_NM_TYPE_B
      INTO   imgPathType, imgPath
      FROM   TG_GOODS TG
      WHERE  TG.GOODS_NO = goodsNo;

    ELSIF goodsImgType = 'C' THEN
      SELECT TG.DISP_IMG_PATH_TYPE_C, TG.DISP_IMG_NM_TYPE_C
      INTO   imgPathType, imgPath
      FROM   TG_GOODS TG
      WHERE  TG.GOODS_NO = goodsNo;

    ELSIF goodsImgType = 'D' THEN
      SELECT TG.DISP_IMG_PATH_TYPE_D, TG.DISP_IMG_NM_TYPE_D
      INTO   imgPathType, imgPath
      FROM   TG_GOODS TG
      WHERE  TG.GOODS_NO = goodsNo;

    ELSIF goodsImgType = 'E' THEN
      SELECT TG.DISP_IMG_PATH_TYPE_E, TG.DISP_IMG_NM_TYPE_E
      INTO   imgPathType, imgPath
      FROM   TG_GOODS TG
      WHERE  TG.GOODS_NO = goodsNo;
    ELSIF goodsImgType = 'F' THEN
      SELECT TG.DISP_IMG_PATH_TYPE_F, TG.DISP_IMG_NM_TYPE_F
      INTO   imgPathType, imgPath
      FROM   TG_GOODS TG
      WHERE  TG.GOODS_NO = goodsNo;
    ELSIF goodsImgType = 'G' THEN
      SELECT TG.DISP_IMG_PATH_TYPE_G, TG.DISP_IMG_NM_TYPE_G
      INTO   imgPathType, imgPath
      FROM   TG_GOODS TG
      WHERE  TG.GOODS_NO = goodsNo;
    ELSIF goodsImgType = 'M' THEN
      SELECT TG.DISP_IMG_PATH_TYPE_M, TG.DISP_IMG_NM_TYPE_M
      INTO   imgPathType, imgPath
      FROM   TG_GOODS TG
      WHERE  TG.GOODS_NO = goodsNo;  
    ELSIF goodsImgType = 'O' THEN
      SELECT TG.DISP_IMG_PATH_TYPE_O, TG.DISP_IMG_NM_TYPE_O
      INTO   imgPathType, imgPath
      FROM   TG_GOODS TG
      WHERE  TG.GOODS_NO = goodsNo;  
    ELSIF goodsImgType = 'P' THEN
      SELECT TG.DISP_IMG_PATH_TYPE_P, TG.DISP_IMG_NM_TYPE_P
      INTO   imgPathType, imgPath
      FROM   TG_GOODS TG
      WHERE  TG.GOODS_NO = goodsNo;        
    ELSE
      SELECT TG.DISP_IMG_PATH_TYPE_S, TG.DISP_IMG_NM_TYPE_S
      INTO   imgPathType, imgPath
      FROM   TG_GOODS TG
      WHERE  TG.GOODS_NO = goodsNo;
    END IF;
    
    IF imgPathType is null THEN 
    RETURN NULL;
    ELSE
    RETURN '/image/image-view?type=GOODSDTL&id1='||imgPathType||'_'||imgPath;
    END IF;

END;
/

create FUNCTION             fn_getGoodsIcon
(
    inGoodsNo IN VARCHAR2
    , inType IN VARCHAR2
)
RETURN VARCHAR2

IS

    iconImgs VARCHAR2(500);

BEGIN

    SELECT
      --utl_i18n.unescape_reference(substr(XMLAGG(XMLELEMENT(A,' ',A.ICON_IMGS) order by A.icon_no ).EXTRACT ('//text()').GETSTRINGVAL(),2)) AS ICON_IMGS
      LISTAGG(A.ICON_IMGS, '') WITHIN GROUP (ORDER BY A.icon_no) AS ICON_IMGS
      INTO iconImgs
    FROM (
       SELECT CASE WHEN A.icon_no = 1
         THEN
           /*'<i class="icon_new">？대찇？좎긽</i>'*/ /*new*/
           '<img src="/skin/img/product/icon_new.png">'
              WHEN A.icon_no = 2
                THEN
                  /*'<i class="icon_hot">留ㅼ텧吏？由？/i>' *//*hot*/
                  '<img src="/skin/img/product/icon_hot.png">'
              WHEN A.icon_no = 3
                THEN
                  /*'<i class="icon_now">吏？湲덉젣泥？/i>' *//*理쒖？媛？*/
                  '<img src="/skin/img/product/icon_low.png">'
              WHEN A.icon_no = 4
                THEN
                  /*'<i class="icon_nice">？쇱옄癒뱀뼱</i>'*/ /*？⑤룆*/
                  '<img src="/skin/img/product/icon_only.png">'
              WHEN A.icon_no = 5
                THEN
                  /*'<i class="icon_good">留쏆씠？ㅼ쭚</i>'*/ /*best*/
                  '<img src="/skin/img/product/icon_best.png">'
              WHEN A.icon_no = 6
                THEN
                  /*'<i class="icon_recomm">？몃젰？몄젙</i>'*/
                  '<img src="/resource/image/icon/'||(select img_nm from tg_icon where icon_no=A.icon_no)||'">'
              WHEN A.icon_no = 7
                THEN
                  '<img src="/resource/image/icon/'||(select img_nm from tg_icon where icon_no=A.icon_no)||'">'
              ELSE
                '<img src="/resource/image/icon/'||(select img_nm from tg_icon where icon_no=A.icon_no)||'">'
              END AS ICON_IMGS
               ,A.ICON_NO
       FROM TG_GOODS_ICON A
       WHERE A.GOODS_NO = inGoodsNo
       ORDER BY A.ICON_NO
     ) A;
         
    RETURN iconImgs;
 
END;
/

create FUNCTION             fn_getGoodsImgPath
(
    goodsNo IN VARCHAR2
    ,goodsImgType IN VARCHAR2
)
RETURN VARCHAR2
IS

imgPath VARCHAR2(8);
imgNm VARCHAR2(300);
    
BEGIN

    SELECT B.IMG_PATH ,B.IMG_NM INTO imgPath,imgNm 
    FROM TG_GOODS_IMG_SET A, TG_GOODS_IMG_DTL B
    WHERE A.GOODS_IMGSET_NO = B.GOODS_IMGSET_NO
    AND A.GOODS_NO = goodsNo
    AND B.GOODS_IMG_TYPE = goodsImgType
    AND A.DLGT_IMG_YN = 'Y';

    RETURN '/image/image-view?type=GOODSDTL&id1='||imgPath||'_'||imgNm;

END;
/

create view V_SEARCH_MAGAZINE as
SELECT /*+ INDEX(GDS IDX_TG_GOODS_003)   INDEX(ITM IDX_TG_ITEM_001) */
         GDS.SEO_SEARCH_WORD,
          GDS.GOODS_NO,
          GDS.GOODS_TYPE_CD,
          GDS.SELLER_NO,
          (SELECT SELLER_NM
             FROM TS_SELLER
            WHERE SELLER_NO = GDS.SELLER_NO)
             AS SELLER_NM,
          (SELECT SELLER_CMS_RATE
             FROM TS_SELLER
            WHERE SELLER_NO = GDS.SELLER_NO)
             AS SELLER_CMS_RATE,
          GDS.GOODS_NM,
          GDS.ITEM_NO,
          GDS.GOODS_SALE_STATUS_CD,
          fn_getCodeNm ('GOODS_SALE_STATUS_CD', GDS.GOODS_SALE_STATUS_CD)
             AS GOODS_SALE_STATUS_NM,
          GDS.DISP_YN,
          GDS.GOODSEACH_DLVRC AS GOODS_DLVRC,
          GDS.RSV_ONLY_YN,
          GDS.DLVR_SET_CD,
          GDS.PACK_UNIT_DLVRC,
          TS.DEFAULT_DLVRC_TYPE_CD,
          TS.DEFAULT_DLVRC,
          TS.DEFAULT_DLVR_MIN_DLVRC,
          (CASE
              WHEN GDS.DLVR_SET_CD = '2'
              THEN
                 0
              WHEN GDS.DLVR_SET_CD = '3'
              THEN
                 NVL (GDS.GOODSEACH_DLVRC, 0)
              WHEN GDS.DLVR_SET_CD = '4'
              THEN
                 NVL (GDS.PACK_UNIT_DLVRC, 0)
              ELSE
                 (CASE
                     WHEN TS.DEFAULT_DLVRC_TYPE_CD = '2'
                     THEN
                        NVL (TS.DEFAULT_DLVRC, 0)
                     WHEN TS.DEFAULT_DLVRC_TYPE_CD = '3'
                     THEN
                        NVL (TS.DEFAULT_DLVR_MIN_DLVRC, 0)
                     ELSE
                        0
                  END)
           END)
             AS GOODSEACH_DLVRC,
          GDS.MODEL_NM,
          GDS.PR_WORDS,
          GDS.MMFT,
          fn_getGoodsImgPath (GDS.GOODS_NO, '01') AS GOODS_IMG_01,
          fn_getGoodsImgPath (GDS.GOODS_NO, '02') AS GOODS_IMG_02,
          fn_getGoodsImgPath (GDS.GOODS_NO, '03') AS GOODS_IMG_03,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'A') AS GOODS_DISP_IMG_A,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'B') AS GOODS_DISP_IMG_B,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'C') AS GOODS_DISP_IMG_C,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'D') AS GOODS_DISP_IMG_D,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'E') AS GOODS_DISP_IMG_E,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'M') AS GOODS_DISP_IMG_M,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'P') AS GOODS_DISP_IMG_P,
          (SELECT B.IMG_PATH || '_' || B.IMG_NM
             FROM TG_GOODS_IMG_SET A, TG_GOODS_IMG_DTL B
            WHERE     A.GOODS_IMGSET_NO = B.GOODS_IMGSET_NO
                  AND A.GOODS_NO = GDS.GOODS_NO
                  AND B.GOODS_IMG_TYPE = '02'
                  AND A.DLGT_IMG_YN = 'N'
                  AND ROWNUM = 1)
             AS GOODS_THUM_IMG,
          fn_getGoodsIcon (GDS.GOODS_NO, '5') AS ICON_IMGS,
          GDS.REG_DTTM,
          GDS.UPD_DTTM,
          NVL (GDS.ACCM_SALE_AMT, 0) AS ACCM_SALE_AMT,
          NVL (GDS.ACCM_SALE_CNT, 0) AS ACCM_SALE_CNT,
          NVL (GDS.ACCM_GOODSLETT_CNT, 0) AS ACCM_GOODSLETT_CNT,
          GDS.GOODS_SVMN_POLICY_USE_YN,
          NVL (GDS.GOODS_SVMN_AMT, 0) AS GOODS_SVMN_AMT,
          NVL (GDS.GOODS_SCORE, 0) AS GOODS_SCORE,
          GDS.BRAND_NO,
          fn_getBrandNm (GDS.BRAND_NO) AS BRAND_NM,
          ITM.ITEM_NM,
          NVL (ITM.CUSTOMER_PRICE, 0) AS CUSTOMER_PRICE,
          NVL (ITM.SALE_PRICE, 0) AS SALE_PRICE,
          DECODE (NVL (ITM.CUSTOMER_PRICE, 0),
                  0, 0,
                  100 - (ITM.SALE_PRICE / ITM.CUSTOMER_PRICE) * 100)
             AS SALE_RATE,
          NVL (ITM.SUPPLY_PRICE, 0) AS SUPPLY_PRICE,
          ITM.SEP_SUPPLY_PRICE_YN AS SEP_SUPPLY_PRICE_YN,
          CONCAT (
             ROUND (
                  (ITM.SALE_PRICE - ITM.SUPPLY_PRICE)
                / DECODE (ITM.SALE_PRICE * 100,
                          0, NULL,
                          ITM.SALE_PRICE * 100)),
             '%')
             AS COMMISION_RATE,
          NVL (
             (SELECT MAX (PRMT_DC_VALUE)
                FROM TP_PROMOTION TP, TP_PROMOTION_TARGET_GOODS TPTG
               WHERE     TP.PRMT_NO = TPTG.PRMT_NO
                     AND TPTG.GOODS_NO = GDS.GOODS_NO
                     AND TO_CHAR (SYSDATE, 'YYYY-MM-DD HH24:MI:SS') BETWEEN TO_CHAR (
                                                                               TP.APPLY_START_DTTM,
                                                                               'YYYY-MM-DD HH24:MI:SS')
                                                                        AND TO_CHAR (
                                                                               TP.APPLY_END_DTTM,
                                                                               'YYYY-MM-DD HH24:MI:SS')
                     AND TP.USE_YN = 'Y'
                     AND TP.DEL_YN = 'N'),
             0)
             AS PRMT_DC_VALUE,
          (SELECT MAX (PRMT_DC_GB_CD)
             FROM TP_PROMOTION TP, TP_PROMOTION_TARGET_GOODS TPTG
            WHERE     TP.PRMT_NO = TPTG.PRMT_NO
                  AND TPTG.GOODS_NO = GDS.GOODS_NO
                  AND TO_CHAR (SYSDATE, 'YYYY-MM-DD HH24:MI:SS') BETWEEN TO_CHAR (
                                                                            TP.APPLY_START_DTTM,
                                                                            'YYYY-MM-DD HH24:MI:SS')
                                                                     AND TO_CHAR (
                                                                            TP.APPLY_END_DTTM,
                                                                            'YYYY-MM-DD HH24:MI:SS')
                  AND TP.USE_YN = 'Y'
                  AND TP.DEL_YN = 'N')
             AS PRMT_DC_GB_CD,
          NVL (ITM.STOCK_QTT, 0) AS STOCK_QTT,
          (CASE
              WHEN TS.STOCK_SET_YN = 'Y' AND TS.AVAIL_STOCK_SALE_YN = 'Y'
              THEN
                 NVL (TS.AVAIL_STOCK_QTT, 0)
              ELSE
                 0
           END)
             AS AVAIL_STOCK_QTT,
          GDS.ADULT_CERTIFY_YN,
          NVL (GDS.BASKET_SET_CNT, 0) AS BASKET_SET_CNT,
          NVL (GDS.FAVGOODS_SET_CNT, 0) AS FAVGOODS_SET_CNT,
          NVL (GDS.GOODS_INQ_CNT, 0) AS GOODS_INQ_CNT,
          GDS.SITE_NO,
          '/front/goods/goods-detail?goodsNo=' || GDS.GOODS_NO AS DETAIL_LINK
     FROM TG_GOODS GDS
          LEFT JOIN TG_GOODS_GUN_ATTR GGA ON GDS.GOODS_NO = GGA.GOODS_NO
          LEFT JOIN TC_VISION_CHECK_GUN VCG ON GGA.GUN_NO = VCG.GUN_NO,
          TG_ITEM ITM
          LEFT OUTER JOIN TI_ERP_PRD_MAPPING TPM
             ON     TPM.MALL_GOODS_NO = ITM.GOODS_NO
                AND TPM.MALL_ITM_CODE = ITM.ITEM_NO,
          TS_SITE TS
    WHERE     GDS.ITEM_NO = ITM.ITEM_NO
          AND GDS.SITE_NO = TS.SITE_NO
          AND GDS.SITE_NO = 1
          AND GDS.DEL_YN = 'N'
          AND GDS.DISP_YN = 'Y'
          AND ITM.DEL_YN = 'N'
          AND GDS.GOODS_CONTS_GB_CD = '02'
/

create FUNCTION             fn_getGoodsImgPathNo
(
     goodsNo IN VARCHAR2
    ,goodsImgType IN VARCHAR2
    ,rnum IN NUMBER
)
RETURN VARCHAR2
IS
rowNo NUMBER;
imgPath VARCHAR2(8);
imgNm VARCHAR2(300);
    
BEGIN
    SELECT RN,IMG_PATH,IMG_NM
        INTO rowNo,imgPath,imgNm     
    FROM (
    SELECT
        ROW_NUMBER() OVER(ORDER BY A.GOODS_IMGSET_NO ASC) RN,
        B.IMG_PATH ,B.IMG_NM 
    FROM TG_GOODS_IMG_SET A, TG_GOODS_IMG_DTL B
    WHERE A.GOODS_IMGSET_NO = B.GOODS_IMGSET_NO
    AND A.GOODS_NO = goodsNo
    AND B.GOODS_IMG_TYPE = goodsImgType
    AND A.DLGT_IMG_YN <> 'Y'
    )
    WHERE RN =rnum
    ;

    RETURN '/image/image-view?type=GOODSDTL&id1='||imgPath||'_'||imgNm;

END;
/

create FUNCTION             fn_getGoodsNm
(
    inGoodsNo IN VARCHAR2
)
RETURN VARCHAR2

IS

returnNm VARCHAR2(100);

BEGIN

    select goods_nm into returnNm
    from tg_goods 
    where goods_no = inGoodsNo;

    RETURN returnNm;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getIfMappingCd
(
    inParam1 IN VARCHAR2,
    inParam2 IN VARCHAR2,
    inParam3 IN VARCHAR2
)
RETURN VARCHAR2

IS

returnNm VARCHAR2(8);

BEGIN

    RETURN returnNm;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getIfNo(
    p_site_no INT,
    p_seq_gb VARCHAR
)
RETURN VARCHAR2
IS
    
    ifNo VARCHAR2(16);
    today VARCHAR(8);
    prevday VARCHAR(8);
    nextSeq VARCHAR(7);
    initSeq VARCHAR(7);
    newifNo VARCHAR(15);
/**************************************************
    Main Transaction？？？곹뼢？놁씠 Commit/Rollback 泥섎━
***************************************************/
PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN

    /* interface no generate...*/
    SELECT
        TO_CHAR( SYSDATE,'YYYYMMDD' )
        ,SUBSTR(SEQ,0,8)
        ,LPAD(to_number(SUBSTR(SEQ,-7))+1,7,'0')
        ,'0000001'
        ,TO_CHAR( SYSDATE,'YYYYMMDD' ) || LPAD(to_number(SUBSTR(SEQ,-7))+1,7,'0')
    INTO today,prevday,nextSeq,initSeq,newifNo
    FROM TA_SEQ
    WHERE SITE_NO=p_site_no
          AND SEQ_GB = p_seq_gb;

    /* ？좎쭨蹂？seq setting...*/
    IF today != prevday THEN
        ifNo := today||initSeq;
    ELSE
        ifNo := prevday||nextSeq;
    END IF;

    /* 理쒖쥌 seq ？？？？*/
    UPDATE TA_SEQ
    SET SEQ = ifNo
    WHERE SITE_NO = p_site_no
          AND SEQ_GB = p_seq_gb ;
    COMMIT;
 
    RETURN ifNo;

END;
/

create FUNCTION             fn_getItemOptAttrNm
(
    itemNo IN VARCHAR2,
    itemVer IN INTEGER,
    sep1 VARCHAR2,
    sep2 VARCHAR2
)
RETURN VARCHAR2

IS

result VARCHAR2(200);

BEGIN

    SELECT t2.optAttrNm1 || t2.optAttrNm2 || t2.optAttrNm3 || t2.optAttrNm4 as optAttrNm
    INTO   result
    FROM (
           SELECT
             case when opt_no1 is not null then
               NVL(opt_nm1 || ':' || attr_nm1,'')
             else
               ''
             end as optAttrNm1,
             case when opt_no2 is not null then
               NVL(',' || opt_nm2 || ':' || attr_nm2,'')
             else
               ''
             end AS optAttrNm2,
             case when opt_no2 is not null then
               NVL(',' || opt_nm3 || ':' || attr_nm3,'')
             else
               ''
             end AS optAttrNm3,
             case when opt_no2 is not null then
               NVL(',' || opt_nm4 || ':' ||  attr_nm4,'')
             else
               ''
             end  AS optAttrNm4
           FROM (
                  SELECT
                    A.OPT_NO1,
                    (SELECT OPT_NM
                     FROM TG_OPT
                     WHERE OPT_NO = A.OPT_NO1)   AS opt_nm1,
                    A.ATTR_NO1,
                    (SELECT ATTR_NM
                     FROM TG_ATTR
                     WHERE ATTR_NO = A.ATTR_NO1) AS attr_nm1,
                    A.OPT_NO2,
                    (SELECT OPT_NM
                     FROM TG_OPT
                     WHERE OPT_NO = A.OPT_NO2)   AS opt_nm2,
                    A.ATTR_NO2,
                    (SELECT ATTR_NM
                     FROM TG_ATTR
                     WHERE ATTR_NO = A.ATTR_NO2) AS attr_nm2,
                    A.OPT_NO3,
                    (SELECT OPT_NM
                     FROM TG_OPT
                     WHERE OPT_NO = A.OPT_NO3)   AS opt_nm3,
                    A.ATTR_NO3,
                    (SELECT ATTR_NM
                     FROM TG_ATTR
                     WHERE ATTR_NO = A.ATTR_NO3) AS attr_nm3,
                    A.OPT_NO4,
                    (SELECT OPT_NM
                     FROM TG_OPT
                     WHERE OPT_NO = A.OPT_NO4)   AS opt_nm4,
                    A.ATTR_NO4,
                    (SELECT ATTR_NM
                     FROM TG_ATTR
                     WHERE ATTR_NO = A.ATTR_NO4) AS attr_nm4
                  FROM TG_ITEM_ATTR A
                  WHERE ITEM_NO = itemNo
                        AND ATTR_VER = itemVer
                ) t1
         ) t2;


    RETURN result;
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getMemberGradeNm
(
    siteNo IN INT,
    memberNo IN VARCHAR2
)
RETURN VARCHAR2

IS

v_memberGradeNm VARCHAR2(20);

BEGIN

    SELECT
         (SELECT MEMBER_GRADE_NM 
             FROM TC_MEMBER_GRADE B 
           WHERE A.MEMBER_GRADE_NO=B.MEMBER_GRADE_NO 
             AND B.SITE_NO=SITENO) AS MEMBER_GRADE_NM
         INTO v_memberGradeNm
        FROM TC_MEMBER A  
    WHERE  
    A.SITE_NO = siteNo
    AND A.MEMBER_NO = memberNo
    ;
    
 RETURN v_memberGradeNm;
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getMemberIdName
(
    inParam1 IN VARCHAR2,
    inParam2 IN VARCHAR2
)
RETURN VARCHAR2

IS

returnNm VARCHAR2(20);

BEGIN
    
    RETURN returnNm;
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getMemberName
(
    inParam1 IN VARCHAR2,
    inParam2 IN VARCHAR2
)
RETURN VARCHAR2

IS

returnNm VARCHAR2(20);

BEGIN
    
    RETURN returnNm;
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getOptAttrName
(
    optAttrNo IN VARCHAR2,
    type IN VARCHAR2
)
RETURN VARCHAR2
IS

result VARCHAR2(200);
    
BEGIN

    IF type ='OPT' THEN
      SELECT opt_nm
      INTO   result
      FROM tg_opt
      WHERE opt_no = optAttrNo;
    ELSIF type ='ATTR' THEN
      SELECT attr_nm
      INTO   result
      FROM tg_attr
      WHERE attr_no = optAttrNo;
    END IF;
    
    RETURN result;
    
END;
/

create FUNCTION             fn_getOptAttrNm
(
    goodsNo IN VARCHAR2,
    optNo IN INT,
    attrNo IN INT,
    sep IN VARCHAR2
)
RETURN VARCHAR2
IS

result VARCHAR2(200);
    
BEGIN

    SELECT B.OPT_NM || sep || C.ATTR_NM as optAttrNm
    INTO   result
    FROM
      TG_GOODS_OPT A
      ,TG_OPT B
      ,TG_ATTR C
    WHERE A.OPT_NO = B.OPT_NO
          AND B.OPT_NO = C.OPT_NO
          AND A.GOODS_NO = goodsNo
          AND A.OPT_NO = optNo
          AND C.ATTR_NO = attrNo;
    RETURN result;
    
END;
/

create FUNCTION             fn_getOrdNo
RETURN VARCHAR2
IS

ordNo VARCHAR2(16);
    
BEGIN

    select to_char(SYSDATE, 'yymmddHH24miss') || lpad((SUBSTR(nvl(max(ord_no),0), -4 ,4 )+1),4,'0' ) 
    into ordNo
    from to_ord;
    RETURN ordNo;
    
END;
/

create FUNCTION             fn_getSeq
(
    inSiteNo IN INT,
    inSeqGb IN VARCHAR2
)
RETURN VARCHAR2
IS

v_sql VARCHAR2(1000);
num NUMBER;
    
BEGIN

    IF inSiteNo = 0 THEN
        v_sql := 'SELECT SEQ_'||inSeqGb||'.NEXTVAL FROM DUAL';
    ELSE
        v_sql := 'SELECT SEQ_'||inSiteNo||'_'||inSeqGb||'.NEXTVAL FROM DUAL';
    END IF;
    
    EXECUTE IMMEDIATE v_sql INTO num;
    
    RETURN num;
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            num := 0;
        WHEN OTHERS THEN
            num := 0;
    
END;
/

create trigger TO_CLAIM_HIST_TRG01
    after insert or update
    on TO_CLAIM
    for each row
BEGIN
    IF(INSERTING OR UPDATING('RETURN_CD') OR INSERTING OR UPDATING('CLAIM_CD') )
    THEN
      INSERT INTO TO_CLAIM_HIST(
         CLAIM_HIST_SEQ
        ,CLAIM_NO
        ,ORD_NO
        ,ORD_DTL_SEQ
        ,RETURN_CD
        ,CLAIM_CD
        ,REGR_NO
        ,REG_DTTM
        ,UPDR_NO
      )
      VALUES
        (
          fn_getSeq(0, 'CLAIM_HIST_NO')
          ,:NEW.CLAIM_NO
          ,:NEW.ORD_NO
          ,:NEW.ORD_DTL_SEQ
          ,:NEW.RETURN_CD
          ,:NEW.CLAIM_CD
          ,:NEW.REGR_NO
          ,:NEW.REG_DTTM
          ,:NEW.UPDR_NO
        );
    END IF;

  END;

/

create FUNCTION             fn_getIfSno
(
    inSiteNo IN INT,
    inSeqGb IN VARCHAR2
)
RETURN VARCHAR2
IS

seqIfSno VARCHAR2(16);
    
BEGIN
    
    SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(FN_GETSEQ(0, 'IF_SNO'), 7, '0') INTO seqIfSno FROM DUAL;
    
    RETURN seqIfSno;    

END;
/

create FUNCTION             fn_getSeqCurr
(
    inSiteNo IN INT,
    inSeqGb IN VARCHAR2
)
RETURN VARCHAR2
IS

v_sql VARCHAR2(1000);
num NUMBER;
    
BEGIN

    IF inSiteNo = 0 THEN
        v_sql := 'SELECT SEQ_'||inSeqGb||'.CURRVAL FROM DUAL';
    ELSE
        v_sql := 'SELECT SEQ_'||inSiteNo||'_'||inSeqGb||'.CURRVAL FROM DUAL';
    END IF;
    
    EXECUTE IMMEDIATE v_sql INTO num;
    
    RETURN num;
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            num := 0;
        WHEN OTHERS THEN
            num := 0;
    
END;
/

create FUNCTION             fn_kkoMsgSeq
RETURN NUMBER
IS
num NUMBER;
    
BEGIN
    SELECT kko_msg_seq.nextval
    INTO num
    FROM dual;
  
    RETURN num;
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            num := 0;
        WHEN OTHERS THEN
            num := 0;
    
END;
/

create FUNCTION             fn_Substring_Index
(
    IN_STR         IN VARCHAR2     -- 스트링
    ,IN_DIVIDE     IN VARCHAR2     -- 구분자
    ,IN_POS     IN NUMBER     -- 위치
)
RETURN VARCHAR2
IS

V_TMP1 NUMBER;
V_TMP2 NUMBER;
V_TMP3 NUMBER;

BEGIN
    -- 구분자 포함여부 체크
    V_TMP1 := INSTR(IN_STR, IN_DIVIDE, 1, 1);

    -- 구분자 개수
    V_TMP2 := LENGTH(IN_STR) - LENGTH(REPLACE(IN_STR, IN_DIVIDE, ''));

    -- 위치 절대값
    V_TMP3 := IN_POS;
    IF V_TMP3 < 0 THEN
        V_TMP3 := IN_POS * (-1);
    END IF;
    

    IF IN_POS = 0 THEN
        -- 구분자가 0이면 빈값 리턴
        RETURN '';
    ELSIF V_TMP1 = 0 THEN
        -- 구분자가 포함되지 않을 경우 전체 RETURN
        RETURN IN_STR;
    ELSIF V_TMP2 < V_TMP3 THEN
        -- 위치 절대값이 특정문자 개수보다 크면 전체 RETURN
        RETURN IN_STR;
    ELSIF IN_POS > 0 THEN
        -- 처음부터 해당 위치까지 RETURN
        RETURN SUBSTR(IN_STR, 1, INSTR(IN_STR, IN_DIVIDE, 1, V_TMP3)-1);
    ELSIF IN_POS < 0 THEN
        -- 뒤에서 해당 위치부터 마지막까지 RETURN
        RETURN SUBSTR(IN_STR, INSTR(IN_STR, IN_DIVIDE,1, V_TMP3)+1, LENGTH(IN_STR));
    ELSE
        -- 전체 RETURN
        RETURN IN_STR;
    END IF;
END;
/

create FUNCTION             fn_updStockChg
(
    p_itemNo IN VARCHAR2,
    p_qtt IN NUMBER
)
RETURN NUMBER IS returnVal TG_ITEM.STOCK_QTT%type;

pragma autonomous_transaction;

BEGIN

    UPDATE TG_ITEM
        SET STOCK_QTT=STOCK_QTT-(p_qtt)
     WHERE ITEM_NO=p_itemNo;

    COMMIT;

    SELECT STOCK_QTT
    INTO returnVal
    FROM TG_ITEM
    WHERE ITEM_NO=p_itemNo;

    RETURN returnVal;

END;
/

create FUNCTION SPLIT(P_INPUT_LIST VARCHAR2, P_RET_THIS_ONE NUMBER, P_DELIMITER VARCHAR2)
RETURN VARCHAR2
 
/*****************************************************************************************/
/* P_DELIMITER로 구분된 문자열을 구분하여 해당 INDEX의 값을 리턴하는 함수
/*
/* CREATE BY D.CAT 
/*****************************************************************************************/
IS
  V_LIST VARCHAR2(32767) := P_DELIMITER || P_INPUT_LIST;
  START_POSITION NUMBER;
  END_POSITION NUMBER;
BEGIN
  START_POSITION := INSTR(V_LIST, P_DELIMITER, 1, P_RET_THIS_ONE);
  IF START_POSITION > 0 THEN
    END_POSITION := INSTR( V_LIST, P_DELIMITER, 1, P_RET_THIS_ONE + 1);
    IF END_POSITION = 0 THEN
      END_POSITION := LENGTH(V_LIST) + 1;
    END IF;
    RETURN(TRIM(SUBSTR(V_LIST, START_POSITION + 1, END_POSITION - START_POSITION - 1)));
  ELSE
    RETURN NULL;
  END IF;
END SPLIT;
/

create PROCEDURE             SP_IF_004_SBN_BTCH_LOG_REG (
   gubun    IN VARCHAR2, -- 구분
   ifNo     IN   VARCHAR2, -- 연계 번호
   ifId     IN   VARCHAR2, -- 연계 ID 
   siteNo   IN   NUMBER,     -- 사이트번호
   ifPgmId  IN VARCHAR2,--연계프로그램ID
   ifPgmNm IN VARCHAR2,--연계프로그램명
   btchGbCd IN NUMBER, -- 배치구분코드 1: 프로시저배치 , 2:API 배치
   dataCnt  IN NUMBER,  -- 데이터 건수 
   sucsYn   IN VARCHAR2, -- 성공여부
   errCd    IN VARCHAR2, -- 에러코드
   resultContent IN VARCHAR2, -- 결과내용
   btchWorkContent IN VARCHAR2, -- 배치 작업 내용
   regrNo   IN   NUMBER,  -- 등록자번호
   updrNo   IN   NUMBER  -- 수정자번호    
)
IS
BEGIN
   /*** 사방넷 배치 로그 등록/수정 프로시져  ***/
   IF gubun ='REG' THEN 
       INSERT INTO DAVICH_MALL.TI_IF_SBN_BTCH_LOG (
       IF_NO, IF_ID, SITE_NO, 
       BTCH_PGM_ID, BTCH_PGM_NM, BTCH_GB_CD, 
       START_DTTM, DATA_CNT, 
       SUCS_YN, ERR_CD, RESULT_CONTENT, 
       BTCH_WORK_CONTENT, REGR_NO, REG_DTTM, 
       UPDR_NO, UPD_DTTM) 
    VALUES ( 
         ifNo /* IF_NO */,
         ifId/* IF_ID */,
         siteNo/* SITE_NO */,
         ifPgmId/* BTCH_PGM_ID */,
         ifPgmNm/* BTCH_PGM_NM */,
         btchGbCd/* BTCH_GB_CD */,
         TO_CHAR(sysdate, 'YYYYMMDDHH24MISS')/* START_DTTM */,
         dataCnt/* DATA_CNT */,
         sucsYn/* SUCS_YN */,
         errCd/* ERR_CD */,
         resultContent/* RESULT_CONTENT */,
         btchWorkContent/* BTCH_WORK_CONTENT */,
         regrNo/* REGR_NO */,
         sysdate/* REG_DTTM */,
         updrNo/* UPDR_NO */,
         sysdate/* UPD_DTTM */ );
   ELSE 
        UPDATE DAVICH_MALL.TI_IF_SBN_BTCH_LOG
            SET    BTCH_GB_CD        = btchGbCd,
                   DATA_CNT          = dataCnt,
                   SUCS_YN           = sucsYn,
                   ERR_CD            = errCd,
                   RESULT_CONTENT    = resultContent,
                   BTCH_WORK_CONTENT = btchWorkContent,
                   UPDR_NO           = updrNo,
                   UPD_DTTM          = sysdate
            WHERE  IF_NO             = ifNo
            ;
   END IF; 
   
   UPDATE DAVICH_MALL.TI_IF_SBN_BTCH_LOG
            SET    END_DTTM          = TO_CHAR(sysdate, 'YYYYMMDDHH24MISS')/* END_DTTM */,
                   UPDR_NO           = updrNo,
                   UPD_DTTM          = sysdate
            WHERE  IF_NO             = ifNo
            ;
   
  
Commit ;



END;
/

create PROCEDURE             SP_IF_01_GOODS_REG_UPD (
   regrNo   IN   NUMBER,  -- 등록자번호
   updrNo   IN   NUMBER,  -- 수정자번호       
   ifNo     IN   VARCHAR2, -- 인터페이스 번호
   siteNo   IN   NUMBER     -- 사이트번호
)
IS
    startIfSno VARCHAR2(16);
    endIfSno VARCHAR2(16);
    ifSno VARCHAR2(16);
    execKey VARCHAR2(100);  
    execConts VARCHAR2(500);
    
BEGIN

  /*** 사방넷 상품등록&수정 프로시져 ***/
  /***************************************************************************/ 
  
  /***************************************************************************/ 
  /*** 1.연계 테이블에 전송데이터 등록......................insert TI_GOODS_REG_UPD_IF ***/
  /***************************************************************************/
   
   INSERT INTO DAVICH_MALL.TI_GOODS_REG_UPD_IF (
   IF_SNO, IF_ID, IF_NO, 
   SITE_NO, REG_GB, GOODS_NM, 
   ITEM_NM, MODEL_NM, BRAND_NM, 
   GOODS_NO, ITEM_NO, ATTR_VER, 
   SRCH_WORD, GOODS_GB_CD, CTG_NO1, 
   CTG_NO2, CTG_NO3, CTG_NO4, 
   MMFT, HABITAT, PRDT_YR, 
   MK_DT, SSN_GB_CD, MW_GB_CD, 
   SALE_STATUS_CD, TAX_GB_CD, DLVRC_GB_CD, 
   GOODS_EACH_DLVRC, SUPPLY_PRICE, SALE_PRICE, 
   CUSTOMER_PRICE, OPT_GB1, OPT_ITEM1, 
   OPT_GB2, OPT_ITEM2, GOODS_IMG_TYPE, 
   DLGT_IMG_PATH, IMG_PATH1, IMG_PATH2, 
   IMG_PATH3, IMG_PATH4, IMG_PATH5, 
   GOODS_DTL_DSCRT, MTRL_HABITAT, STOCK_MANAGE_USE_YN, 
   OPT_UPD_PSB_YN, ATTR_INFO_UPD_YN, ATTR_CLSF_CD, 
   ATTR_VALUE1, ATTR_VALUE2, ATTR_VALUE3, 
   ATTR_VALUE4, ATTR_VALUE5, ATTR_VALUE6, 
   ATTR_VALUE7, ATTR_VALUE8, ATTR_VALUE9, 
   ATTR_VALUE10, ATTR_VALUE11, ATTR_VALUE12, 
   ATTR_VALUE13, ATTR_VALUE14, ATTR_VALUE15, 
   ATTR_VALUE16, ATTR_VALUE17, ATTR_VALUE18, 
   ATTR_VALUE19, ATTR_VALUE20, ATTR_VALUE21, 
   ATTR_VALUE22, ATTR_VALUE23, ATTR_VALUE24, 
   IMPT_REGIST_NO, SBN_IF_YN, SBN_IF_MSG, 
   NAVER_SEND_YN, DAUM_SEND_YN, BTCH_PRC_YN, 
   REGR_NO, REG_DTTM, UPDR_NO, 
   UPD_DTTM) 
   /*
   SELECT 
        IF_SNO, IF_ID, IF_NO, 
   SITE_NO, REG_GB, GOODS_NM, 
   ITEM_NM, MODEL_NM, BRAND_NM, 
   GOODS_NO, ITEM_NO, ATTR_VER, 
   SRCH_WORD, GOODS_GB_CD, CTG_NO1, 
   CTG_NO2, CTG_NO3, CTG_NO4, 
   MMFT, HABITAT, PRDT_YR, 
   MK_DT, SSN_GB_CD, MW_GB_CD, 
   SALE_STATUS_CD, TAX_GB_CD, DLVRC_GB_CD, 
   GOODS_EACH_DLVRC, SUPPLY_PRICE, SALE_PRICE, 
   CUSTOMER_PRICE, OPT_GB1, OPT_ITEM1, 
   OPT_GB2, OPT_ITEM2, GOODS_IMG_TYPE, 
   DLGT_IMG_PATH, IMG_PATH1, IMG_PATH2, 
   IMG_PATH3, IMG_PATH4, IMG_PATH5, 
   GOODS_DTL_DSCRT, MTRL_HABITAT, STOCK_MANAGE_USE_YN, 
   OPT_UPD_PSB_YN, ATTR_INFO_UPD_YN, ATTR_CLSF_CD, 
   ATTR_VALUE1, ATTR_VALUE2, ATTR_VALUE3, 
   ATTR_VALUE4, ATTR_VALUE5, ATTR_VALUE6, 
   ATTR_VALUE7, ATTR_VALUE8, ATTR_VALUE9, 
   ATTR_VALUE10, ATTR_VALUE11, ATTR_VALUE12, 
   ATTR_VALUE13, ATTR_VALUE14, ATTR_VALUE15, 
   ATTR_VALUE16, ATTR_VALUE17, ATTR_VALUE18, 
   ATTR_VALUE19, ATTR_VALUE20, ATTR_VALUE21, 
   ATTR_VALUE22, ATTR_VALUE23, ATTR_VALUE24, 
   IMPT_REGIST_NO, SBN_IF_YN, SBN_IF_MSG, 
   NAVER_SEND_YN, DAUM_SEND_YN, BTCH_PRC_YN, 
   REGR_NO, REG_DTTM, UPDR_NO, 
   UPD_DTTM 
 FROM (
 */
SELECT 
   /* ROW_NUMBER() OVER(ORDER BY TG.REG_DTTM DESC) PAGING_NUM,*/
     fn_getIfSno(0,'IF_SNO') AS IF_SNO  /* 연계일련번호 */
    ,'IF-J-001' AS IF_ID /* 연계 ID */
    ,ifNo         AS IF_NO/* 연계번호 (param) */
    ,siteNo       AS    SITE_NO /* 사이트번호 (param) */
    ,CASE WHEN 
        (SELECT COUNT(1) FROM TI_GOODS_REG_UPD_IF A
         LEFT OUTER JOIN TG_ITEM_ATTR B 
            ON A.ITEM_NO=B.ITEM_NO
            AND A.ATTR_VER = NVL(B.ATTR_VER,0) 
        WHERE A.GOODS_NO=TI.GOODS_NO 
        AND A.ITEM_NO=TI.ITEM_NO)  > 0
     THEN 2
     ELSE 1 
     END 
     AS  REG_GB  /* 등록구분 1:등록 2:수정*/    
    ,TG.GOODS_NM AS GOODS_NM /* 상품명 */
    ,TI.ITEM_NM  AS ITEM_NM   /* 단품명 */
    ,TG.MODEL_NM AS MODEL_NM /* 모델명 */
    ,fn_getBrandNm(TG.BRAND_NO) AS BRAND_NM /* 브랜드명*/
    ,TG.GOODS_NO AS GOODS_NO /*상품번호*/
    ,TI.ITEM_NO AS ITEM_NO /*단품 번호*/
    ,(SELECT NVL(MAX(ATTR_VER),0) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO) AS ATTR_VER/* 속성 VER */
    ,TG.SEO_SEARCH_WORD AS SRCH_WORD /* 검색어 */
    ,'3' AS GOODS_GB_CD /*  상품 구분 코드 1:위탁상품 2:제조상품 3:사업상품 4:직영상품 */
    ,(
    SELECT  DISTINCT SPLIT(fn_getCtg4lvlNo(1, A.CTG_NO, '>'),1,'>') 
                    FROM TG_CTG A
                    WHERE A.CTG_NO IN (
                    SELECT  TGC.CTG_NO 
                    FROM TG_GOODS_CTG TGC
                               WHERE TGC.GOODS_NO  = TG.GOODS_NO
                                 AND TGC.SITE_NO  =  1
                                 AND TGC.DEL_YN = 'N'
                                 AND DLGT_CTG_YN='Y'
                    )
    ) as CTG_NO1 /*카테고리번호1*/
    ,(
    SELECT  DISTINCT SPLIT(fn_getCtg4lvlNo(1, A.CTG_NO, '>'),2,'>') 
                    FROM TG_CTG A
                    WHERE A.CTG_NO IN (
                    SELECT  TGC.CTG_NO 
                    FROM TG_GOODS_CTG TGC
                               WHERE TGC.GOODS_NO  = TG.GOODS_NO
                                 AND TGC.SITE_NO  =  1
                                 AND TGC.DEL_YN = 'N'
                                 AND DLGT_CTG_YN='Y'
                    )
    ) as CTG_NO2 /*카테고리번호2*/
    ,(
    SELECT  DISTINCT SPLIT(fn_getCtg4lvlNo(1, A.CTG_NO, '>'),3,'>') 
                    FROM TG_CTG A
                    WHERE A.CTG_NO IN (
                    SELECT  TGC.CTG_NO 
                    FROM TG_GOODS_CTG TGC
                               WHERE TGC.GOODS_NO  = TG.GOODS_NO
                                 AND TGC.SITE_NO  =  1
                                 AND TGC.DEL_YN = 'N'
                                 AND DLGT_CTG_YN='Y'
                    )
    ) as CTG_NO3 /*카테고리번호3*/
    ,(
    SELECT  DISTINCT SPLIT(fn_getCtg4lvlNo(1, A.CTG_NO, '>'),4,'>') 
                    FROM TG_CTG A
                    WHERE A.CTG_NO IN (
                    SELECT  TGC.CTG_NO 
                    FROM TG_GOODS_CTG TGC
                               WHERE TGC.GOODS_NO  = TG.GOODS_NO
                                 AND TGC.SITE_NO  =  1
                                 AND TGC.DEL_YN = 'N'
                                 AND DLGT_CTG_YN='Y'
                    )
    ) as CTG_NO4 /*카테고리번호4*/
    ,TG.MMFT AS MMFT /*제조사*/
    ,TG.HABITAT AS HABITAT /*원산지*/
    ,'' AS PRDT_YR/*생산년도*/
    ,'' AS MK_DT /*제조일자*/
    ,'' AS SSN_GB_CD /*계절구분코드*/
    ,'' AS MW_GB_CD /*남여구분코드*/
    ,
    CASE WHEN TG.DEL_YN='Y' THEN '6'
    ELSE  
        CASE WHEN TG.GOODS_SALE_STATUS_CD ='1' THEN '2'
            WHEN TG.GOODS_SALE_STATUS_CD ='2' THEN '4'
            WHEN TG.GOODS_SALE_STATUS_CD ='3' THEN '1'
            WHEN TG.GOODS_SALE_STATUS_CD ='4' THEN '3'
        END
    END SALE_STATUS_CD  /*판매상태코드  1:대기중,2:공급중,3:일시중지,4:완전품절,5:미사용,6:삭제*/
    ,CASE WHEN TG.TAX_GB_CD ='1' THEN '1' ELSE '4' END TAX_GB_CD/*과세구분코드*/
    ,CASE WHEN DLVR_SET_CD ='2' THEN '1'
        ELSE
        CASE WHEN TG.DLVR_PAYMENT_KIND_CD ='1' THEN '3' 
        WHEN TG.DLVR_PAYMENT_KIND_CD ='2' THEN '2' 
        WHEN TG.DLVR_PAYMENT_KIND_CD ='3' THEN '4' 
        END      
    END DLVRC_GB_CD /*배송비구분코드 1	:무료 ,2:착불,3:선결제,4:착불/선결제*/
    ,CASE WHEN DLVR_SET_CD ='1' THEN 
            CASE WHEN (SELECT ts.DEFAULT_DLVRC_TYPE_CD FROM TS_SELLER_DLVR_POLICY ts WHERE ts.SELLER_NO = TG.SELLER_NO) ='1' then '0'
                 WHEN (SELECT ts.DEFAULT_DLVRC_TYPE_CD FROM TS_SELLER_DLVR_POLICY ts WHERE   ts.SELLER_NO = TG.SELLER_NO) ='2' then 
                    (SELECT TO_CHAR(ts.DEFAULT_DLVRC) FROM TS_SELLER_DLVR_POLICY ts WHERE   ts.SELLER_NO = TG.SELLER_NO)
                 WHEN (SELECT ts.DEFAULT_DLVRC_TYPE_CD FROM TS_SELLER_DLVR_POLICY ts WHERE ts.SELLER_NO = TG.SELLER_NO)='3' then 
                    (SELECT to_char(ts.DEFAULT_DLVR_MIN_DLVRC) FROM TS_SELLER_DLVR_POLICY ts WHERE ts.SELLER_NO = TG.SELLER_NO)
             END
        WHEN DLVR_SET_CD ='2' THEN '0'
        WHEN DLVR_SET_CD ='3' THEN to_char(TG.GOODSEACH_DLVRC)
        WHEN DLVR_SET_CD ='4' THEN to_char(TG.PACK_UNIT_DLVRC)
        WHEN DLVR_SET_CD ='6' THEN to_char(TG.GOODSEACH_CNDTADD_DLVRC)
        ELSE
        '0' 
        END      GOODS_EACH_DLVRC   /*상품별배송비*/
    ,TI.SUPPLY_PRICE AS SUPPLY_PRICE /*공급가격*/
    ,TI.SALE_PRICE AS SALE_PRICE /*판매가격*/
    ,TI.CUSTOMER_PRICE AS CUSTOMER_PRICE /*소비자가격*/
    ,NVL((SELECT DISTINCT (SELECT TOP.OPT_NM FROM TG_OPT TOP WHERE TOP.OPT_NO=TIA.OPT_NO1) 
        FROM TG_ITEM_ATTR TIA WHERE TIA.ITEM_NO = TI.ITEM_NO
        AND TIA.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
        ),'단품') AS OPT_GB1/*옵션구분1*/
    /*,NVL((SELECT DISTINCT (select LISTAGG(attr_nm, ',') WITHIN GROUP (ORDER BY attr_nm)  from tg_attr where opt_no=TIA.opt_no1)
        FROM TG_ITEM_ATTR TIA WHERE TIA.ITEM_NO = TI.ITEM_NO
        AND TIA.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
        ),'단품^^'||TI.STOCK_QTT)  OPT_ITEM1 --옵션항목1       */
    ,NVL(
        (SELECT DISTINCT LISTAGG(
                (SELECT ATTR_NM FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO1)||
                --(SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM) FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO2)||
                --(SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO3)||
                --(SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO4) ||
                  '^^' || (SELECT STOCK_QTT FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO)
                  ||'^^' || (SELECT SALE_PRICE-TI.SALE_PRICE  FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO) 
                , ',') WITHIN GROUP (ORDER BY 1)  
           FROM TG_ITEM_ATTR A WHERE A.ITEM_NO IN (
                                        SELECT ITEM_NO 
                                          FROM TG_ITEM  
                                         WHERE GOODS_NO=TG.GOODS_NO
                                           AND USE_YN='Y'
                                           AND DEL_YN='N'
                                        )
                                        AND A.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
                                        )
     ,'단품^^'||TI.STOCK_QTT)  OPT_ITEM1     --옵션항목1
    ,NVL((SELECT DISTINCT (SELECT TOP.OPT_NM FROM TG_OPT TOP WHERE TOP.OPT_NO=TIA.OPT_NO2) 
        FROM TG_ITEM_ATTR TIA WHERE TIA.ITEM_NO = TI.ITEM_NO
        AND TIA.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
        ),'') AS OPT_GB2/*옵션구분2*/
    , NVL((SELECT DISTINCT (select LISTAGG(attr_nm, ',') WITHIN GROUP (ORDER BY attr_nm)  from tg_attr where opt_no=TIA.OPT_NO2)
        FROM TG_ITEM_ATTR TIA WHERE TIA.ITEM_NO = TI.ITEM_NO
        AND TIA.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
        ),'')  OPT_ITEM2 /*옵션항목2*/
    ,'' GOODS_IMG_TYPE /*상품이미지유형*/
    ,fn_getGoodsImgPath(TG.GOODS_NO,'02') DLGT_IMG_PATH /*대표이미지경로*/
    ,fn_getGoodsImgPathNo(TG.GOODS_NO,'02',1) IMG_PATH1 /*이미지경로1*/
    ,fn_getGoodsImgPathNo(TG.GOODS_NO,'02',2) IMG_PATH2  /*이미지경로2*/
    ,fn_getGoodsImgPathNo(TG.GOODS_NO,'02',3) IMG_PATH3 /*이미지경로3*/
    ,fn_getGoodsImgPathNo(TG.GOODS_NO,'02',4) IMG_PATH4 /*이미지경로4*/
    ,fn_getGoodsImgPathNo(TG.GOODS_NO,'02',5) IMG_PATH5 /*이미지경로5*/
    ,(SELECT CONTENT FROM TG_GOODS_DSCRT WHERE GOODS_NO=TG.GOODS_NO ) GOODS_DTL_DSCRT/*상품상세설명*/
    ,'' MTRL_HABITAT/*재료원산지*/
    ,'N' STOCK_MANAGE_USE_YN /*재고관리사용여부*/
    ,'2' OPT_UPD_PSB_YN  /*옵션수정가능여부*/
    ,'Y' ATTR_INFO_UPD_YN /*속성정보수정여부*/
    ,
    (SELECT 
        CASE WHEN LENGTH(NVL(A.NOTIFY_NO,'')) > 3 THEN '035' ELSE  
            LPAD(A.NOTIFY_NO, 3, '0')
        END AS NOTIFY_NO 
       FROM TG_NOTIFY_INFO A  
      WHERE A.NOTIFY_NO= TG.NOTIFY_NO
    ) AS   ATTR_CLSF_CD /*속성분류코드*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),1,'^') as ATTR_VALUE1 /*속성값1*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),2,'^') ATTR_VALUE2 /*속성값2*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),3,'^') ATTR_VALUE3 /*속성값3*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),4,'^') ATTR_VALUE4 /*속성값4*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),5,'^') ATTR_VALUE5 /*속성값5*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),6,'^') ATTR_VALUE6 /*속성값6*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),7,'^') ATTR_VALUE7 /*속성값7*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),8,'^') ATTR_VALUE8 /*속성값8*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),9,'^') ATTR_VALUE9 /*속성값9*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),10,'^') ATTR_VALUE10 /*속성값10*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),11,'^') ATTR_VALUE11 /*속성값11*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),12,'^') ATTR_VALUE12 /*속성값12*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),13,'^') ATTR_VALUE13 /*속성값13*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),14,'^') ATTR_VALUE14 /*속성값14*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),15,'^') ATTR_VALUE15 /*속성값15*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),16,'^') ATTR_VALUE16 /*속성값16*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),17,'^') ATTR_VALUE17 /*속성값17*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),18,'^') ATTR_VALUE18 /*속성값18*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),19,'^') ATTR_VALUE19 /*속성값19*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),20,'^') ATTR_VALUE20 /*속성값20*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),21,'^') ATTR_VALUE21 /*속성값21*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),22,'^') ATTR_VALUE22 /*속성값22*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),23,'^') ATTR_VALUE23 /*속성값23*/
    ,SPLIT(
        (SELECT LISTAGG(B.ITEM_VALUE, '^') WITHIN GROUP (ORDER BY B.ITEM_NO) AS  ITEM_VALUE
           FROM TG_NOTIFY_ITEM A ,TG_GOODS_NOTIFY B
          WHERE A.ITEM_NO=B.ITEM_NO 
          AND A.NOTIFY_NO = TG.NOTIFY_NO
          AND B.GOODS_NO = TG.GOODS_NO     
    ),24,'^') ATTR_VALUE24 /*속성값24*/
    ,'' IMPT_REGIST_NO/*수입신고번호*/
    ,'N' SBN_IF_YN /*사방넷연계여부*/
    ,'' SBN_IF_MSG /*사방넷연계메세지*/
    ,'N' NAVER_SEND_YN /*네이버전송여부*/
    ,'N' DAUM_SEND_YN/*다음전송여부*/
    ,'Y' BTCH_PRC_YN /*배치처리여부*/
    ,regrNo as REGR_NO/*등록자번호*/
    ,SYSDATE as REG_DTTM/*등록일시*/
    ,updrNo as UPDR_NO/*수정자번호*/
    ,SYSDATE as UPD_DTTM/*수정일시*/
   FROM TG_GOODS TG
    LEFT OUTER JOIN  TG_ITEM TI
      ON  TG.GOODS_NO = TI.GOODS_NO
      AND TG.ITEM_NO=TI.ITEM_NO
      AND TI.USE_YN='Y'
     WHERE TG.DEL_YN='N'
     AND TG.ITEM_NO IS NOT NULL
     AND TG.SBN_LINK_YN='Y';
     /*
    and exists (
        SELECT 1
        FROM TG_ITEM_ATTR TIA WHERE TIA.ITEM_NO = TI.ITEM_NO
        AND TIA.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
)
    ) TAB1
    where TAB1.PAGING_NUM between 301 and 310;
    */
    
    
   /***************************************************************************/ 
   /*** 2.연계사방넷배치 로그 등록 ......................... insert TI_IF_SBN_BTCH_LOG ***/
   /***************************************************************************/ 
   INSERT INTO DAVICH_MALL.TI_IF_SBN_BTCH_LOG (
   IF_NO, IF_ID, SITE_NO, 
   BTCH_PGM_ID, BTCH_PGM_NM, BTCH_GB_CD, 
   START_DTTM, END_DTTM, DATA_CNT, 
   SUCS_YN, ERR_CD, RESULT_CONTENT, 
   BTCH_WORK_CONTENT, REGR_NO, REG_DTTM, 
   UPDR_NO, UPD_DTTM) 
    VALUES ( 
     ifNo /* IF_NO */, 
     'IF-J-001' /* IF_ID */,
     siteNo/* SITE_NO */,
     'SabangnetService.registGoods'/* BTCH_PGM_ID */,
     '1.상품등록&수정 연계'/* BTCH_PGM_NM */,
     '1' /* BTCH_GB_CD */,
     TO_CHAR(sysdate, 'YYYYMMDDHH24MISS') /* START_DTTM */,
     null /* END_DTTM */,
     null /* DATA_CNT */,
     'N'/* SUCS_YN */,
     null/* ERR_CD */,
     null/* RESULT_CONTENT */,
     null/* BTCH_WORK_CONTENT */,
     regrNo /* REGR_NO */,
     SYSDATE/* REG_DTTM */,
     updrNo/* UPDR_NO */,
     SYSDATE /* UPD_DTTM */ 
     );
     
   /***************************************************************************/ 
   /***           3.연계실행로그 등록, 수정 ..................... insert,update TI_IF_EXEC_LOG ***/
   /***************************************************************************/
   

    FOR GOODS_LIST  IN (
        SELECT 
             IF_SNO
            ,NVL(ITEM_NO||'-'||ATTR_VER||'-'||REG_GB, '') AS EXEC_KEY  
            ,NVL(GOODS_NO||'-'||ITEM_NO||'-'||ATTR_VER, '') AS EXEC_CONTS
        FROM TI_GOODS_REG_UPD_IF
        WHERE IF_NO=ifNo
        AND SITE_NO=siteNo
    )
    LOOP	
        INSERT INTO TI_IF_EXEC_LOG (
               IF_SNO
             , IF_NO
             , IF_PGM_NM
             , START_DTTM
             , SUCS_YN
             , ERR_CD
             , RESULT_CONTENT
             , EXEC_KEY
             , EXEC_CONTS
             , LOG_FILE_PATH
             , LOG_FILE_NM
             , REGR_NO
             , REG_DTTM
        ) VALUES (
               GOODS_LIST.IF_SNO
             , ifNo
             , '1.상품등록&수정 연계'
             , TO_CHAR(sysdate, 'YYYYMMDDHH24MISS')
             , ''
             , ''
             , ''
             , GOODS_LIST.EXEC_KEY
             , GOODS_LIST.EXEC_CONTS
             , ''
             , ''
             , regrNo
             , sysdate
             );
             
    END LOOP;
    
    /***************************************************************************/ 
   /***      4.연계로그 수정 .... 시작/종료 연계일련번호, 데이터건수 . update TI_IF_LOG ***/
   /***************************************************************************/
   
   SELECT MIN(IF_SNO),MAX(IF_SNO)
        INTO startIfSno ,endIfSno 
     FROM TI_GOODS_REG_UPD_IF
   WHERE IF_NO = ifNo;
        
   UPDATE DAVICH_MALL.TI_IF_LOG
        SET    DATA_CNT       = 0,
               DATA_TOT_CNT   = 0,
               END_IF_SNO     = startIfSno,
               START_DTTM     = TO_CHAR(sysdate, 'YYYYMMDDHH24MISS'),
               START_IF_SNO   = endifSno,
               UPD_DTTM       = sysdate,
               UPDR_NO        = updrNo
        WHERE  IF_NO          = ifNo
        ;
         
   
   /***************************************************************************/ 
   /*** 5.연계사방넷배치로그 수정 .......................... update TI_IF_SBN_BTCH_LOG      ***/
   /***************************************************************************/
    UPDATE DAVICH_MALL.TI_IF_SBN_BTCH_LOG
    SET    
           END_DTTM          = TO_CHAR(sysdate, 'YYYYMMDDHH24MISS'),
           SUCS_YN           = 'Y',
           UPDR_NO           = updrNo,
           UPD_DTTM          = sysdate
    WHERE  IF_NO             = ifNo
    ;
   
   
    Commit ;



END;
/

create PROCEDURE             SP_IF_02_GOODS_SMR_UPD (
   regrNo   IN   NUMBER,  -- 등록자번호
   updrNo   IN   NUMBER,  -- 수정자번호       
   ifNo     IN   VARCHAR2, -- 인터페이스 번호
   siteNo   IN   NUMBER     -- 사이트번호
)
IS
    startIfSno VARCHAR2(16);
    endIfSno VARCHAR2(16);
BEGIN
   /*** 사방넷 상품요약수정 프로시져 ***/
   /***************************************************************************/
   /*** 1.연계 테이블에 전송데이터 등록......................insert TI_GOODS_SMR_UPD_IF  ***/
   /***************************************************************************/
   
   INSERT INTO DAVICH_MALL.TI_GOODS_SMR_UPD_IF (
   IF_SNO, IF_ID, IF_NO, 
   SITE_NO, GOODS_NM, ITEM_NM, 
   GOODS_NO, ITEM_NO, ATTR_VER, 
   SALE_STATUS_CD, SUPPLY_PRICE, SALE_PRICE, 
   CUSTOMER_PRICE, ATTR_CLSF_CD, OPT_ITEM1, 
   OPT_ITEM2, OPT_ITEM3, OPT_ITEM4, 
   OPT_ITEM5, OPT_ITEM6, OPT_ITEM7, 
   SBN_IF_YN, SBN_IF_MSG, NAVER_SEND_YN, 
   DAUM_SEND_YN, BTCH_PRC_YN, REGR_NO, 
   REG_DTTM, UPDR_NO, UPD_DTTM) 
   /*
SELECT 
       IF_SNO, IF_ID, IF_NO, 
   SITE_NO, GOODS_NM, ITEM_NM, 
   GOODS_NO, ITEM_NO, ATTR_VER, 
   SALE_STATUS_CD, SUPPLY_PRICE, SALE_PRICE, 
   CUSTOMER_PRICE, ATTR_CLSF_CD, OPT_ITEM1, 
   OPT_ITEM2, OPT_ITEM3, OPT_ITEM4, 
   OPT_ITEM5, OPT_ITEM6, OPT_ITEM7, 
   SBN_IF_YN, SBN_IF_MSG, NAVER_SEND_YN, 
   DAUM_SEND_YN, BTCH_PRC_YN, REGR_NO, 
   REG_DTTM, UPDR_NO, UPD_DTTM
 FROM (
 */
SELECT 
   /* ROW_NUMBER() OVER(ORDER BY TG.REG_DTTM DESC) PAGING_NUM,*/
     fn_getIfSno(0,'IF_SNO') AS IF_SNO  /* 연계일련번호 */
     ,'IF-J-002' AS IF_ID /* 연계 ID IF_ID */
     ,ifNo         AS IF_NO/* 연계번호 (parm) IF_NO */
     ,siteNo       AS    SITE_NO /* 사이트번호 (param) SITE_NO */
     ,TG.GOODS_NM AS GOODS_NM /* 상품명  GOODS_NM */
     ,TI.ITEM_NM  AS ITEM_NM   /* 단품명  ITEM_NM */
     ,TG.GOODS_NO AS GOODS_NO /*상품번호  GOODS_NO */
     ,TI.ITEM_NO AS ITEM_NO /*단품 번호 ITEM_NO */
     ,(SELECT NVL(MAX(ATTR_VER),0) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO) AS ATTR_VER/* 속성 VER   ATTR_VER */
     ,
        CASE WHEN TG.DEL_YN='Y' THEN '6'
        ELSE  
            CASE WHEN TG.GOODS_SALE_STATUS_CD ='1' THEN '2'
                WHEN TG.GOODS_SALE_STATUS_CD ='2' THEN '4'
                WHEN TG.GOODS_SALE_STATUS_CD ='3' THEN '1'
                WHEN TG.GOODS_SALE_STATUS_CD ='4' THEN '3'
            END
        END SALE_STATUS_CD  /*판매상태코드  1:대기중,2:공급중,3:일시중지,4:완전품절,5:미사용,6:삭제  SALE_STATUS_CD */
     ,TI.SUPPLY_PRICE AS SUPPLY_PRICE /*공급가격 SUPPLY_PRICE */
     ,TI.SALE_PRICE AS SALE_PRICE /*판매가격 SALE_PRICE */
     ,TI.CUSTOMER_PRICE AS CUSTOMER_PRICE /*소비자가격 CUSTOMER_PRICE */
     ,
    (SELECT 
        CASE WHEN LENGTH(NVL(A.NOTIFY_NO,'')) > 3 THEN '035' ELSE  
            LPAD(A.NOTIFY_NO, 3, '0')
        END AS NOTIFY_NO 
       FROM TG_NOTIFY_INFO A  
      WHERE A.NOTIFY_NO= TG.NOTIFY_NO
    ) AS   ATTR_CLSF_CD /*속성분류코드*/
    ,SPLIT(
        (SELECT DISTINCT LISTAGG(
                (SELECT ATTR_NM FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO1)||
                (SELECT DECODE(ATTR_NM,NULL,'',':'||ATTR_NM) FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO2)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO3)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO4) 
                  ||'^^' || (SELECT STOCK_QTT FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO)
                  ||'^^' ||  (SELECT SALE_PRICE FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO) 
                , ',') WITHIN GROUP (ORDER BY 1)  
           FROM TG_ITEM_ATTR A WHERE A.ITEM_NO IN (
                                        SELECT ITEM_NO 
                                          FROM TG_ITEM  
                                         WHERE GOODS_NO=TG.GOODS_NO
                                           AND USE_YN='Y'
                                           AND DEL_YN='N'
                                        )
                                        AND A.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
        ),1,',') as OPT_ITEM1 /*옵션항목1 OPT_ITEM1 */
     ,SPLIT(
        (SELECT DISTINCT LISTAGG(
                (SELECT ATTR_NM FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO1)||
                (SELECT DECODE(ATTR_NM,NULL,'',':'||ATTR_NM) FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO2)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO3)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO4) 
                  ||'^^' || (SELECT STOCK_QTT FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO)
                  ||'^^' ||  (SELECT SALE_PRICE FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO) 
                , ',') WITHIN GROUP (ORDER BY 1)  
           FROM TG_ITEM_ATTR A WHERE A.ITEM_NO IN (
                                        SELECT ITEM_NO 
                                          FROM TG_ITEM  
                                         WHERE GOODS_NO=TG.GOODS_NO
                                           AND USE_YN='Y'
                                           AND DEL_YN='N'
                                        )
                                        AND A.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
        ),2,',') as OPT_ITEM2 /*옵션항목2  OPT_ITEM2 */
     ,SPLIT(
        (SELECT DISTINCT LISTAGG(
                (SELECT ATTR_NM FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO1)||
                (SELECT DECODE(ATTR_NM,NULL,'',':'||ATTR_NM) FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO2)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO3)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO4) 
                  ||'^^' || (SELECT STOCK_QTT FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO)
                  ||'^^' ||  (SELECT SALE_PRICE FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO) 
                , ',') WITHIN GROUP (ORDER BY 1)  
           FROM TG_ITEM_ATTR A WHERE A.ITEM_NO IN (
                                        SELECT ITEM_NO 
                                          FROM TG_ITEM  
                                         WHERE GOODS_NO=TG.GOODS_NO
                                           AND USE_YN='Y'
                                           AND DEL_YN='N'
                                        )
                                        AND A.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
        ),3,',') as OPT_ITEM3 /*옵션항목3 OPT_ITEM3 */
     ,SPLIT(
        (SELECT DISTINCT LISTAGG(
                (SELECT ATTR_NM FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO1)||
                (SELECT DECODE(ATTR_NM,NULL,'',':'||ATTR_NM) FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO2)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO3)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO4) 
                  ||'^^' || (SELECT STOCK_QTT FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO)
                  ||'^^' ||  (SELECT SALE_PRICE FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO) 
                , ',') WITHIN GROUP (ORDER BY 1)  
           FROM TG_ITEM_ATTR A WHERE A.ITEM_NO IN (
                                        SELECT ITEM_NO 
                                          FROM TG_ITEM  
                                         WHERE GOODS_NO=TG.GOODS_NO
                                           AND USE_YN='Y'
                                           AND DEL_YN='N'
                                        )
                                        AND A.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
        ),4,',') as OPT_ITEM4 /*옵션항목4 OPT_ITEM4 */
        ,SPLIT(
        (SELECT DISTINCT LISTAGG(
                (SELECT ATTR_NM FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO1)||
                (SELECT DECODE(ATTR_NM,NULL,'',':'||ATTR_NM) FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO2)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO3)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO4) 
                  ||'^^' || (SELECT STOCK_QTT FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO)
                  ||'^^' ||  (SELECT SALE_PRICE-TI.SALE_PRICE FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO) 
                , ',') WITHIN GROUP (ORDER BY 1)  
           FROM TG_ITEM_ATTR A WHERE A.ITEM_NO IN (
                                        SELECT ITEM_NO 
                                          FROM TG_ITEM  
                                         WHERE GOODS_NO=TG.GOODS_NO
                                           AND USE_YN='Y'
                                           AND DEL_YN='N'
                                        )
                                        AND A.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
        ),5,',') AS OPT_ITEM5 /* OPT_ITEM5 */
     ,SPLIT(
        (SELECT DISTINCT LISTAGG(
                (SELECT ATTR_NM FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO1)||
                (SELECT DECODE(ATTR_NM,NULL,'',':'||ATTR_NM) FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO2)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO3)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO4) 
                  ||'^^' || (SELECT STOCK_QTT FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO)
                  ||'^^' ||  (SELECT SALE_PRICE-TI.SALE_PRICE FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO) 
                , ',') WITHIN GROUP (ORDER BY 1)  
           FROM TG_ITEM_ATTR A WHERE A.ITEM_NO IN (
                                        SELECT ITEM_NO 
                                          FROM TG_ITEM  
                                         WHERE GOODS_NO=TG.GOODS_NO
                                           AND USE_YN='Y'
                                           AND DEL_YN='N'
                                        )
                                        AND A.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
        ),6,',') AS OPT_ITEM6 /* OPT_ITEM6 */
     ,SPLIT(
        (SELECT DISTINCT LISTAGG(
                (SELECT ATTR_NM FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO1)||
                (SELECT DECODE(ATTR_NM,NULL,'',':'||ATTR_NM) FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO2)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO3)||
                (SELECT DECODE(ATTR_NM,NULL,'',' '||ATTR_NM)  FROM TG_ATTR WHERE ATTR_NO=A.ATTR_NO4) 
                  ||'^^' || (SELECT STOCK_QTT FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO)
                  ||'^^' ||  (SELECT SALE_PRICE-TI.SALE_PRICE FROM TG_ITEM WHERE ITEM_NO=A.ITEM_NO) 
                , ',') WITHIN GROUP (ORDER BY 1)  
           FROM TG_ITEM_ATTR A WHERE A.ITEM_NO IN (
                                        SELECT ITEM_NO 
                                          FROM TG_ITEM  
                                         WHERE GOODS_NO=TG.GOODS_NO
                                           AND USE_YN='Y'
                                           AND DEL_YN='N'
                                        )
                                        AND A.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
        ),7,',') AS OPT_ITEM7 /* OPT_ITEM7 */
     ,'N' SBN_IF_YN /*사방넷연계여부 SBN_IF_YN */
     ,'' SBN_IF_MSG /*사방넷연계메세지  SBN_IF_MSG */
     ,'N' NAVER_SEND_YN /*네이버전송여부  NAVER_SEND_YN */
     ,'N' DAUM_SEND_YN/*다음전송여부 DAUM_SEND_YN */
     ,'Y' BTCH_PRC_YN /*배치처리여부 BTCH_PRC_YN */
     ,regrNo as REGR_NO  /*등록자번호 REGR_NO */
     ,SYSDATE as REG_DTTM/*등록일시 REG_DTTM */
     ,updrNo as UPDR_NO/*수정자번호 UPDR_NO */
     ,SYSDATE as UPD_DTTM/*수정일시 UPD_DTTM */ 
      FROM TG_GOODS TG 
        LEFT OUTER JOIN  TG_ITEM TI
      ON  TG.GOODS_NO = TI.GOODS_NO
      AND TG.ITEM_NO=TI.ITEM_NO
      AND TI.USE_YN='Y'
     WHERE TG.DEL_YN='N'  
     AND TG.SBN_LINK_YN='Y';
    /* 
      and exists (
        SELECT 1
        FROM TG_ITEM_ATTR TIA WHERE TIA.ITEM_NO = TI.ITEM_NO
        AND TIA.ATTR_VER = (SELECT MAX(ATTR_VER) FROM TG_ITEM_ATTR WHERE ITEM_NO = TI.ITEM_NO)
    )
    ) TAB1
    where TAB1.PAGING_NUM between 301 and 310;
     */
   
   /***************************************************************************/
   /***   2.연계사방넷배치 로그 등록 ......................... insert TI_IF_SBN_BTCH_LOG ***/
   /***************************************************************************/
   INSERT INTO DAVICH_MALL.TI_IF_SBN_BTCH_LOG (
   IF_NO, IF_ID, SITE_NO, 
   BTCH_PGM_ID, BTCH_PGM_NM, BTCH_GB_CD, 
   START_DTTM, END_DTTM, DATA_CNT, 
   SUCS_YN, ERR_CD, RESULT_CONTENT, 
   BTCH_WORK_CONTENT, REGR_NO, REG_DTTM, 
   UPDR_NO, UPD_DTTM) 
    VALUES ( 
     ifNo /* IF_NO */, 
     'IF-J-002' /* IF_ID */,
     siteNo/* SITE_NO */,
     'SabangnetService.smrUpdGoods'/* BTCH_PGM_ID */,
     '2.상품요약수정 연계'/* BTCH_PGM_NM */,
     '1' /* BTCH_GB_CD */,
     TO_CHAR(sysdate, 'YYYYMMDDHH24MISS') /* START_DTTM */,
     null /* END_DTTM */,
     null /* DATA_CNT */,
     'N'/* SUCS_YN */,
     null/* ERR_CD */,
     null/* RESULT_CONTENT */,
     null/* BTCH_WORK_CONTENT */,
     regrNo /* REGR_NO */,
     SYSDATE/* REG_DTTM */,
     updrNo/* UPDR_NO */,
     SYSDATE /* UPD_DTTM */ 
     );
     
   /***************************************************************************/  
   /*** 3.연계실행로그 등록, 수정 ..................... insert,update TI_IF_EXEC_LOG ***/
   /***************************************************************************/
   FOR GOODS_LIST  IN (
        SELECT 
             IF_SNO
            ,NVL(ITEM_NO||'-'||ATTR_VER||'-2', '') AS EXEC_KEY  
            ,NVL(GOODS_NO||'-'||ITEM_NO||'-'||ATTR_VER, '') AS EXEC_CONTS
        FROM TI_GOODS_SMR_UPD_IF
        WHERE IF_NO=ifNo
        AND SITE_NO=siteNo
    )
    LOOP	
   INSERT INTO TI_IF_EXEC_LOG (
               IF_SNO
             , IF_NO
             , IF_PGM_NM
             , START_DTTM
             , SUCS_YN
             , ERR_CD
             , RESULT_CONTENT
             , EXEC_KEY
             , EXEC_CONTS
             , LOG_FILE_PATH
             , LOG_FILE_NM
             , REGR_NO
             , REG_DTTM
        ) VALUES (
                GOODS_LIST.IF_SNO
             , ifNo
             , '2.상품요약수정 연계'
             , TO_CHAR(sysdate, 'YYYYMMDDHH24MISS')
             , ''
             , ''
             , ''
             , GOODS_LIST.EXEC_KEY
             , GOODS_LIST.EXEC_CONTS
             , ''
             , ''
             , regrNo
             , sysdate
             );
                       
    END LOOP;
   
   /***************************************************************************/
   /*** 4.연계로그 수정 .... 시작/종료 연계일련번호, 데이터건수 . update TI_IF_LOG ***/
   /***************************************************************************/
   SELECT MIN(IF_SNO),MAX(IF_SNO)
        INTO startIfSno ,endIfSno 
     FROM TI_GOODS_SMR_UPD_IF
   WHERE IF_NO = ifNo;
        
   UPDATE DAVICH_MALL.TI_IF_LOG
        SET    DATA_CNT       = 0,
               DATA_TOT_CNT   = 0,
               END_IF_SNO     = startIfSno,
               START_DTTM     = TO_CHAR(sysdate, 'YYYYMMDDHH24MISS'),
               START_IF_SNO   = endifSno,
               UPD_DTTM       = sysdate,
               UPDR_NO        = updrNo
        WHERE  IF_NO          = ifNo
        ;
   
   /***************************************************************************/
   /*** 5.연계사방넷배치로그 수정 .......................... update TI_IF_SBN_BTCH_LOG ***/
   /***************************************************************************/
    UPDATE DAVICH_MALL.TI_IF_SBN_BTCH_LOG
        SET    
               END_DTTM          = TO_CHAR(sysdate, 'YYYYMMDDHH24MISS'),
               SUCS_YN           = 'Y',
               UPDR_NO           = updrNo,
               UPD_DTTM          = sysdate
        WHERE  IF_NO             = ifNo
        ;
    
Commit ;



END;
/

create PROCEDURE             SP_IF_04_INVOICE_REG (
   regrNo   IN   NUMBER,  -- 등록자번호
   updrNo   IN   NUMBER,  -- 수정자번호       
   ifNo     IN   VARCHAR2, -- 인터페이스 번호
   siteNo   IN   NUMBER     -- 사이트번호
)
IS
    startIfSno VARCHAR2(16);
    endIfSno VARCHAR2(16);
BEGIN
   /*** 사방넷 송장등록 프로시져 ***/
   
   /***************************************************************************/
   /*** 1.연계 테이블에 전송데이터 등록......................insert TI_INVOICE_REG_IF ***/
   /***************************************************************************/
   INSERT INTO DAVICH_MALL.TI_INVOICE_REG_IF (
   IF_SNO, IF_ID, IF_NO, 
   SITE_NO, ORD_NO, ORD_DTL_SEQ, 
   SBN_ORD_NO, RLS_COURIER_CD, RLS_INVOICE_NO, 
   RETURN_INVOICE_NO, SBN_IF_YN, BTCH_PRC_YN, 
   SBN_IF_MSG, REGR_NO, REG_DTTM, 
   UPDR_NO, UPD_DTTM) 
    SELECT 
     fn_getIfSno(0,'IF_SNO') AS IF_SNO  /* 연계일련번호 */
     ,'IF-J-004' AS IF_ID /* 연계 ID IF_ID */
     ,ifNo         AS IF_NO/* 연계번호 (parm) IF_NO */
     ,siteNo       AS    SITE_NO /* 사이트번호 (param) SITE_NO */
     ,TOD.ORD_NO/* 주문번호 ORD_NO */
     ,TOD.ORD_DTL_SEQ /* 주문상세 순번 ORD_DTL_SEQ */
     ,(SELECT SBN_ORD_NO FROM TI_ORD_CLCT_IF WHERE ORD_NO=TOD.ORD_NO) AS SBN_ORD_NO /* 사방넷 주문번호 SBN_ORD_NO */
     ,(SELECT NVL(USER_DEFINE1,CD) FROM TA_CMN_CD_DTL WHERE GRP_CD='COURIER_CD' 
        AND CD =TD.RLS_COURIER_CD) AS  RLS_COURIER_CD /* 출고 택배사 코드 RLS_COURIER_CD */
     ,TD.RLS_INVOICE_NO /* 출고 송장 번호 RLS_INVOICE_NO */
     ,TD.RETURN_INVOICE_NO  /* 반품 송장 번호 RETURN_INVOICE_NO */
     ,'N' AS SBN_IF_YN /* 사방넷 연계 여부 SBN_IF_YN */
     ,'Y' BTCH_PRC_YN /*배치처리여부 BTCH_PRC_YN */
     ,'' SBN_IF_MSG /*사방넷연계메세지  SBN_IF_MSG */
     ,regrNo/*등록자번호 REGR_NO */
     ,SYSDATE/*등록일시 REG_DTTM */
     ,updrNo/*수정자번호 UPDR_NO */
     ,SYSDATE/*수정일시 UPD_DTTM */ 
     FROM TO_ORD_DTL TOD , TO_DLVR TD
     WHERE TOD.ORD_NO=TD.ORD_NO
     AND TOD.ORD_DTL_SEQ = TD.ORD_DTL_SEQ
     AND (TD.RLS_COURIER_CD IS NOT NULL AND TD.RLS_COURIER_CD <> '98')
     AND EXISTS (SELECT 1 FROM TI_ORD_CLCT_IF WHERE ORD_NO=TOD.ORD_NO)    
     --AND TD.RLS_INVOICE_NO IS NOT NULL    
    ;

   
   /***************************************************************************/
   /*** 2.연계사방넷배치 로그 등록 ......................... insert TI_IF_SBN_BTCH_LOG ***/
   /***************************************************************************/
   INSERT INTO DAVICH_MALL.TI_IF_SBN_BTCH_LOG (
   IF_NO, IF_ID, SITE_NO, 
   BTCH_PGM_ID, BTCH_PGM_NM, BTCH_GB_CD, 
   START_DTTM, END_DTTM, DATA_CNT, 
   SUCS_YN, ERR_CD, RESULT_CONTENT, 
   BTCH_WORK_CONTENT, REGR_NO, REG_DTTM, 
   UPDR_NO, UPD_DTTM) 
    VALUES ( 
     ifNo /* IF_NO */, 
     'IF-J-004' /* IF_ID */,
     siteNo/* SITE_NO */,
     'SabangnetService.registInvoice'/* BTCH_PGM_ID */,
     '4.송장등록 연계'/* BTCH_PGM_NM */,
     '1' /* BTCH_GB_CD */,
     TO_CHAR(sysdate, 'YYYYMMDDHH24MISS') /* START_DTTM */,
     null /* END_DTTM */,
     null /* DATA_CNT */,
     'N'/* SUCS_YN */,
     null/* ERR_CD */,
     null/* RESULT_CONTENT */,
     null/* BTCH_WORK_CONTENT */,
     regrNo /* REGR_NO */,
     SYSDATE/* REG_DTTM */,
     updrNo/* UPDR_NO */,
     SYSDATE /* UPD_DTTM */ 
     );
   
   /***************************************************************************/
   /***  3.연계실행로그 등록, 수정 ..................... insert,update TI_IF_EXEC_LOG ***/
   /***************************************************************************/
   FOR GOODS_LIST  IN (
        SELECT 
             IF_SNO
            ,NVL(SBN_ORD_NO, '') AS EXEC_KEY  
            ,NVL(SBN_ORD_NO, '') AS EXEC_CONTS
        FROM TI_INVOICE_REG_IF
        WHERE IF_NO=ifNo
        AND SITE_NO=siteNo
    )
    LOOP	
   INSERT INTO TI_IF_EXEC_LOG (
               IF_SNO
             , IF_NO
             , IF_PGM_NM
             , START_DTTM
             , SUCS_YN
             , ERR_CD
             , RESULT_CONTENT
             , EXEC_KEY
             , EXEC_CONTS
             , LOG_FILE_PATH
             , LOG_FILE_NM
             , REGR_NO
             , REG_DTTM
        ) VALUES (
               GOODS_LIST.IF_SNO
             , ifNo
             , '4.송장등록 연계'
             , TO_CHAR(sysdate, 'YYYYMMDDHH24MISS')
             , ''
             , ''
             , ''
             , GOODS_LIST.EXEC_KEY
             , GOODS_LIST.EXEC_CONTS
             , ''
             , ''
             , regrNo
             , sysdate
             );
    END LOOP;

   /***************************************************************************/
   /*** 4.연계로그 수정 .... 시작/종료 연계일련번호, 데이터건수 . update TI_IF_LOG ***/
   /***************************************************************************/
   SELECT MIN(IF_SNO),MAX(IF_SNO)
        INTO startIfSno ,endIfSno 
     FROM TI_INVOICE_REG_IF
   WHERE IF_NO = ifNo;
        
   UPDATE DAVICH_MALL.TI_IF_LOG
        SET    DATA_CNT       = 0,
               DATA_TOT_CNT   = 0,
               END_IF_SNO     = startIfSno,
               START_DTTM     = TO_CHAR(sysdate, 'YYYYMMDDHH24MISS'),
               START_IF_SNO   = endifSno,
               UPD_DTTM       = sysdate,
               UPDR_NO        = updrNo
        WHERE  IF_NO          = ifNo
        ;
   
   
   /***************************************************************************/
   /***  5.연계사방넷배치로그 수정 .......................... update TI_IF_SBN_BTCH_LOG ***/
   /***************************************************************************/
    UPDATE DAVICH_MALL.TI_IF_SBN_BTCH_LOG
    SET    
           END_DTTM          = TO_CHAR(sysdate, 'YYYYMMDDHH24MISS'),
           SUCS_YN           = 'Y',
           UPDR_NO           = updrNo,
           UPD_DTTM          = sysdate
    WHERE  IF_NO             = ifNo
    ; 


Commit ;



END;
/

create PROCEDURE             SP_IF_07_INQUIRY_REPLY_REG (
   regrNo   IN   NUMBER,  -- 등록자번호
   updrNo   IN   NUMBER,  -- 수정자번호       
   ifNo     IN   VARCHAR2, -- 인터페이스 번호
   siteNo   IN   NUMBER     -- 사이트번호
)
IS
    startIfSno VARCHAR2(16);
    endIfSno VARCHAR2(16);
BEGIN
   /*** 사방넷 문의답변등록 프로시져 ***/
   
   /***************************************************************************/
   /*** 1.연계 테이블에 전송데이터 등록......................insert TI_INQUIRY_REPLY_REG_IF ***/
   /***************************************************************************/
   INSERT INTO DAVICH_MALL.TI_INQUIRY_REPLY_REG_IF (
   IF_SNO, IF_ID, IF_NO, 
   SITE_NO, SBN_SNO, LETT_NO, 
   REPLY_CONTENT, SBN_IF_YN, SBN_IF_MSG, 
   BTCH_PRC_YN, REGR_NO, REG_DTTM, 
   UPDR_NO, UPD_DTTM) 
    SELECT 
      fn_getIfSno(0,'IF_SNO') AS IF_SNO  /* 연계일련번호 */
     ,'IF-J-007' AS IF_ID /* 연계 ID IF_ID */
     ,ifNo         AS IF_NO/* 연계번호 (parm) IF_NO */
     ,siteNo       AS    SITE_NO /* 사이트번호 (param) SITE_NO */
     ,tici.SBN_SNO AS SBN_SNO /* 사방넷 일련번호  SBN_SNO */
     ,LETT.LETT_NO AS LETT_NO/* 글번호 LETT_NO */
     ,LETT.CONTENT AS REPLY_CONTENT /* 답변내용 REPLY_CONTENT */
     ,'N' SBN_IF_YN /*사방넷연계여부 SBN_IF_YN */
     ,'' SBN_IF_MSG /*사방넷연계메세지  SBN_IF_MSG */
     ,'Y' BTCH_PRC_YN /*배치처리여부 BTCH_PRC_YN */
     ,regrNo/*등록자번호 REGR_NO */
     ,SYSDATE/*등록일시 REG_DTTM */
     ,updrNo/*수정자번호 UPDR_NO */
     ,SYSDATE/*수정일시 UPD_DTTM */ 
     FROM TB_GOODS_BBS_LETT lett  , TI_INQUIRY_CLCT_IF tici
     WHERE lett.grp_no=tici.lett_no
     AND lett.BBS_ID='question'
     AND lett.GRP_NO  IS NOT NULL
     AND LETT.UPD_DTTM > tici.REG_DTTM 
 ;
   
   /***************************************************************************/
   /*** 2.연계사방넷배치 로그 등록 ......................... insert TI_IF_SBN_BTCH_LOG ***/
   /***************************************************************************/
   INSERT INTO DAVICH_MALL.TI_IF_SBN_BTCH_LOG (
   IF_NO, IF_ID, SITE_NO, 
   BTCH_PGM_ID, BTCH_PGM_NM, BTCH_GB_CD, 
   START_DTTM, END_DTTM, DATA_CNT, 
   SUCS_YN, ERR_CD, RESULT_CONTENT, 
   BTCH_WORK_CONTENT, REGR_NO, REG_DTTM, 
   UPDR_NO, UPD_DTTM) 
    VALUES ( 
     ifNo /* IF_NO */, 
     'IF-J-007' /* IF_ID */,
     siteNo/* SITE_NO */,
     'SabangnetService.registInquiryReply'/* BTCH_PGM_ID */,
     '7.문의답변등록 연계'/* BTCH_PGM_NM */,
     '1' /* BTCH_GB_CD */,
     TO_CHAR(sysdate, 'YYYYMMDDHH24MISS') /* START_DTTM */,
     null /* END_DTTM */,
     null /* DATA_CNT */,
     'N'/* SUCS_YN */,
     null/* ERR_CD */,
     null/* RESULT_CONTENT */,
     null/* BTCH_WORK_CONTENT */,
     regrNo /* REGR_NO */,
     SYSDATE/* REG_DTTM */,
     updrNo/* UPDR_NO */,
     SYSDATE /* UPD_DTTM */ 
     );
   
   /***************************************************************************/
   /*** 3.연계실행로그 등록, 수정 ..................... insert,update TI_IF_EXEC_LOG ***/
   /***************************************************************************/
   FOR REPLY_REG_LIST  IN (
        SELECT 
             IF_SNO
            ,SBN_SNO AS EXEC_KEY  
            ,NVL(SBN_SNO||'-'||LETT_NO,'') AS EXEC_CONTS
        FROM TI_INQUIRY_REPLY_REG_IF
        WHERE IF_NO=ifNo
        AND SITE_NO=siteNo
    )
    LOOP	
   INSERT INTO TI_IF_EXEC_LOG (
               IF_SNO
             , IF_NO
             , IF_PGM_NM
             , START_DTTM
             , SUCS_YN
             , ERR_CD
             , RESULT_CONTENT
             , EXEC_KEY
             , EXEC_CONTS
             , LOG_FILE_PATH
             , LOG_FILE_NM
             , REGR_NO
             , REG_DTTM
        ) VALUES (
               REPLY_REG_LIST.IF_SNO
             , ifNo
             , '7.문의답변등록 연계'
             , TO_CHAR(sysdate, 'YYYYMMDDHH24MISS')
             , ''
             , ''
             , ''
             , REPLY_REG_LIST.EXEC_KEY
             , REPLY_REG_LIST.EXEC_CONTS
             , ''
             , ''
             , regrNo
             , sysdate
             );
             
    END LOOP;
   
   /***************************************************************************/
   /*** 4.연계로그 수정 .... 시작/종료 연계일련번호, 데이터건수 . update TI_IF_LOG ***/
   /***************************************************************************/
   SELECT MIN(IF_SNO),MAX(IF_SNO)
        INTO startIfSno ,endIfSno 
     FROM TI_INQUIRY_REPLY_REG_IF
   WHERE IF_NO = ifNo;
        
   UPDATE DAVICH_MALL.TI_IF_LOG
        SET    DATA_CNT       = 0,
               DATA_TOT_CNT   = 0,
               END_IF_SNO     = startIfSno,
               START_DTTM     = TO_CHAR(sysdate, 'YYYYMMDDHH24MISS'),
               START_IF_SNO   = endifSno,
               UPD_DTTM       = sysdate,
               UPDR_NO        = updrNo
        WHERE  IF_NO          = ifNo
        ;
   
   
   /***************************************************************************/
   /*** 5.연계사방넷배치로그 수정 .......................... update TI_IF_SBN_BTCH_LOG ***/
   /***************************************************************************/
    UPDATE DAVICH_MALL.TI_IF_SBN_BTCH_LOG
    SET    
           END_DTTM          = TO_CHAR(sysdate, 'YYYYMMDDHH24MISS'),
           SUCS_YN           = 'Y',
           UPDR_NO           = updrNo,
           UPD_DTTM          = sysdate
    WHERE  IF_NO             = ifNo
    ;


Commit ;



END;
/

create PROCEDURE             STOCK_QTY  
As   
 
a_cnt     number; 
a_cnt1    number; 
a_ym varchar2(6); 
a_ym1 varchar2(6); 
a_ym2 varchar2(6); 
 
Begin       
 
   select count(*),to_char(sysdate - 1,'yyyymm'),to_char(add_months(sysdate,-1) - 1,'yyyymm')
     into a_cnt, a_ym1, a_ym2
     from et086viw@davi
    where ym  = to_char(sysdate - 1,'yyyymm')
      and rownum = 1;
      
    if  a_cnt = 1 then 
        a_ym := a_ym1;
    else 
        a_ym := a_ym2;        
    end if;
              
    For c1 IN ( 
                select b.erp_itm_code,b.mall_itm_code, substr(a.cls_code,1,2) as div 
                  FROM am070tbl@davi a,
                       ti_erp_prd_mapping b 
                 where a.use_ind = '0'  
                   and a.itm_code = b.erp_itm_code
               --    and a.cls_code like '01%'
               --    and substr(a.cls_code,1,2) = '01'
                  -- and a.itm_code = '5364060'
           
              ) LOOP      
                
               a_cnt1 := 0;
               select count(*)
                into a_cnt1 
                from am070tbl_cen_jego /*예외테이블*/
               where itm_code = c1.erp_itm_code 
                 and use_ind = 'Y';
                 
               if a_cnt1 >= 1 then 
                   update tg_item  set stock_qtt = 9999
                    where item_no  = c1.mall_itm_code;
               else     
                   update tg_item  set stock_qtt = (case when c1.div = '01' then fnc_cen_jego('0000',c1.erp_itm_code,a_ym ) else 9999 end)
                    where item_no  = c1.mall_itm_code
                    ;
               end if;
                                  
            END Loop  ;
           COMMIT;    
                       
                
                   
       
EXCEPTION       
  WHEN OTHERS THEN       
    raise_application_error(-20001, 'obj(AM051PRC) -> '||sqlerrm);       
End;
/

create PROCEDURE             STOCK_QTY1  
As   
 
a_cnt     number; 
a_ym varchar2(6); 
a_ym1 varchar2(6); 
a_ym2 varchar2(6); 
 
Begin       
 
   select count(*),to_char(sysdate - 1,'yyyymm'),to_char(add_months(sysdate,-1) - 1,'yyyymm')
     into a_cnt, a_ym1, a_ym2
     from et086viw@davi
    where ym  = to_char(sysdate - 1,'yyyymm')
      and rownum = 1;
      
    if  a_cnt = 1 then 
        a_ym := a_ym1;
    else 
        a_ym := a_ym2;        
    end if;
              
    For c1 IN ( 
                select b.erp_itm_code,b.mall_itm_code  
                  FROM am070tbl@davi a,
                       ti_erp_prd_mapping b 
                 where a.use_ind = '0'  
                   and a.itm_code = b.erp_itm_code
               --    and a.cls_code like '01%'
                   and substr(a.cls_code,1,2) = '01'
                  -- and a.itm_code = '5364060'
           
              ) LOOP      
                
   
               update tg_item  set stock_qtt = 999
                where item_no  = c1.mall_itm_code
                  /*기획전 상품 예외처리*/ 
                  and c1.erp_itm_code  in ('5642810','5642802','5642818'
                                                ,'6865731'
                                                ,'6865732'
                                                ,'6865733'
                                                ,'6865734'
                                                ,'6865735'
                                                ,'6865736'
                                                ,'6865737'
                                                ,'6865738'
                                                ,'6865739'
                                                ,'6865740'
                                                ,'6865741'
                                                ,'6865742'
                                                ,'6865743'
                                                ,'6865744'
                                                ,'6865745'
                                                ,'6865746'
                                                ,'6865747'
                                                ,'6865748'
                                                ,'6865749'
                                                ,'6865750'
                                                ,'6865751'
                                                ,'6865940'
                                                ,'6865752'
                                                ,'6865753'
                                                ,'6865754'
                                                ,'6865755'
                                                ,'6865756'
                                                ,'6865757'
                                                ,'6865758'
                                                ,'6865759'
                                                ,'6865760'
                                                ,'6865761'
                                                ,'6865762'
                                                ,'6865763'
                                                ,'6865764'
                                                ,'6865765'
                                                ,'6865766'
                                                ,'6865767'
                                                ,'6865768'
                                                ,'6865769'
                                                ,'6865770'
                                                ,'6865771'
                                                ,'6865772'
                                                ,'6865773'
                                                ,'6865774'
                                                ,'6865775'
                                                ,'6865776'
                                                ,'6865777'
                                                ,'6865778'
                                                ,'6865779'
                                                ,'6865780'
                                                ,'6865781'
                                                ,'6865782'
                                                ,'6865783'
                                                ,'6865784'
                                                ,'6865856'
                                                ,'6865785'
                                                ,'6865787'
                                                ,'6865788'
                                                ,'6865789'
                                                ,'6865790'
                                                ,'6865791'
                                                ,'6865792'
                                                ,'6865793'
                                                ,'6865794'
                                                ,'6865795'
                                                ,'6865867'
                                                ,'6865868'
                                                ,'6865869'
                                                ,'6865870'
                                                ,'6865871')
                ;
                                  
            END Loop  ;
           COMMIT;    
                       
                
                   
       
EXCEPTION       
  WHEN OTHERS THEN       
    raise_application_error(-20001, 'obj(AM051PRC) -> '||sqlerrm);       
End;
/

create PROCEDURE             SP_BA_G_001_GOODS_SALE_STATUS (
   regrNo   IN   NUMBER,  -- 등록자번호
   updrNo   IN   NUMBER  -- 수정자번호       
)
IS
    
BEGIN

  /*** 상품 판매 상태 변경 프로시져 프로시져 ***/
  /***************************************************************************/ 
    -- 판매중(1) , 전시여부(Y) , 판매여부(Y)  
    FOR GOODS_LIST_01  IN (
       SELECT GOODS_NO ,GOODS_SALE_STATUS_CD,DISP_YN,SALE_YN 
        ,SALE_START_DT
        ,SALE_END_DT
        FROM TG_GOODS WHERE TO_CHAR(SYSDATE,'yyyymmdd') BETWEEN SALE_START_DT AND SALE_END_DT
        AND (GOODS_SALE_STATUS_CD <>'1' OR SALE_YN <>'Y' OR DISP_YN <> 'Y')
    )
    LOOP
        UPDATE TG_GOODS SET GOODS_SALE_STATUS_CD = '1' ,DISP_YN='Y', SALE_YN='Y',
                UPD_DTTM       = sysdate,
               UPDR_NO        = updrNo
        WHERE GOODS_NO=GOODS_LIST_01.GOODS_NO;
 
             
    END LOOP; 
    
    -- 판매대기(3) , 전시여부(N) , 판매여부(N)  
    FOR GOODS_LIST_01  IN (
       SELECT GOODS_NO ,GOODS_SALE_STATUS_CD,DISP_YN,SALE_YN 
        ,SALE_START_DT
        ,SALE_END_DT
        FROM TG_GOODS WHERE  TO_CHAR(SYSDATE,'yyyymmdd') > SALE_END_DT
        AND (GOODS_SALE_STATUS_CD <>'3' OR SALE_YN <>'N' OR DISP_YN <> 'N')
    )
    LOOP
        UPDATE TG_GOODS SET GOODS_SALE_STATUS_CD = '3' ,DISP_YN='N', SALE_YN='N',
                UPD_DTTM       = sysdate,
               UPDR_NO        = updrNo
        WHERE GOODS_NO=GOODS_LIST_01.GOODS_NO;
 
             
    END LOOP; 
    
    Commit ;



END;
/

create PROCEDURE             TG_GOODS_DISP_YN_PRC 
IS
   /***************************************************************************/
   /*** 상품 전시/미전시 예약 변경 2020.03.24 김지혜                        ***/
   /***************************************************************************/
BEGIN

    update tg_goods
    set DISP_YN = 'Y'
    where sale_start_dt = to_char(trunc(sysdate),'yyyymmdd');

    update tg_goods
    set DISP_YN = 'N'
    where sale_end_dt = to_char(trunc(sysdate),'yyyymmdd');
    
    commit;

END;
/

create FUNCTION             fn_getCuoponCtgNo
(
    inGoodsNo IN VARCHAR2 
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(500);

BEGIN
       
         
    SELECT
         LISTAGG(A.TMP_CTG_NO , ',') WITHIN GROUP (ORDER BY  A.CTG_LVL ,A.TMP_CTG_NO ) AS CTG_NO INTO returnValue
        --A.TMP_CTG_NO AS CTG_NO INTO returnValue
          FROM
          (
				select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
				from TG_CTG
				start with CTG_NO IN (
				SELECT
            CTG_NO
          FROM TG_GOODS TG, TG_GOODS_CTG CTG
         WHERE TG.GOODS_NO = CTG.GOODS_NO
           AND TG.GOODS_NO = inGoodsNo
           AND TG.SITE_NO = 1
				)

			    and SITE_NO = 1
				connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
           ) A 
        ORDER BY CTG_LVL, CTG_NO ASC;
          
        
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponSoloUseYn
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
        IF inMemberNo IS NULL THEN
             SELECT
               distinct FIRST_VALUE(T.COUPON_SOLO_USE_YN) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_SOLO_USE_YN INTO returnValue
             FROM (
                    SELECT
                        AA.GOODS_NO,
                        AA.SALE_PRICE,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                        AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_DC_AMT,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                        AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_APPLY_AMT,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        AA.COUPON_BNF_DC_AMT
                        END AS COUPON_DC_VALUE,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                        END AS COUPON_DC_RATE,
                        AA.COUPON_NO,
                        AA.COUPON_KIND_CD,
                        AA.COUPON_QTT_LIMIT_CD,
                        AA.COUPON_QTT_LIMIT_CNT,
                        AA.REG_DTTM,
                        AA.COUPON_NM,
                        AA.COUPON_DSCRT,
                        AA.COUPON_SOLO_USE_YN,
                        AA.COUPON_BNF_CD,
                        AA.COUPON_BNF_VALUE,
                        AA.COUPON_BNF_DC_AMT,
                        AA.COUPON_BNF_TXT,
                        TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                        TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                        AA.COUPON_APPLY_PERIOD_CD,
                        AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                        AA.COUPON_APPLY_SCOPE_CD,
                        AA.COUPON_APPLY_LIMIT_CD,
                        AA.COUPON_USE_LIMIT_AMT,
                        AA.COUPON_USE_YN,
                        AA.COUPON_DUPLT_DWLD_PSB_YN,
                        AA.OFFLINE_ONLY_YN,
                        (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                      FROM (
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            ,TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TCTG.GOODS_NO = inGoodsNo
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               
                               AND TC.DEL_YN <> 'Y'
                                
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                          FROM TP_COUPON_TARGET_GOODS
                                                         WHERE GOODS_NO = inGoodsNo)
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               AND TCTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN
                                   (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                     WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                      
                                                      ))
                                   )
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC
                             WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.SITE_NO = 1
                           ) AA
                     WHERE AA.COUPON_USE_YN = 'Y'
                       AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                       AND AA.DEL_YN = 'N'
                       AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                            OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                       AND AA.SITE_NO = 1
                       ORDER BY 3 DESC
                    ) T
                     
                    where T.COUPON_QTT_LIMIT_CD = '01'
                    or (T.COUPON_QTT_LIMIT_CD != '01'
                    and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_SOLO_USE_YN) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,MEMBER_CP_NO DESC) as COUPON_SOLO_USE_YN INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   ORDER BY 3 DESC
                   ) T;
         END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponMemberCpNo
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
    
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
        IF inMemberNo IS NULL THEN
               RETURN returnValue;
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.MEMBER_CP_NO) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC ,T.MEMBER_CP_NO DESC) as MEMBER_CP_NO INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                    ORDER BY 3 DESC
                   ) T;
         END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponApplyEndDttm
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
    
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
        IF inMemberNo IS NULL THEN
             SELECT
               distinct FIRST_VALUE(T.APPLY_END_DTTM) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as APPLY_END_DTTM INTO returnValue
             FROM (
                    SELECT
                        AA.GOODS_NO,
                        AA.SALE_PRICE,
                         ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                        AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_DC_AMT,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                        AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_APPLY_AMT,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        AA.COUPON_BNF_DC_AMT
                        END AS COUPON_DC_VALUE,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                        END AS COUPON_DC_RATE,
                        AA.COUPON_NO,
                        AA.COUPON_KIND_CD,
                        AA.COUPON_QTT_LIMIT_CD,
                        AA.COUPON_QTT_LIMIT_CNT,
                        AA.REG_DTTM,
                        AA.COUPON_NM,
                        AA.COUPON_DSCRT,
                        AA.COUPON_SOLO_USE_YN,
                        AA.COUPON_BNF_CD,
                        AA.COUPON_BNF_VALUE,
                        AA.COUPON_BNF_DC_AMT,
                        AA.COUPON_BNF_TXT,
                        TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                        TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                        AA.COUPON_APPLY_PERIOD_CD,
                        AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                        AA.COUPON_APPLY_SCOPE_CD,
                        AA.COUPON_APPLY_LIMIT_CD,
                        AA.COUPON_USE_LIMIT_AMT,
                        AA.COUPON_USE_YN,
                        AA.COUPON_DUPLT_DWLD_PSB_YN,
                        AA.OFFLINE_ONLY_YN,
                        (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                      FROM (
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            ,TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TCTG.GOODS_NO = inGoodsNo
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               
                               AND TC.DEL_YN <> 'Y'
                                
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                          FROM TP_COUPON_TARGET_GOODS
                                                         WHERE GOODS_NO = inGoodsNo)
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               AND TCTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN
                                   (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                     WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                      
                                                      ))
                                   )
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC
                             WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.SITE_NO = 1
                           ) AA
                     WHERE AA.COUPON_USE_YN = 'Y'
                       AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                       AND AA.DEL_YN = 'N'
                       AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                            OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                       AND AA.SITE_NO = 1
                       ORDER BY 3 DESC
                    ) T
                     
                    where T.COUPON_QTT_LIMIT_CD = '01'
                    or (T.COUPON_QTT_LIMIT_CD != '01'
                    and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.APPLY_END_DTTM) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as APPLY_END_DTTM INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                    ORDER BY 3 DESC
                   ) T;
         END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponApplyStartDttm
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
    
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
        IF inMemberNo IS NULL THEN
             SELECT
               distinct FIRST_VALUE(T.APPLY_START_DTTM) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as APPLY_START_DTTM INTO returnValue
             FROM (
                    SELECT
                        AA.GOODS_NO,
                        AA.SALE_PRICE,
                         ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                        AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_DC_AMT,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                        AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_APPLY_AMT,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        AA.COUPON_BNF_DC_AMT
                        END AS COUPON_DC_VALUE,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                        END AS COUPON_DC_RATE,
                        AA.COUPON_NO,
                        AA.COUPON_KIND_CD,
                        AA.COUPON_QTT_LIMIT_CD,
                        AA.COUPON_QTT_LIMIT_CNT,
                        AA.REG_DTTM,
                        AA.COUPON_NM,
                        AA.COUPON_DSCRT,
                        AA.COUPON_SOLO_USE_YN,
                        AA.COUPON_BNF_CD,
                        AA.COUPON_BNF_VALUE,
                        AA.COUPON_BNF_DC_AMT,
                        AA.COUPON_BNF_TXT,
                        TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                        TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                        AA.COUPON_APPLY_PERIOD_CD,
                        AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                        AA.COUPON_APPLY_SCOPE_CD,
                        AA.COUPON_APPLY_LIMIT_CD,
                        AA.COUPON_USE_LIMIT_AMT,
                        AA.COUPON_USE_YN,
                        AA.COUPON_DUPLT_DWLD_PSB_YN,
                        AA.OFFLINE_ONLY_YN,
                        (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                      FROM (
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            ,TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TCTG.GOODS_NO = inGoodsNo
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               
                               AND TC.DEL_YN <> 'Y'
                                
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                          FROM TP_COUPON_TARGET_GOODS
                                                         WHERE GOODS_NO = inGoodsNo)
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               AND TCTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN
                                   (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                     WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                      
                                                      ))
                                   )
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC
                             WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.SITE_NO = 1
                           ) AA
                     WHERE AA.COUPON_USE_YN = 'Y'
                       AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                       AND AA.DEL_YN = 'N'
                       AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                            OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                       AND AA.SITE_NO = 1
                       ORDER BY 3 DESC
                    ) T
                     
                    where T.COUPON_QTT_LIMIT_CD = '01'
                    or (T.COUPON_QTT_LIMIT_CD != '01'
                    and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.APPLY_START_DTTM) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as APPLY_START_DTTM INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                    ORDER BY 3 DESC
                   ) T;
         END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponKindCd
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
    
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
        IF inMemberNo IS NULL THEN
             SELECT
               distinct FIRST_VALUE(T.COUPON_KIND_CD) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_KIND_CD INTO returnValue
             FROM (
                    SELECT
                        AA.GOODS_NO,
                        AA.SALE_PRICE,
                         ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                        AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_DC_AMT,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                        AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_APPLY_AMT,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        AA.COUPON_BNF_DC_AMT
                        END AS COUPON_DC_VALUE,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                        END AS COUPON_DC_RATE,
                        AA.COUPON_NO,
                        AA.COUPON_KIND_CD,
                        AA.COUPON_QTT_LIMIT_CD,
                        AA.COUPON_QTT_LIMIT_CNT,
                        AA.REG_DTTM,
                        AA.COUPON_NM,
                        AA.COUPON_DSCRT,
                        AA.COUPON_SOLO_USE_YN,
                        AA.COUPON_BNF_CD,
                        AA.COUPON_BNF_VALUE,
                        AA.COUPON_BNF_DC_AMT,
                        AA.COUPON_BNF_TXT,
                        TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                        TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                        AA.COUPON_APPLY_PERIOD_CD,
                        AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                        AA.COUPON_APPLY_SCOPE_CD,
                        AA.COUPON_APPLY_LIMIT_CD,
                        AA.COUPON_USE_LIMIT_AMT,
                        AA.COUPON_USE_YN,
                        AA.COUPON_DUPLT_DWLD_PSB_YN,
                        AA.OFFLINE_ONLY_YN,
                        (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                      FROM (
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            ,TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TCTG.GOODS_NO = inGoodsNo
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               
                               AND TC.DEL_YN <> 'Y'
                                
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                          FROM TP_COUPON_TARGET_GOODS
                                                         WHERE GOODS_NO = inGoodsNo)
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               AND TCTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN
                                   (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                     WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                      
                                                      ))
                                   )
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC
                             WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.SITE_NO = 1
                           ) AA
                     WHERE AA.COUPON_USE_YN = 'Y'
                       AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                       AND AA.DEL_YN = 'N'
                       AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                            OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                       AND AA.SITE_NO = 1
                       ORDER BY 3 DESC
                    ) T
                     
                    where T.COUPON_QTT_LIMIT_CD = '01'
                    or (T.COUPON_QTT_LIMIT_CD != '01'
                    and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_KIND_CD) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_KIND_CD INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                    ORDER BY 3 DESC
                   ) T;
         END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponBnfDcAmt
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
    
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
        IF inMemberNo IS NULL THEN
             SELECT
               distinct FIRST_VALUE(T.COUPON_BNF_DC_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_BNF_DC_AMT INTO returnValue
             FROM (
                    SELECT
                        AA.GOODS_NO,
                        AA.SALE_PRICE,
                         ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                        AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_DC_AMT,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                        AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_APPLY_AMT,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        AA.COUPON_BNF_DC_AMT
                        END AS COUPON_DC_VALUE,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                        END AS COUPON_DC_RATE,
                        AA.COUPON_NO,
                        AA.COUPON_KIND_CD,
                        AA.COUPON_QTT_LIMIT_CD,
                        AA.COUPON_QTT_LIMIT_CNT,
                        AA.REG_DTTM,
                        AA.COUPON_NM,
                        AA.COUPON_DSCRT,
                        AA.COUPON_SOLO_USE_YN,
                        AA.COUPON_BNF_CD,
                        AA.COUPON_BNF_VALUE,
                        AA.COUPON_BNF_DC_AMT,
                        AA.COUPON_BNF_TXT,
                        TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                        TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                        AA.COUPON_APPLY_PERIOD_CD,
                        AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                        AA.COUPON_APPLY_SCOPE_CD,
                        AA.COUPON_APPLY_LIMIT_CD,
                        AA.COUPON_USE_LIMIT_AMT,
                        AA.COUPON_USE_YN,
                        AA.COUPON_DUPLT_DWLD_PSB_YN,
                        AA.OFFLINE_ONLY_YN,
                        (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                      FROM (
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            ,TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TCTG.GOODS_NO = inGoodsNo
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               
                               AND TC.DEL_YN <> 'Y'
                                
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                          FROM TP_COUPON_TARGET_GOODS
                                                         WHERE GOODS_NO = inGoodsNo)
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               AND TCTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN
                                   (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                     WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                      
                                                      ))
                                   )
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC
                             WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.SITE_NO = 1
                           ) AA
                     WHERE AA.COUPON_USE_YN = 'Y'
                       AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                       AND AA.DEL_YN = 'N'
                       AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                            OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                       AND AA.SITE_NO = 1
                       ORDER BY 3 DESC
                    ) T
                     
                    where T.COUPON_QTT_LIMIT_CD = '01'
                    or (T.COUPON_QTT_LIMIT_CD != '01'
                    and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_BNF_DC_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_BNF_DC_AMT INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                    ORDER BY 3 DESC
                   ) T;
         END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponUseLimitAmt
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
    
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
        IF inMemberNo IS NULL THEN
             SELECT
               distinct FIRST_VALUE(T.COUPON_USE_LIMIT_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_USE_LIMIT_AMT INTO returnValue
             FROM (
                    SELECT
                        AA.GOODS_NO,
                        AA.SALE_PRICE,
                         ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                        AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_DC_AMT,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                        AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_APPLY_AMT,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        AA.COUPON_BNF_DC_AMT
                        END AS COUPON_DC_VALUE,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                        END AS COUPON_DC_RATE,
                        AA.COUPON_NO,
                        AA.COUPON_KIND_CD,
                        AA.COUPON_QTT_LIMIT_CD,
                        AA.COUPON_QTT_LIMIT_CNT,
                        AA.REG_DTTM,
                        AA.COUPON_NM,
                        AA.COUPON_DSCRT,
                        AA.COUPON_SOLO_USE_YN,
                        AA.COUPON_BNF_CD,
                        AA.COUPON_BNF_VALUE,
                        AA.COUPON_BNF_DC_AMT,
                        AA.COUPON_BNF_TXT,
                        TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                        TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                        AA.COUPON_APPLY_PERIOD_CD,
                        AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                        AA.COUPON_APPLY_SCOPE_CD,
                        AA.COUPON_APPLY_LIMIT_CD,
                        AA.COUPON_USE_LIMIT_AMT,
                        AA.COUPON_USE_YN,
                        AA.COUPON_DUPLT_DWLD_PSB_YN,
                        AA.OFFLINE_ONLY_YN,
                        (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                      FROM (
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            ,TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TCTG.GOODS_NO = inGoodsNo
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               
                               AND TC.DEL_YN <> 'Y'
                                
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                          FROM TP_COUPON_TARGET_GOODS
                                                         WHERE GOODS_NO = inGoodsNo)
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               AND TCTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN
                                   (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                     WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                      
                                                      ))
                                   )
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC
                             WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.SITE_NO = 1
                           ) AA
                     WHERE AA.COUPON_USE_YN = 'Y'
                       AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                       AND AA.DEL_YN = 'N'
                       AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                            OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                       AND AA.SITE_NO = 1
                       ORDER BY 3 DESC
                    ) T
                     
                    where T.COUPON_QTT_LIMIT_CD = '01'
                    or (T.COUPON_QTT_LIMIT_CD != '01'
                    and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_USE_LIMIT_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_USE_LIMIT_AMT INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                    ORDER BY 3 DESC
                   ) T;
         END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponBnfValue
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
    
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
        IF inMemberNo IS NULL THEN
             SELECT
               distinct FIRST_VALUE(T.COUPON_BNF_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_BNF_VALUE INTO returnValue
             FROM (
                    SELECT
                        AA.GOODS_NO,
                        AA.SALE_PRICE,
                         ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                        AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_DC_AMT,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                        AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_APPLY_AMT,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        AA.COUPON_BNF_DC_AMT
                        END AS COUPON_DC_VALUE,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                        END AS COUPON_DC_RATE,
                        AA.COUPON_NO,
                        AA.COUPON_KIND_CD,
                        AA.COUPON_QTT_LIMIT_CD,
                        AA.COUPON_QTT_LIMIT_CNT,
                        AA.REG_DTTM,
                        AA.COUPON_NM,
                        AA.COUPON_DSCRT,
                        AA.COUPON_SOLO_USE_YN,
                        AA.COUPON_BNF_CD,
                        AA.COUPON_BNF_VALUE,
                        AA.COUPON_BNF_DC_AMT,
                        AA.COUPON_BNF_TXT,
                        TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                        TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                        AA.COUPON_APPLY_PERIOD_CD,
                        AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                        AA.COUPON_APPLY_SCOPE_CD,
                        AA.COUPON_APPLY_LIMIT_CD,
                        AA.COUPON_USE_LIMIT_AMT,
                        AA.COUPON_USE_YN,
                        AA.COUPON_DUPLT_DWLD_PSB_YN,
                        AA.OFFLINE_ONLY_YN,
                        (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                      FROM (
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            ,TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TCTG.GOODS_NO = inGoodsNo
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               
                               AND TC.DEL_YN <> 'Y'
                                
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                          FROM TP_COUPON_TARGET_GOODS
                                                         WHERE GOODS_NO = inGoodsNo)
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               AND TCTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN
                                   (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                     WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                      
                                                      ))
                                   )
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC
                             WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.SITE_NO = 1
                           ) AA
                     WHERE AA.COUPON_USE_YN = 'Y'
                       AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                       AND AA.DEL_YN = 'N'
                       AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                            OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                       AND AA.SITE_NO = 1
                       ORDER BY 3 DESC
                    ) T
                     
                    where T.COUPON_QTT_LIMIT_CD = '01'
                    or (T.COUPON_QTT_LIMIT_CD != '01'
                    and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_BNF_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC ,T.MEMBER_CP_NO DESC) as COUPON_BNF_VALUE INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                    ORDER BY 3 DESC
                   ) T;
         END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getAvlCuoponNo
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
    
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
        IF inMemberNo IS NULL THEN
             SELECT
               distinct FIRST_VALUE(T.COUPON_NO) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_DC_VALUE INTO returnValue
             FROM (
                    SELECT
                        AA.GOODS_NO,
                        AA.SALE_PRICE,
                         ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                        AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_DC_AMT,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                        AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_APPLY_AMT,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        AA.COUPON_BNF_DC_AMT
                        END AS COUPON_DC_VALUE,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                        END AS COUPON_DC_RATE,
                        AA.COUPON_NO,
                        AA.COUPON_KIND_CD,
                        AA.COUPON_QTT_LIMIT_CD,
                        AA.COUPON_QTT_LIMIT_CNT,
                        AA.REG_DTTM,
                        AA.COUPON_NM,
                        AA.COUPON_DSCRT,
                        AA.COUPON_SOLO_USE_YN,
                        AA.COUPON_BNF_CD,
                        AA.COUPON_BNF_VALUE,
                        AA.COUPON_BNF_DC_AMT,
                        AA.COUPON_BNF_TXT,
                        TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                        TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                        AA.COUPON_APPLY_PERIOD_CD,
                        AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                        AA.COUPON_APPLY_SCOPE_CD,
                        AA.COUPON_APPLY_LIMIT_CD,
                        AA.COUPON_USE_LIMIT_AMT,
                        AA.COUPON_USE_YN,
                        AA.COUPON_DUPLT_DWLD_PSB_YN,
                        AA.OFFLINE_ONLY_YN,
                        (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                      FROM (
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            ,TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TCTG.GOODS_NO = inGoodsNo
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               
                               AND TC.DEL_YN <> 'Y'
                                
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                          FROM TP_COUPON_TARGET_GOODS
                                                         WHERE GOODS_NO = inGoodsNo)
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               AND TCTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN
                                   (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                     WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                      
                                                      ))
                                   )
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC
                             WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.SITE_NO = 1
                           ) AA
                     WHERE AA.COUPON_USE_YN = 'Y'
                       AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                       AND AA.DEL_YN = 'N'
                       AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                            OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                       AND AA.SITE_NO = 1
                       ORDER BY 3 DESC
                    ) T
                     
                    where T.COUPON_QTT_LIMIT_CD = '01'
                    or (T.COUPON_QTT_LIMIT_CD != '01'
                    and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_NO) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_NO INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                    ORDER BY 3 DESC
                   ) T;
         END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponBnfCd
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
     IF inMemberNo IS NULL THEN
         SELECT
           distinct FIRST_VALUE(T.COUPON_BNF_CD) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_BNF_CD INTO returnValue
         FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    AA.COUPON_BNF_TXT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN,
                    AA.COUPON_DUPLT_DWLD_PSB_YN,
                    AA.OFFLINE_ONLY_YN,
                    (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        ,TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           
                           AND TC.DEL_YN <> 'Y'
                            
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                       ) AA
                 WHERE AA.COUPON_USE_YN = 'Y'
                   AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                   AND AA.DEL_YN = 'N'
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   ORDER BY 3 DESC
                ) T
                 
                where T.COUPON_QTT_LIMIT_CD = '01'
                or (T.COUPON_QTT_LIMIT_CD != '01'
                and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);

    ELSE 
    SELECT
      distinct FIRST_VALUE(T.COUPON_BNF_CD) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_BNF_CD INTO returnValue
    FROM (
        SELECT
            AA.GOODS_NO,
            AA.SALE_PRICE,
            ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
            AA.COUPON_BNF_DC_AMT
            END) AS COUPON_DC_AMT,
            ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
            AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
            END) AS COUPON_APPLY_AMT,
            CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
            AA.COUPON_BNF_DC_AMT
            END AS COUPON_DC_VALUE,
            CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
            ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
            END AS COUPON_DC_RATE,
            AA.COUPON_NO,
            TMC.MEMBER_CP_NO,
            AA.COUPON_KIND_CD,
            AA.COUPON_QTT_LIMIT_CD,
            AA.COUPON_QTT_LIMIT_CNT,
            AA.REG_DTTM,
            AA.COUPON_NM,
            AA.COUPON_DSCRT,
            AA.COUPON_SOLO_USE_YN,
            AA.COUPON_BNF_CD,
            AA.COUPON_BNF_VALUE,
            AA.COUPON_BNF_DC_AMT,
            TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
            TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
            AA.COUPON_APPLY_PERIOD_CD,
            AA.COUPON_APPLY_ISSUE_AF_PERIOD,
            AA.COUPON_APPLY_SCOPE_CD,
            AA.COUPON_APPLY_LIMIT_CD,
            AA.COUPON_USE_LIMIT_AMT,
            AA.COUPON_USE_YN
          FROM (
                SELECT inGoodsNo AS GOODS_NO
                , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                , TC.*   
                  FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                 WHERE TC.COUPON_NO = TCTG.COUPON_NO
                   AND TCTG.GOODS_NO = inGoodsNo
                   AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                   AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                   AND TC.SITE_NO = 1
                   AND TCTG.USE_YN = 'Y' 
                   AND TC.OFFLINE_ONLY_YN <> 'Y' 
                UNION
                SELECT inGoodsNo AS GOODS_NO
                , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                , TC.* 
                  FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                 WHERE TC.COUPON_NO = CTG.COUPON_NO
                   AND TC.SITE_NO = 1
                   AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                      
                                      
                                      ))
                   AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                   AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                   AND CTG.USE_YN = 'Y' 
                   AND TC.OFFLINE_ONLY_YN <> 'Y' 
                UNION
                SELECT inGoodsNo AS GOODS_NO
                , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                , TC.*   
                  FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                 WHERE TC.COUPON_NO = TCTG.COUPON_NO
                   AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                              FROM TP_COUPON_TARGET_GOODS
                                             WHERE GOODS_NO = inGoodsNo)
                   AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                   AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                   AND TC.SITE_NO = 1
                   AND TCTG.USE_YN = 'Y' 
                   AND TC.OFFLINE_ONLY_YN <> 'Y'
                  
                UNION
                SELECT inGoodsNo AS GOODS_NO
                , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                , TC.*    
                  FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                 WHERE TC.COUPON_NO = CTG.COUPON_NO
                   AND TC.COUPON_NO NOT IN
                       (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                         WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                          WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                          
                                          ))
                       )
                   AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                   AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                   AND TC.SITE_NO = 1
                   AND CTG.USE_YN = 'Y'
                    
                   AND TC.OFFLINE_ONLY_YN <> 'Y'
                   
                UNION
                SELECT inGoodsNo AS GOODS_NO
                , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                , TC.*   
                  FROM TP_COUPON TC
                 WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                   AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                   AND TC.SITE_NO = 1                    
                   AND TC.OFFLINE_ONLY_YN <> 'Y'                   
               ) AA, TC_MEMBER_CP TMC
         WHERE AA.COUPON_NO = TMC.COUPON_NO
           AND AA.COUPON_USE_YN = 'Y'
           AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
           AND TMC.USE_YN = 'N'
           AND AA.DEL_YN = 'N'
           AND TMC.MEMBER_NO = inMemberNo
           AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
           AND AA.SITE_NO = 1
           order by 3 desc
           ) T;
    
     
    END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCuoponDcValue
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
    
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
        IF inMemberNo IS NULL THEN
             SELECT
               distinct FIRST_VALUE(T.COUPON_DC_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_DC_VALUE INTO returnValue
             FROM (
                    SELECT
                        AA.GOODS_NO,
                        AA.SALE_PRICE,
                         ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                        AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_DC_AMT,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                        AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_APPLY_AMT,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        AA.COUPON_BNF_DC_AMT
                        END AS COUPON_DC_VALUE,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                        END AS COUPON_DC_RATE,
                        AA.COUPON_NO,
                        AA.COUPON_KIND_CD,
                        AA.COUPON_QTT_LIMIT_CD,
                        AA.COUPON_QTT_LIMIT_CNT,
                        AA.REG_DTTM,
                        AA.COUPON_NM,
                        AA.COUPON_DSCRT,
                        AA.COUPON_SOLO_USE_YN,
                        AA.COUPON_BNF_CD,
                        AA.COUPON_BNF_VALUE,
                        AA.COUPON_BNF_DC_AMT,
                        AA.COUPON_BNF_TXT,
                        TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                        TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                        AA.COUPON_APPLY_PERIOD_CD,
                        AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                        AA.COUPON_APPLY_SCOPE_CD,
                        AA.COUPON_APPLY_LIMIT_CD,
                        AA.COUPON_USE_LIMIT_AMT,
                        AA.COUPON_USE_YN,
                        AA.COUPON_DUPLT_DWLD_PSB_YN,
                        AA.OFFLINE_ONLY_YN,
                        (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                      FROM (
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            ,TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TCTG.GOODS_NO = inGoodsNo
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               
                               AND TC.DEL_YN <> 'Y'
                                
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                          FROM TP_COUPON_TARGET_GOODS
                                                         WHERE GOODS_NO = inGoodsNo)
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               AND TCTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN
                                   (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                     WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                      
                                                      ))
                                   )
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC
                             WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.SITE_NO = 1
                           ) AA
                     WHERE AA.COUPON_USE_YN = 'Y'
                       AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                       AND AA.DEL_YN = 'N'
                       AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                            OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                       AND AA.SITE_NO = 1
                       ORDER BY 3 DESC
                    ) T
                     
                    where T.COUPON_QTT_LIMIT_CD = '01'
                    or (T.COUPON_QTT_LIMIT_CD != '01'
                    and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_DC_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_DC_VALUE INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   order by 3 desc
                   ) T;
         END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponDcRate
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
      IF inMemberNo IS NULL THEN
         SELECT
           distinct FIRST_VALUE(T.COUPON_DC_RATE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_DC_RATE INTO returnValue
         FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                     ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    AA.COUPON_BNF_TXT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN,
                    AA.COUPON_DUPLT_DWLD_PSB_YN,
                    AA.OFFLINE_ONLY_YN,
                    (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        ,TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           
                           AND TC.DEL_YN <> 'Y'
                            
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                                              )
                                             )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                                  )
                                                 )
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                       ) AA
                 WHERE AA.COUPON_USE_YN = 'Y'
                   AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                   AND AA.DEL_YN = 'N'
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   ORDER BY 3 DESC
                ) T
                 
                where T.COUPON_QTT_LIMIT_CD = '01'
                or (T.COUPON_QTT_LIMIT_CD != '01'
                and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_DC_RATE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_DC_RATE INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                                              )
                                             )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  
                                                                  )
                                                  )
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   order by 3 desc
                   ) T;
         END IF;
                    
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponDcAmt
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
        IF inMemberNo IS NULL THEN
             SELECT
               distinct FIRST_VALUE(T.COUPON_DC_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_DC_AMT INTO returnValue
             FROM (
                    SELECT
                        AA.GOODS_NO,
                        AA.SALE_PRICE,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                        AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_DC_AMT,
                        ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                        AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                        END) AS COUPON_APPLY_AMT,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        AA.COUPON_BNF_DC_AMT
                        END AS COUPON_DC_VALUE,
                        CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                        ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                        END AS COUPON_DC_RATE,
                        AA.COUPON_NO,
                        AA.COUPON_KIND_CD,
                        AA.COUPON_QTT_LIMIT_CD,
                        AA.COUPON_QTT_LIMIT_CNT,
                        AA.REG_DTTM,
                        AA.COUPON_NM,
                        AA.COUPON_DSCRT,
                        AA.COUPON_SOLO_USE_YN,
                        AA.COUPON_BNF_CD,
                        AA.COUPON_BNF_VALUE,
                        AA.COUPON_BNF_DC_AMT,
                        AA.COUPON_BNF_TXT,
                        TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                        TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                        AA.COUPON_APPLY_PERIOD_CD,
                        AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                        AA.COUPON_APPLY_SCOPE_CD,
                        AA.COUPON_APPLY_LIMIT_CD,
                        AA.COUPON_USE_LIMIT_AMT,
                        AA.COUPON_USE_YN,
                        AA.COUPON_DUPLT_DWLD_PSB_YN,
                        AA.OFFLINE_ONLY_YN,
                        (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                      FROM (
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            ,TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TCTG.GOODS_NO = inGoodsNo
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               
                               AND TC.DEL_YN <> 'Y'
                                
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A
                                                                  )
                                                  )
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                             WHERE TC.COUPON_NO = TCTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                          FROM TP_COUPON_TARGET_GOODS
                                                         WHERE GOODS_NO = inGoodsNo)
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '01'
                               AND TC.SITE_NO = 1
                               AND TCTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                             WHERE TC.COUPON_NO = CTG.COUPON_NO
                               AND TC.COUPON_NO NOT IN
                                   (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                     WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                      
                                                                      )
                                                      )
                                   )
                               AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.COUPON_APPLY_TARGET_CD = '02'
                               AND TC.SITE_NO = 1
                               AND CTG.USE_YN = 'Y'
                            UNION
                            SELECT inGoodsNo AS GOODS_NO
                            , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                            , TC.*
                              FROM TP_COUPON TC
                             WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                               AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                               AND TC.SITE_NO = 1
                           ) AA
                     WHERE AA.COUPON_USE_YN = 'Y'
                       AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                       AND AA.DEL_YN = 'N'
                       AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                            OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                       AND AA.SITE_NO = 1
                       ORDER BY 3 DESC
                    ) T
                     
                    where T.COUPON_QTT_LIMIT_CD = '01'
                    or (T.COUPON_QTT_LIMIT_CD != '01'
                    and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
        ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_DC_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_DC_AMT INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                                              )
                                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                                  )
                                                 )
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   order by 3 desc
                   ) T;
         END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCuoponApplyAmt
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);
ctgNo VARCHAR2(32767);
ctgNoArr VARCHAR2(32767);

BEGIN
       
      IF inMemberNo IS NULL THEN
         SELECT
           distinct FIRST_VALUE(T.COUPON_APPLY_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_APPLY_AMT INTO returnValue
         FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    AA.COUPON_BNF_TXT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN,
                    AA.COUPON_DUPLT_DWLD_PSB_YN,
                    AA.OFFLINE_ONLY_YN,
                    (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        ,TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           
                           AND TC.DEL_YN <> 'Y'
                            
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                              SELECT
                                                    A.TMP_CTG_NO
                                              FROM
                                              (
                                                    select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                    from TG_CTG
                                                    start with CTG_NO IN (
                                                    SELECT
                                                        CTG_NO
                                                      FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                     WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                       AND TG.GOODS_NO = inGoodsNo
                                                       AND TG.SITE_NO = 1
                                                    )
                                                    and SITE_NO = 1
                                                    connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                ) A
                                            )
                                           )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                      SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                    )
                                                  )
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                       ) AA
                 WHERE AA.COUPON_USE_YN = 'Y'
                   AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                   AND AA.DEL_YN = 'N'
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   ORDER BY 3 DESC
                ) T
                 
                where T.COUPON_QTT_LIMIT_CD = '01'
                or (T.COUPON_QTT_LIMIT_CD != '01'
                and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
         ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_APPLY_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_APPLY_AMT INTO returnValue
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A    
                                                               )
                                              )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                  SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A
                                                                  )
                                                 )
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   ORDER BY 3 DESC
                   ) T;
    END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCouponBnfTxt
(
    inGoodsNo IN VARCHAR2
    ,inMemberNo IN VARCHAR2
)
RETURN VARCHAR2

IS

returnValue VARCHAR2(100);

BEGIN
     IF inMemberNo IS NULL THEN
         SELECT
           distinct FIRST_VALUE(T.COUPON_BNF_TXT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_BNF_TXT INTO returnValue
         FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    AA.COUPON_BNF_TXT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN,
                    AA.COUPON_DUPLT_DWLD_PSB_YN,
                    AA.OFFLINE_ONLY_YN,
                    (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        ,TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           
                           AND TC.DEL_YN <> 'Y'
                            
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                              
                                              ))
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                  ))
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                       ) AA
                 WHERE AA.COUPON_USE_YN = 'Y'
                   AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                   AND AA.DEL_YN = 'N'
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   ORDER BY 3 DESC
                ) T
                 
                where T.COUPON_QTT_LIMIT_CD = '01'
                or (T.COUPON_QTT_LIMIT_CD != '01'
                and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);

    ELSE 
    SELECT
      distinct FIRST_VALUE(T.COUPON_BNF_TXT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_BNF_TXT INTO returnValue
    FROM (
        SELECT
            AA.GOODS_NO,
            AA.SALE_PRICE,
            ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
            AA.COUPON_BNF_DC_AMT
            END) AS COUPON_DC_AMT,
            ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
            AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
            END) AS COUPON_APPLY_AMT,
            CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
            AA.COUPON_BNF_DC_AMT
            END AS COUPON_DC_VALUE,
            CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
            ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
            END AS COUPON_DC_RATE,
            AA.COUPON_NO,
            TMC.MEMBER_CP_NO,
            AA.COUPON_KIND_CD,
            AA.COUPON_QTT_LIMIT_CD,
            AA.COUPON_QTT_LIMIT_CNT,
            AA.REG_DTTM,
            AA.COUPON_NM,
            AA.COUPON_DSCRT,
            AA.COUPON_SOLO_USE_YN,
            AA.COUPON_BNF_CD,
            AA.COUPON_BNF_VALUE,
            AA.COUPON_BNF_DC_AMT,
            AA.COUPON_BNF_TXT,
            TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
            TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
            AA.COUPON_APPLY_PERIOD_CD,
            AA.COUPON_APPLY_ISSUE_AF_PERIOD,
            AA.COUPON_APPLY_SCOPE_CD,
            AA.COUPON_APPLY_LIMIT_CD,
            AA.COUPON_USE_LIMIT_AMT,
            AA.COUPON_USE_YN
          FROM (
                SELECT inGoodsNo AS GOODS_NO
                , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                , TC.*   
                  FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                 WHERE TC.COUPON_NO = TCTG.COUPON_NO
                   AND TCTG.GOODS_NO = inGoodsNo
                   AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                   AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                   AND TC.SITE_NO = 1
                   AND TCTG.USE_YN = 'Y' 
                   AND TC.OFFLINE_ONLY_YN <> 'Y' 
                UNION
                SELECT inGoodsNo AS GOODS_NO
                , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                , TC.* 
                  FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                 WHERE TC.COUPON_NO = CTG.COUPON_NO
                   AND TC.SITE_NO = 1
                   AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                      WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                      
                                      
                                      ))
                   AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                   AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                   AND CTG.USE_YN = 'Y' 
                   AND TC.OFFLINE_ONLY_YN <> 'Y' 
                UNION
                SELECT inGoodsNo AS GOODS_NO
                , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                , TC.*   
                  FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                 WHERE TC.COUPON_NO = TCTG.COUPON_NO
                   AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                              FROM TP_COUPON_TARGET_GOODS
                                             WHERE GOODS_NO = inGoodsNo)
                   AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                   AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                   AND TC.SITE_NO = 1
                   AND TCTG.USE_YN = 'Y' 
                   AND TC.OFFLINE_ONLY_YN <> 'Y'
                  
                UNION
                SELECT inGoodsNo AS GOODS_NO
                , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                , TC.*    
                  FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                 WHERE TC.COUPON_NO = CTG.COUPON_NO
                   AND TC.COUPON_NO NOT IN
                       (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                         WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                          WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                          
                                          ))
                       )
                   AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                   AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                   AND TC.SITE_NO = 1
                   AND CTG.USE_YN = 'Y'
                    
                   AND TC.OFFLINE_ONLY_YN <> 'Y'
                   
                UNION
                SELECT inGoodsNo AS GOODS_NO
                , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                , TC.*   
                  FROM TP_COUPON TC
                 WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                   AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                   AND TC.SITE_NO = 1                    
                   AND TC.OFFLINE_ONLY_YN <> 'Y'                   
               ) AA, TC_MEMBER_CP TMC
         WHERE AA.COUPON_NO = TMC.COUPON_NO
           AND AA.COUPON_USE_YN = 'Y'
           AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
           AND TMC.USE_YN = 'N'
           AND AA.DEL_YN = 'N'
           AND TMC.MEMBER_NO = inMemberNo
           AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
           AND AA.SITE_NO = 1
           order by 3 desc
           ) T;
    
     
    END IF;
    RETURN returnValue;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create view V_SEARCH_PRODUCT as
SELECT /*+ INDEX(GDS IDX_TG_GOODS_003)   INDEX(ITM IDX_TG_ITEM_001) */
          (SELECT REGEXP_REPLACE (
                     LISTAGG (
                        LPAD (
                           SPLIT (fn_getCtg4lvlNo (1, TGC.CTG_NO, '>'),
                                  1,
                                  '>'),
                           4,
                           '0'),
                        ',')
                     WITHIN GROUP (ORDER BY TGC.CTG_NO),
                     '([^,]+)(,\1)*(,|$)',
                     '\1\3')
                     AS CTG_ARR
             FROM TG_GOODS_CTG TGC
            WHERE TGC.SITE_NO = GDS.SITE_NO AND TGC.GOODS_NO = GDS.GOODS_NO)
             ctg_no1,
          (SELECT REGEXP_REPLACE (
                     LISTAGG (
                        LPAD (
                           SPLIT (fn_getCtg4lvlNo (1, TGC.CTG_NO, '>'),
                                  2,
                                  '>'),
                           4,
                           '0'),
                        ',')
                     WITHIN GROUP (ORDER BY TGC.CTG_NO),
                     '([^,]+)(,\1)*(,|$)',
                     '\1\3')
                     AS CTG_ARR
             FROM TG_GOODS_CTG TGC
            WHERE TGC.SITE_NO = GDS.SITE_NO AND TGC.GOODS_NO = GDS.GOODS_NO)
             ctg_no2,
          (SELECT REGEXP_REPLACE (
                     LISTAGG (
                        LPAD (
                           SPLIT (fn_getCtg4lvlNo (1, TGC.CTG_NO, '>'),
                                  3,
                                  '>'),
                           4,
                           '0'),
                        ',')
                     WITHIN GROUP (ORDER BY TGC.CTG_NO),
                     '([^,]+)(,\1)*(,|$)',
                     '\1\3')
                     AS CTG_ARR
             FROM TG_GOODS_CTG TGC
            WHERE TGC.SITE_NO = GDS.SITE_NO AND TGC.GOODS_NO = GDS.GOODS_NO)
             ctg_no3,
          (SELECT REGEXP_REPLACE (
                     LISTAGG (
                        LPAD (
                           SPLIT (fn_getCtg4lvlNo (1, TGC.CTG_NO, '>'),
                                  4,
                                  '>'),
                           4,
                           '0'),
                        ',')
                     WITHIN GROUP (ORDER BY TGC.CTG_NO),
                     '([^,]+)(,\1)*(,|$)',
                     '\1\3')
                     AS CTG_ARR
             FROM TG_GOODS_CTG TGC
            WHERE TGC.SITE_NO = GDS.SITE_NO AND TGC.GOODS_NO = GDS.GOODS_NO)
             ctg_no4,
          GDS.SEO_SEARCH_WORD,
          GDS.GOODS_NO,
          GDS.GOODS_TYPE_CD,
          GDS.SELLER_NO,
          (SELECT SELLER_NM
             FROM TS_SELLER
            WHERE SELLER_NO = GDS.SELLER_NO)
             AS SELLER_NM,
          (SELECT SELLER_CMS_RATE
             FROM TS_SELLER
            WHERE SELLER_NO = GDS.SELLER_NO)
             AS SELLER_CMS_RATE,
          GDS.GOODS_NM,
          GDS.ITEM_NO,
          GDS.GOODS_SALE_STATUS_CD,
          fn_getCodeNm ('GOODS_SALE_STATUS_CD', GDS.GOODS_SALE_STATUS_CD)
             AS GOODS_SALE_STATUS_NM,
          GDS.DISP_YN,
          GDS.DEL_YN,
          GDS.GOODSEACH_DLVRC AS GOODS_DLVRC,
          GDS.RSV_ONLY_YN,
          GDS.DLVR_SET_CD,
          GDS.PACK_UNIT_DLVRC,
          TS.DEFAULT_DLVRC_TYPE_CD,
          TS.DEFAULT_DLVRC,
          TS.DEFAULT_DLVR_MIN_DLVRC,
          (CASE
              WHEN GDS.DLVR_SET_CD = '2'
              THEN
                 0
              WHEN GDS.DLVR_SET_CD = '3'
              THEN
                 NVL (GDS.GOODSEACH_DLVRC, 0)
              WHEN GDS.DLVR_SET_CD = '4'
              THEN
                 NVL (GDS.PACK_UNIT_DLVRC, 0)
              ELSE
                 (CASE
                     WHEN TS.DEFAULT_DLVRC_TYPE_CD = '2'
                     THEN
                        NVL (TS.DEFAULT_DLVRC, 0)
                     WHEN TS.DEFAULT_DLVRC_TYPE_CD = '3'
                     THEN
                        NVL (TS.DEFAULT_DLVR_MIN_DLVRC, 0)
                     ELSE
                        0
                  END)
           END)
             AS GOODSEACH_DLVRC,
          GDS.MODEL_NM,
          GDS.PR_WORDS,
          GDS.MMFT,
          fn_getGoodsImgPath (GDS.GOODS_NO, '01') AS GOODS_IMG_01,
          fn_getGoodsImgPath (GDS.GOODS_NO, '02') AS GOODS_IMG_02,
          fn_getGoodsImgPath (GDS.GOODS_NO, '03') AS GOODS_IMG_03,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'A') AS GOODS_DISP_IMG_A,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'B') AS GOODS_DISP_IMG_B,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'C') AS GOODS_DISP_IMG_C,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'D') AS GOODS_DISP_IMG_D,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'E') AS GOODS_DISP_IMG_E,
          fn_getGoodsDispImgPath (GDS.GOODS_NO, 'M') AS GOODS_DISP_IMG_M,
          (SELECT B.IMG_PATH || '_' || B.IMG_NM
             FROM TG_GOODS_IMG_SET A, TG_GOODS_IMG_DTL B
            WHERE     A.GOODS_IMGSET_NO = B.GOODS_IMGSET_NO
                  AND A.GOODS_NO = GDS.GOODS_NO
                  AND B.GOODS_IMG_TYPE = '02'
                  AND A.DLGT_IMG_YN = 'N'
                  AND ROWNUM = 1)
             AS GOODS_THUM_IMG,
          fn_getGoodsIcon (GDS.GOODS_NO, '5') AS ICON_IMGS,
          GDS.REG_DTTM,
          GDS.UPD_DTTM,
          GDS.DEL_DTTM,
          NVL (GDS.ACCM_SALE_AMT, 0) AS ACCM_SALE_AMT,
          NVL (GDS.ACCM_SALE_CNT, 0) AS ACCM_SALE_CNT,
          NVL (GDS.ACCM_GOODSLETT_CNT, 0) AS ACCM_GOODSLETT_CNT,
          GDS.GOODS_SVMN_POLICY_USE_YN,
          NVL (GDS.GOODS_SVMN_AMT, 0) AS GOODS_SVMN_AMT,
          NVL (GDS.GOODS_SCORE, 0) AS GOODS_SCORE,
          GDS.BRAND_NO,
          fn_getBrandNm (GDS.BRAND_NO) AS BRAND_NM,
          ITM.ITEM_NM,
          NVL (ITM.CUSTOMER_PRICE, 0) AS CUSTOMER_PRICE,
          NVL (ITM.SALE_PRICE, 0) AS SALE_PRICE,
          DECODE (NVL (ITM.CUSTOMER_PRICE, 0),
                  0, 0,
                  100 - (ITM.SALE_PRICE / ITM.CUSTOMER_PRICE) * 100)
             AS SALE_RATE,
          NVL (ITM.SUPPLY_PRICE, 0) AS SUPPLY_PRICE,
          ITM.SEP_SUPPLY_PRICE_YN AS SEP_SUPPLY_PRICE_YN,
          CONCAT (
             ROUND (
                  (ITM.SALE_PRICE - ITM.SUPPLY_PRICE)
                / DECODE (ITM.SALE_PRICE * 100,
                          0, NULL,
                          ITM.SALE_PRICE * 100)),
             '%')
             AS COMMISION_RATE,
          NVL (
             (SELECT MAX (PRMT_DC_VALUE)
                FROM TP_PROMOTION TP, TP_PROMOTION_TARGET_GOODS TPTG
               WHERE     TP.PRMT_NO = TPTG.PRMT_NO
                     AND TPTG.GOODS_NO = GDS.GOODS_NO
                     AND TO_CHAR (SYSDATE, 'YYYY-MM-DD HH24:MI:SS') BETWEEN TO_CHAR (
                                                                               TP.APPLY_START_DTTM,
                                                                               'YYYY-MM-DD HH24:MI:SS')
                                                                        AND TO_CHAR (
                                                                               TP.APPLY_END_DTTM,
                                                                               'YYYY-MM-DD HH24:MI:SS')
                     AND TP.USE_YN = 'Y'
                     AND TP.DEL_YN = 'N'),
             0)
             AS PRMT_DC_VALUE,
          (SELECT MAX (PRMT_DC_GB_CD)
             FROM TP_PROMOTION TP, TP_PROMOTION_TARGET_GOODS TPTG
            WHERE     TP.PRMT_NO = TPTG.PRMT_NO
                  AND TPTG.GOODS_NO = GDS.GOODS_NO
                  AND TO_CHAR (SYSDATE, 'YYYY-MM-DD HH24:MI:SS') BETWEEN TO_CHAR (
                                                                            TP.APPLY_START_DTTM,
                                                                            'YYYY-MM-DD HH24:MI:SS')
                                                                     AND TO_CHAR (
                                                                            TP.APPLY_END_DTTM,
                                                                            'YYYY-MM-DD HH24:MI:SS')
                  AND TP.USE_YN = 'Y'
                  AND TP.DEL_YN = 'N')
             AS PRMT_DC_GB_CD,
          NVL (ITM.STOCK_QTT, 0) AS STOCK_QTT,
          (CASE
              WHEN TS.STOCK_SET_YN = 'Y' AND TS.AVAIL_STOCK_SALE_YN = 'Y'
              THEN
                 NVL (TS.AVAIL_STOCK_QTT, 0)
              ELSE
                 0
           END)
             AS AVAIL_STOCK_QTT,
          GDS.ADULT_CERTIFY_YN,
          NVL (GDS.BASKET_SET_CNT, 0) AS BASKET_SET_CNT,
          NVL (GDS.FAVGOODS_SET_CNT, 0) AS FAVGOODS_SET_CNT,
          NVL (GDS.GOODS_INQ_CNT, 0) AS GOODS_INQ_CNT,
          GDS.SITE_NO,
          NVL (
             (  SELECT                                   --매출 금액 추가 2020.05.18
                      SUM (sale_amt) AS sale_amt
                  FROM (SELECT goods_no, sale_amt, ord_qtt
                          FROM to_ord_dtl
                         WHERE     reg_dttm BETWEEN SYSDATE - 30 AND SYSDATE
                               AND return_cd IS NULL
                        UNION ALL
                        SELECT goods_no, sale_amt, ord_qtt
                          FROM to_visit_rsv_dtl
                         WHERE reg_dttm BETWEEN SYSDATE - 30 AND SYSDATE)
                 WHERE goods_no = GDS.GOODS_NO
              GROUP BY goods_no),
             0)
             AS sale_amt,
          NVL (
             (  SELECT                                   --매출 수량 추가 2020.05.18
                      SUM (ord_qtt) AS ord_qtt
                  FROM (SELECT goods_no, sale_amt, ord_qtt
                          FROM to_ord_dtl
                         WHERE     reg_dttm BETWEEN SYSDATE - 30 AND SYSDATE
                               AND return_cd IS NULL
                        UNION ALL
                        SELECT goods_no, sale_amt, ord_qtt
                          FROM to_visit_rsv_dtl
                         WHERE reg_dttm BETWEEN SYSDATE - 30 AND SYSDATE)
                 WHERE goods_no = GDS.GOODS_NO
              GROUP BY goods_no),
             0)
             AS ord_qtt,
          (SELECT fn_getCuoponApplyAmt (GDS.GOODS_NO, '')
             FROM DUAL)
             AS COUPON_APPLY_AMT,
          (SELECT fn_getCouponBnfCd (GDS.GOODS_NO, '')
             FROM DUAL)
             AS COUPON_BNF_CD,
          (SELECT fn_getCouponBnfTxt (GDS.GOODS_NO, '')
             FROM DUAL)
             AS COUPON_BNF_TXT,
             (SELECT fn_getCouponDcRate (GDS.GOODS_NO, '')
             FROM DUAL)
             AS COUPON_DC_RATE
     FROM TG_GOODS GDS,
          TG_ITEM ITM
          LEFT OUTER JOIN TI_ERP_PRD_MAPPING TPM
             ON     TPM.MALL_GOODS_NO = ITM.GOODS_NO
                AND TPM.MALL_ITM_CODE = ITM.ITEM_NO,
          TS_SITE TS
    WHERE     GDS.ITEM_NO = ITM.ITEM_NO
          AND GDS.SITE_NO = TS.SITE_NO
          AND GDS.SITE_NO = 1
          AND GDS.GOODS_CONTS_GB_CD = '01'
/

create FUNCTION             fn_getCuoponAvailable
(
    inGoodsNo IN VARCHAR2
    ,inGubun IN VARCHAR2
    ,inMemberNo IN VARCHAR2
)
RETURN VARCHAR2

IS

returnApplyAmt VARCHAR2(100);
returnDcAmt VARCHAR2(100);
returnDcRate VARCHAR2(100);
returnDcValue VARCHAR2(100);
returnBnfCd VARCHAR2(100);
returnBnfValue VARCHAR2(100);
returnBnfTxt VARCHAR2(100);

ctgNo VARCHAR2(32767);
ctgNoArr VARCHAR2(32767);

BEGIN
       
      IF inMemberNo IS NULL THEN
         SELECT
           distinct FIRST_VALUE(T.COUPON_APPLY_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_APPLY_AMT ,
            FIRST_VALUE(T.COUPON_DC_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_DC_AMT ,
            FIRST_VALUE(T.COUPON_DC_RATE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_DC_RATE ,
            FIRST_VALUE(T.COUPON_DC_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_DC_VALUE ,
            FIRST_VALUE(T.COUPON_BNF_CD) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_BNF_CD ,
            FIRST_VALUE(T.COUPON_BNF_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_BNF_VALUE,
            FIRST_VALUE(T.COUPON_BNF_TXT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_BNF_TXT
            INTO returnApplyAmt,returnDcAmt,returnDcRate,returnDcValue,returnBnfCd,returnBnfValue,returnBnfTxt          
         FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    AA.COUPON_BNF_TXT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN,
                    AA.COUPON_DUPLT_DWLD_PSB_YN,
                    AA.OFFLINE_ONLY_YN,
                    (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        ,TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           
                           AND TC.DEL_YN <> 'Y'
                            
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                              SELECT
                                                    A.TMP_CTG_NO
                                              FROM
                                              (
                                                    select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                    from TG_CTG
                                                    start with CTG_NO IN (
                                                    SELECT
                                                        CTG_NO
                                                      FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                     WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                       AND TG.GOODS_NO = inGoodsNo
                                                       AND TG.SITE_NO = 1
                                                    )
                                                    and SITE_NO = 1
                                                    connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                ) A
                                            )
                                           )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                      SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                    )
                                                  )
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                       ) AA
                 WHERE AA.COUPON_USE_YN = 'Y'
                   AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                   AND AA.DEL_YN = 'N'
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   ORDER BY 3 DESC
                ) T
                 
                where T.COUPON_QTT_LIMIT_CD = '01'
                or (T.COUPON_QTT_LIMIT_CD != '01'
                and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
         ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_APPLY_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_APPLY_AMT, 
                FIRST_VALUE(T.COUPON_DC_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_DC_AMT ,
                FIRST_VALUE(T.COUPON_DC_RATE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_DC_RATE ,
                FIRST_VALUE(T.COUPON_DC_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_DC_VALUE ,
                FIRST_VALUE(T.COUPON_BNF_CD) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_BNF_CD ,
                FIRST_VALUE(T.COUPON_BNF_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_BNF_VALUE,
                FIRST_VALUE(T.COUPON_BNF_TXT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_BNF_TXT
            INTO returnApplyAmt,returnDcAmt,returnDcRate,returnDcValue,returnBnfCd,returnBnfValue,returnBnfTxt   
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    AA.COUPON_BNF_TXT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A    
                                                               )
                                              )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                  SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A
                                                                  )
                                                 )
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   ORDER BY 3 DESC
                   ) T;
    END IF;
    
    IF inGubun ='APPLYAMT' THEN
        RETURN returnApplyAmt;
    ELSIF inGubun = 'DCAMT' THEN
        RETURN returnDcAmt;
    ELSIF inGubun = 'DCTRATE' THEN
        RETURN returnDcRate;
    ELSIF inGubun = 'DCVALUE' THEN
        RETURN returnDcValue;
    ELSIF inGubun = 'BNFCD' THEN
        RETURN returnBnfCd;
    ELSIF inGubun = 'BNFVALUE' THEN
        RETURN returnBnfValue;
    ELSIF inGubun = 'BNFTXT' THEN
        RETURN returnBnfTxt;
    ELSE
        RETURN NULL;
    END IF;
     
    

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/

create FUNCTION             fn_getCuoponAvailInfo
(
    inGoodsNo IN VARCHAR2
    ,inGubun IN VARCHAR2
    ,inMemberNo IN VARCHAR2
)
RETURN VARCHAR2

IS

returnApplyAmt VARCHAR2(100);
returnDcAmt VARCHAR2(100);
returnDcRate VARCHAR2(100);
returnDcValue VARCHAR2(100);
returnBnfCd VARCHAR2(100);
returnBnfValue VARCHAR2(100);
returnBnfTxt VARCHAR2(100);

ctgNo VARCHAR2(32767);
ctgNoArr VARCHAR2(32767);

BEGIN
       
      IF inMemberNo IS NULL THEN
         SELECT
           distinct FIRST_VALUE(T.COUPON_APPLY_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_APPLY_AMT ,
            FIRST_VALUE(T.COUPON_DC_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_DC_AMT ,
            FIRST_VALUE(T.COUPON_DC_RATE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_DC_RATE ,
            FIRST_VALUE(T.COUPON_DC_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_DC_VALUE ,
            FIRST_VALUE(T.COUPON_BNF_CD) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_BNF_CD ,
            FIRST_VALUE(T.COUPON_BNF_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_BNF_VALUE,
            FIRST_VALUE(T.COUPON_BNF_TXT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC) as COUPON_BNF_TXT
            INTO returnApplyAmt,returnDcAmt,returnDcRate,returnDcValue,returnBnfCd,returnBnfValue,returnBnfTxt          
         FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(NVL(AA.COUPON_BNF_DC_AMT / DECODE(AA.SALE_PRICE, 0, null, AA.SALE_PRICE), 0)*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    AA.COUPON_BNF_TXT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN,
                    AA.COUPON_DUPLT_DWLD_PSB_YN,
                    AA.OFFLINE_ONLY_YN,
                    (SELECT COUNT(1) FROM TC_MEMBER_CP TMC WHERE TMC.COUPON_NO = AA.COUPON_NO) AS ISSUE_CNT
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        ,TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           
                           AND TC.DEL_YN <> 'Y'
                            
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                              SELECT
                                                    A.TMP_CTG_NO
                                              FROM
                                              (
                                                    select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                    from TG_CTG
                                                    start with CTG_NO IN (
                                                    SELECT
                                                        CTG_NO
                                                      FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                     WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                       AND TG.GOODS_NO = inGoodsNo
                                                       AND TG.SITE_NO = 1
                                                    )
                                                    and SITE_NO = 1
                                                    connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                ) A
                                            )
                                           )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '01'
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                      SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A                                                  
                                                    )
                                                  )
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.COUPON_APPLY_TARGET_CD = '02'
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                       ) AA
                 WHERE AA.COUPON_USE_YN = 'Y'
                   AND (AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97' AND AA.COUPON_KIND_CD != '05' AND AA.COUPON_KIND_CD != '07')
                   AND AA.DEL_YN = 'N'
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(AA.APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(AA.APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   ORDER BY 3 DESC
                ) T
                 
                where T.COUPON_QTT_LIMIT_CD = '01'
                or (T.COUPON_QTT_LIMIT_CD != '01'
                and T.ISSUE_CNT < T.COUPON_QTT_LIMIT_CNT);
         ELSE 
            SELECT
              distinct FIRST_VALUE(T.COUPON_APPLY_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_APPLY_AMT, 
                FIRST_VALUE(T.COUPON_DC_AMT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_DC_AMT ,
                FIRST_VALUE(T.COUPON_DC_RATE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_DC_RATE ,
                FIRST_VALUE(T.COUPON_DC_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_DC_VALUE ,
                FIRST_VALUE(T.COUPON_BNF_CD) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_BNF_CD ,
                FIRST_VALUE(T.COUPON_BNF_VALUE) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_BNF_VALUE,
                FIRST_VALUE(T.COUPON_BNF_TXT) OVER(PARTITION BY T.GOODS_NO ORDER BY T.COUPON_DC_AMT DESC,T.MEMBER_CP_NO DESC) as COUPON_BNF_TXT
            INTO returnApplyAmt,returnDcAmt,returnDcRate,returnDcValue,returnBnfCd,returnBnfValue,returnBnfTxt   
            FROM (
                SELECT
                    AA.GOODS_NO,
                    AA.SALE_PRICE,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE-(AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100)) ELSE
                    AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_DC_AMT,
                    ROUND(CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.SALE_PRICE*((100-AA.COUPON_BNF_VALUE)/100) ELSE
                    AA.SALE_PRICE - AA.COUPON_BNF_DC_AMT
                    END) AS COUPON_APPLY_AMT,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    AA.COUPON_BNF_DC_AMT
                    END AS COUPON_DC_VALUE,
                    CASE WHEN AA.COUPON_BNF_CD ='01' THEN AA.COUPON_BNF_VALUE ELSE
                    ROUND(AA.COUPON_BNF_DC_AMT/AA.SALE_PRICE*100)
                    END AS COUPON_DC_RATE,
                    AA.COUPON_NO,
                    TMC.MEMBER_CP_NO,
                    AA.COUPON_KIND_CD,
                    AA.COUPON_QTT_LIMIT_CD,
                    AA.COUPON_QTT_LIMIT_CNT,
                    AA.REG_DTTM,
                    AA.COUPON_NM,
                    AA.COUPON_DSCRT,
                    AA.COUPON_SOLO_USE_YN,
                    AA.COUPON_BNF_CD,
                    AA.COUPON_BNF_VALUE,
                    AA.COUPON_BNF_DC_AMT,
                    AA.COUPON_BNF_TXT,
                    TO_CHAR(AA.APPLY_START_DTTM,'YYYYMMDDHH24MI') APPLY_START_DTTM,
                    TO_CHAR(AA.APPLY_END_DTTM,'YYYYMMDDHH24MI') APPLY_END_DTTM,
                    AA.COUPON_APPLY_PERIOD_CD,
                    AA.COUPON_APPLY_ISSUE_AF_PERIOD,
                    AA.COUPON_APPLY_SCOPE_CD,
                    AA.COUPON_APPLY_LIMIT_CD,
                    AA.COUPON_USE_LIMIT_AMT,
                    AA.COUPON_USE_YN
                  FROM (
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TCTG.GOODS_NO = inGoodsNo
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.* 
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.SITE_NO = 1
                           AND CTG.CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                              WHERE CTG_NO IN (
                                                    SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A    
                                                               )
                                              )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('02')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND CTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y' 
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC, TP_COUPON_TARGET_GOODS TCTG
                         WHERE TC.COUPON_NO = TCTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN (SELECT COUPON_NO
                                                      FROM TP_COUPON_TARGET_GOODS
                                                     WHERE GOODS_NO = inGoodsNo)
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND TCTG.USE_YN = 'Y' 
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                          
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*    
                          FROM TP_COUPON TC, TP_COUPON_TARGET_CTG CTG
                         WHERE TC.COUPON_NO = CTG.COUPON_NO
                           AND TC.COUPON_NO NOT IN
                               (SELECT COUPON_NO FROM TP_COUPON_TARGET_CTG
                                 WHERE CTG_NO IN (SELECT CTG_NO FROM TP_COUPON_TARGET_CTG
                                                  WHERE CTG_NO IN (
                                                  SELECT
                                                            A.TMP_CTG_NO
                                                      FROM
                                                      (
                                                            select distinct CTG_NO as TMP_CTG_NO, UP_CTG_NO, CTG_LVL
                                                            from TG_CTG
                                                            start with CTG_NO IN (
                                                            SELECT
                                                                CTG_NO
                                                              FROM TG_GOODS TG, TG_GOODS_CTG CTG
                                                             WHERE TG.GOODS_NO = CTG.GOODS_NO
                                                               AND TG.GOODS_NO = inGoodsNo
                                                               AND TG.SITE_NO = 1
                                                            )
                                                            and SITE_NO = 1
                                                            connect by CTG_NO = prior UP_CTG_NO and SITE_NO = 1
                                                        ) A
                                                                  )
                                                 )
                               )
                           AND TC.COUPON_APPLY_LIMIT_CD IN ('03')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1
                           AND CTG.USE_YN = 'Y'
                            
                           AND TC.OFFLINE_ONLY_YN <> 'Y'
                           
                        UNION
                        SELECT inGoodsNo AS GOODS_NO
                        , (SELECT b.SALE_PRICE FROM TG_GOODS a , tg_item b  WHERE a.item_no=b.item_no and a.GOODS_NO=inGoodsNo) as SALE_PRICE
                        , TC.*   
                          FROM TP_COUPON TC
                         WHERE TC.COUPON_APPLY_LIMIT_CD IN ('01')
                           AND TC.COUPON_APPLY_SCOPE_CD IN ('01')
                           AND TC.SITE_NO = 1                    
                           AND TC.OFFLINE_ONLY_YN <> 'Y'                   
                       ) AA, TC_MEMBER_CP TMC
                 WHERE AA.COUPON_NO = TMC.COUPON_NO
                   AND AA.COUPON_USE_YN = 'Y'
                   AND AA.COUPON_KIND_CD != '99' AND AA.COUPON_KIND_CD != '97'
                   AND TMC.USE_YN = 'N'
                   AND AA.DEL_YN = 'N'
                   AND TMC.MEMBER_NO = inMemberNo
                   AND (TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')  BETWEEN TO_CHAR(TMC.CP_APPLY_START_DTTM,'YYYY-MM-DD HH24:MI:SS') AND TO_CHAR(TMC.CP_APPLY_END_DTTM,'YYYY-MM-DD HH24:MI:SS')
                        OR (AA.APPLY_START_DTTM IS NULL AND AA.APPLY_END_DTTM IS NULL))
                   AND AA.SITE_NO = 1
                   ORDER BY 3 DESC
                   ) T;
    END IF;
    /*
    IF inGubun ='APPLYAMT' THEN
        RETURN returnApplyAmt;
    ELSIF inGubun = 'DCAMT' THEN
        RETURN returnDcAmt;
    ELSIF inGubun = 'DCTRATE' THEN
        RETURN returnDcRate;
    ELSIF inGubun = 'DCVALUE' THEN
        RETURN returnDcValue;
    ELSIF inGubun = 'BNFCD' THEN
        RETURN returnBnfCd;
    ELSIF inGubun = 'BNFVALUE' THEN
        RETURN returnBnfValue;
    ELSIF inGubun = 'BNFTXT' THEN
        RETURN returnBnfTxt;
    ELSE
        RETURN NULL;
    END IF;
     */
     
    
    RETURN returnApplyAmt||'|'||returnDcAmt||'|'||returnDcRate||'|'||returnDcValue||'|'||returnBnfCd||'|'||returnBnfValue||'|'||returnBnfTxt;
    
     
    

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        return '';

END;
/


