/*
 * This file was generated by the Gradle 'init' task.
 */
//file:noinspection GroovyAssignabilityCheck

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    flatDir {
        dirs(
                "$projectDir/../libs",
                "$projectDir/../../libs",
                "$projectDir/../../../libs",
                "$projectDir/../../../../libs"
        )
    }
    maven {
        url = uri('https://repo.spring.io/release')
    }

    maven {
        url = uri('https://repo1.maven.org/maven2/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

// VM Option -Dprofile='dev'

def encoding = 'UTF-8'
def javaVersion = JavaVersion.VERSION_1_8
def springVersion = '4.3.0.RELEASE'
def springSecurityVersion = '4.1.0.RELEASE'
def springMobileVersion = '1.1.5.RELEASE'
def servletApiVersion = '3.1.0'
def servletJspVersion = '2.2'
def servletJstlVersion = '1.2'
def tilesVersion = '3.0.5'
def aspectjVersion = '1.8.5'
def slf4jVersion = '1.7.32'
def poiVersion = '3.13'
def jacksonFasterxmlVersion = '2.7.4'

/**
 *  하위 프로젝트에서 프로파일 사용 예
 */
class BuildProfile{
    static String getProfile() {
        def profile = System.properties.getProperty('spring.profiles.active', 'local') //ghjo dev -> local
        System.properties.setProperty('spring.profiles.active', profile)
        return profile
    }
}
def profile = BuildProfile.getProfile()

/**
 *  하위 프로젝트에서 target 사용 예
 *  def profile = BuildProfile.getProfile()
 */
class BuildTarget{
    static String getTarget() {
        String target = System.properties.getProperty('target', 'all')//ghjo all -> admin
        System.properties.setProperty('target', target)
        return  target
    }
}


version = System.properties.getProperty("revision", '0.0.1-SNAPSHOT')
group = 'net.danvi.dmall'

task printInfo {
    System.out.println("="*80)

    System.out.print("빌드 모드 : ")
    System.out.println(BuildProfile.getProfile())

    System.out.print("빌드 대상: ")
    System.out.println(BuildTarget.getTarget())

    System.out.print("빌드 버전 : ")
    System.out.println(version)

    System.out.println("="*80)
    Thread.sleep(1000)
}

dependencies {
    implementation "cglib:cglib-nodep:3.2.2"
    implementation "ch.qos.logback:logback-classic:1.2.10"
    implementation "ch.qos.logback:logback-core:1.2.10"
    implementation "commons-beanutils:commons-beanutils:1.8.0"
    implementation "commons-codec:commons-codec:1.15"
    implementation 'net.iharder:base64:2.3.9'
    implementation "commons-fileupload:commons-fileupload:1.3.1"
    implementation "commons-httpclient:commons-httpclient:3.1"
    implementation "commons-io:commons-io:2.5"
    implementation "commons-lang:commons-lang:2.6"
    implementation "commons-net:commons-net:3.5"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonFasterxmlVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonFasterxmlVersion}"
    implementation "com.googlecode.json-simple:json-simple:1.1.1"
    implementation "com.googlecode.ehcache-spring-annotations:ehcache-spring-annotations:1.2.0"
    implementation "com.navercorp.lucy:lucy-xss-servlet:2.0.0"
    implementation "com.sun.xml.bind:jaxb-impl:2.2.11"
    implementation "com.sun.xml.bind:jaxb-core:2.2.11"
    implementation "eu.bitwalker:UserAgentUtils:1.19"
    implementation "net.sf.json-lib:json-lib:2.2.3:jdk15"
    implementation "mysql:mysql-connector-java:5.1.39"
    implementation "org.aspectj:aspectjrt:${aspectjVersion}"
    implementation "org.aspectj:aspectjweaver:${aspectjVersion}"
    implementation 'org.apache.commons:commons-dbcp2:2.9.0'
    implementation "org.apache.commons:commons-exec:1.3"
    implementation "org.apache.cxf:cxf-rt-frontend-jaxws:3.0.3"
    implementation "org.apache.cxf:cxf-rt-transports-http:3.0.10"
    implementation "org.apache.cxf:cxf-rt-frontend-jaxrs:3.0.10"
    implementation "org.apache.poi:poi:${poiVersion}"
    implementation "org.apache.poi:poi-scratchpad:${poiVersion}"
    implementation "org.apache.poi:poi-ooxml:${poiVersion}"
    implementation "org.apache.poi:poi-ooxml-schemas:${poiVersion}"
    implementation "org.apache.poi:poi-excelant:${poiVersion}"
    implementation "org.apache.tiles:tiles-api:${tilesVersion}"
    implementation "org.apache.tiles:tiles-servlet:${tilesVersion}"
    implementation "org.apache.tiles:tiles-jsp:${tilesVersion}"
    implementation "org.apache.tiles:tiles-core:${tilesVersion}"
    implementation "org.apache.tiles:tiles-extras:${tilesVersion}"
    implementation "org.apache.tika:tika-core:1.13"
    implementation "org.apache.tomcat:tomcat-dbcp:8.5.2"
    implementation "org.hibernate:hibernate-validator:5.2.4.Final"
    implementation "org.imgscalr:imgscalr-lib:4.2"
    implementation "org.mybatis:mybatis:3.4.0"
    implementation "org.mybatis:mybatis-spring:1.3.0"
    implementation "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    implementation "org.slf4j:jul-to-slf4j:${slf4jVersion}"
    implementation "org.slf4j:log4j-over-slf4j:${slf4jVersion}"
    implementation "org.lazyluke:log4jdbc-remix:0.2.7"
    implementation "org.projectlombok:lombok:1.18.22"
    implementation "org.springframework.batch:spring-batch-core:3.0.7.RELEASE"
    implementation "org.springframework.mobile:spring-mobile-device:${springMobileVersion}"
    implementation "org.springframework.security:spring-security-web:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-config:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-taglibs:${springSecurityVersion}"
    implementation "org.springframework:spring-context:${springVersion}"
    implementation "org.springframework:spring-context-support:${springVersion}"
    implementation "org.springframework:spring-tx:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation "org.springframework:spring-orm:${springVersion}"
    implementation "org.springframework:spring-oxm:${springVersion}"
    implementation "org.springframework:spring-web:${springVersion}"
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation "org.springframework:spring-test:${springVersion}"
    implementation "org.jclarion:image4j:0.7"
    implementation "org.jdom:jdom2:2.0.6"
    implementation "org.json:json:20220320"
    implementation 'org.yaml:snakeyaml:1.30'
    implementation "javax.mail:mail:1.4.7"
    implementation "javax.servlet:jstl:${servletJstlVersion}"
    implementation "javax.validation:validation-api:1.1.0.Final"
    implementation "wsdl4j:wsdl4j:1.6.2"

    // implementation "javax.xml.bind:jaxb-api:2.3.1"
    // implementation 'com.sun.xml.ws:jaxws-rt:2.3.3'
    // implementation 'com.sun.xml.ws:rt:2.3.3'

    // local libs
    implementation "allthegate.mobile:AGSMobile:2.0"
    implementation "captcha:simple-captcha:1.2.1"
    implementation "dmallcore:core.$profile:0.0.1"
    implementation "dmallcore:core.model:0.0.1"
    implementation "dmallcore:core.service:0.0.1"
    implementation "dreamsecurity:dreamCrypto2:1.0.0"
    implementation "inicis:INIpay50:1.0.0"
    implementation "inicis:INIpay_Sample:1.3.0"
    implementation "inicis:log4j:1.2.14"
    implementation "inicis:xalan:1.0.0"
    implementation "inicis:ExecureCrypto:1.0.0"
    implementation "ipfilter:ip-filter-core:0.2"
    implementation "kcp:ConnectionKCP:1.0.0"
    implementation "kcp:jPpcliE:1.0.0"
    implementation "konan:commons-lang3:3.1"
    implementation "konan:docruzer:4.0"
//    implementation "konan:uber-ksf-client:1.2"
    implementation "konan:ksf-taglibs:1.2"
    implementation "lgdacom:XPayClient:1.0.0"
    implementation "nice:IPINClient:1.0.0"
    implementation "orcl:ojdbc6:11.2.0.4.0"
    implementation "sanselan:sanselan-incubator:1.0.0"

    compileOnly "javax.servlet:javax.servlet-api:${servletApiVersion}"
    compileOnly "javax.servlet.jsp:jsp-api:${servletJspVersion}"
    compileOnly "net.sf.ehcache:ehcache:2.10.2"
    annotationProcessor "org.projectlombok:lombok:1.18.22"

    testImplementation "junit:junit:4.12"
    testImplementation 'org.slf4j:slf4j-simple:1.7.36'
    testCompileOnly "org.projectlombok:lombok:1.18.22"
    testCompileOnly "javax.servlet:javax.servlet-api:${servletApiVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.22"
}


java.sourceCompatibility = javaVersion
java.targetCompatibility = javaVersion

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = encoding
    // 컴파일시 Warning 메시지 끄기
    options.warnings = false
    // options.compilerArgs.add('-Xlint:unchecked')
}


task setVMOptions{
    System.properties.setProperty("project.root", "$projectDir")
    System.out.println(System.properties.getProperty("project.root"))
    Thread.sleep(1000)
}



test {
    exclude '**/*'
}

